<?xml version="1.0" ?>
<!-- extension maven script -->
<project xmlns:j="jelly:core"  xmlns:u="jelly:util" xmlns:maven="jelly:maven" xmlns:deploy="deploy" default="pal">


<property name="server.dir" location="${basedir}/../server" />
<property name="implementations.dir" location="${basedir}/../implementations" />
<property name="working.dir" location="${basedir}/target/tmp" />

<goal name="pal" prereqs="astrogrid-clean,astrogrid-build-artifact" />


<!-- standard astrogrid goals -->
<goal name="astrogrid-install-artifact" prereqs="war:install" />
<goal name="astrogrid-deploy-artifact" prereqs="war:deploy" />
<goal name="astrogrid-install-snapshot" prereqs="war:install-snapshot" />
<goal name="astrogrid-deploy-snapshot" prereqs="war:deploy-snapshot" />
<goal name="astrogrid-build-artifact" prereqs="war" />
<goal name="astrogrid-build-snapshot" prereqs="war" />

<!-- hook to add our own things to the mix -->
<preGoal name="war:war">
   <echo message="pal: war:war"/>
    <attainGoal name="grab-resources" />
    <attainGoal name="configure-webapp" />
   <attainGoal name="webapp-site" />
</preGoal>


<goal name="grab-resources">
   <!-- extract various resources we need  -->
   <!-- see configure-webapp - looks like this is needed on classpath to run Axis Admin tool? jdt/mch -->
   <mkdir dir="${working.dir}" />
   <deploy:copy-deps todir="${working.dir}" />
   <unjar dest="${working.dir}" overwrite="true">
      <fileset dir="${working.dir}">
         <include name="astrogrid-*-client*.jar" />
         <include name="astrogrid-workflow-objects-*.jar" />
      </fileset>
      <patternset>
         <include name="wsdd/**" />
         <include name="xsd/**" />
         <include name="wsdl/**" />
      </patternset>
   </unjar>
</goal>

<!-- Create server-config.wsdd in WEB-INF directory that defines how Axis interprets each service
-->
<goal name="configure-webapp" description="set properties in web.xml, server-config.wsdd, etc">
   <echo message="pal: configure-webapp"/>
   <echo>Configuring the datacenter-only web interfaces</echo>
   <delete file="${basedir}/src/webapp/WEB-INF/server-config.xml" quiet="true"/>
   <!-- construct classpath to run axis under.
    necessary to do this, rather than just using 'maven.dependency.classpath' as there's 2 versioins of axis in the deps (arg).
    the real one, and a duff one used within the warehouse that has ogsa extensions. we want to make shore we get the real one -->
   <path id="axis.classpath">
        <fileset dir="${working.dir}">
                <exclude name="*ogsadai*" />
        </fileset>
   </path>
     <java classname="org.apache.axis.utils.Admin" dir="${maven.war.webapp.dir}/WEB-INF"
        classpathref="axis.classpath" fork="yes" failonerror="true">
        <arg value="server"/>
        <arg value="${basedir}/src/webapp/deploy.wsdd"/>
    </java>
    <echo>Configuring the cea web interface</echo>
   <!-- now run admin client over the processed wsdd file -->
   <java classname="org.apache.axis.utils.Admin" dir="${maven.war.webapp.dir}/WEB-INF"
        classpathref="axis.classpath" fork="yes" failonerror="true">
        <arg value="server"/>
        <arg value="${working.dir}/wsdd/CommonExecutionConnector-deploy.wsdd" />
    </java>
   <!-- finally, clean up -->
   <delete>
      <fileset dir="${working.dir}">
         <include name="*.jar" />
         <include name="wsdd/**" />
      </fileset>
   </delete>

</goal>

<goal name="webapp-site" prereqs="grab-resources" description="generate webapp docs">
   <echo>pal: generating webapp site into ${maven.war.webapp.dir}" </echo>
   <!-- first merge two doc sets - site xdocs take precendence  -->
   <property name="tmp.docs" location="${basedir}/target/webapp-docs-src" />
   <mkdir dir="${tmp.docs}" />
   <copy todir="${tmp.docs}">
      <fileset dir="${basedir}/site-xdocs" />
   </copy>
   <copy overwrite="false" todir="${tmp.docs}">
      <fileset dir="${basedir}/xdocs" />
   </copy>
   <!-- now copy in schema n stuff -->
   <copy overwrite="false" todir="${tmp.docs}">
      <fileset dir="${working.dir}">
         <include name="wsdl/**" />
         <include name="xsd/**" />
      </fileset>
   </copy>
   <j:set var="maven.docs.dest" value="${maven.war.webapp.dir}" />
   <j:set var="maven.docs.src" value="${tmp.docs}" />
   <j:set var="maven.xdoc.poweredby.title" value="Provided by Astrogrid" />
   <j:set var="maven.xdoc.poweredby.url" value="http://www.astrogrid.org" />
   <j:set var="maven.xdoc.poweredby.image" value="http://www.astrogrid.org/images/AGlogo" />
   <attainGoal name="xdoc:generate-from-pom" />
   <attainGoal name="xdoc" />
</goal>





<!--
boilerplate below here
-->
  <goal name="axis-declare-tasks">
      <taskdef resource="axis-tasks.properties"  classpathref="maven.dependency.classpath" />
  </goal>

</project>
