<?xml version="1.0" ?>
<!-- extension maven script -->
<project xmlns:j="jelly:core"  xmlns:u="jelly:util" xmlns:maven="jelly:maven" xmlns:deploy="deploy" default="pal">


<property name="server.dir" location="${basedir}/../server" />
<property name="delegate.dir" location="${basedir}/../client" />
<property name="implementations.dir" location="${basedir}/../implementations" />
<property name="webapp.root" location="${basedir}/target/pal" />
<property name="webapp.docs" location="${basedir}/target/webapp-docs" />


<goal name="pal">
  <attainGoal name="clean" />
  <echo>**** buiulding site **** </echo>
  <attainGoal name="site" />
  <echo>**** building webapp documentation ****</echo>
  <attainGoal name="webapp-site" />
  <echo>*** assembling war ***</echo>
  <attainGoal name="war:war" />

</goal>

<!-- hook to add our own things to the mix -->
<preGoal name="war:war">
	<copy todir="${webapp.root}" overwrite="yes">
		<fileset dir="${webapp.docs}" />
	</copy>
	<attainGoal name="grab-delegate" />
	<attainGoal name="grab-implementations" />
	<attainGoal name="configure-webapp" />
</preGoal>

<goal name="webapp-site" description="generate webapp docs to a temp direcotry, for inclusion later in webapp - work around for a bug that stops build">
	<echo> generating webapp site into ${webapp.docs}" </echo>
	<!-- first merge two doc sets - site xdocs take precendence  -->
	<property name="tmp.docs" location="${basedir}/target/webapp-docs-src" />
	<mkdir dir="${tmp.docs}" />
	<copy todir="${tmp.docs}">
		<fileset dir="${basedir}/site-xdocs" />
	</copy>
	<copy overwrite="false" todir="${tmp.docs}">
		<fileset dir="${basedir}/xdocs" />
	</copy>
	<j:set var="maven.docs.dest" value="${webapp.docs}" />
	<j:set var="maven.docs.src" value="${tmp.docs}" />
	<mkdir dir="${webapp.docs}" />
	<attainGoal name="site:generate" />
</goal>

<goal name="grab-delegate"  description="generate source and binary dists of the delegate, place in webapp, along with javadoc">
	<mkdir dir="${webapp.root}/delegate-dist" />
	<move todir="${webapp.root}/delegate-dist">
		<fileset dir="${delegate.dir}/target/distributions">
			<include name="*.zip" />
		</fileset>
	</move>
	<!-- maybe add bundle of the libs it depends on too??? -->
</goal>

<!-- not sure if we really want this..
<goal name="grab-server" description="generate site and source dists of the server. place source dist and javadoc of server in webapp">
	<maven:maven descriptor="${server.dir}/project.xml" goals="clean,site,dist:build-bin" />
	<mkdir dir="${webapp.root}/server" />
	<move todir="${webapp.root}/server">
		<fileset dir="${server.dir}/target/astrogrid-datacenter-server-HEAD/bin/astrogrid-datacenter-server-HEAD/docs" />
	</move>
	<mkdir dir="${webapp.root}/server-dist"/>
	<move todir="${webapp.root}/server-dist">
		<fileset dir="${server.dir}/target/distributions" />
	</move>
</goal>
-->


<goal name="grab-implementations" description="generate source and binary dists of the implementations, unzip into webapp.">

	<mkdir dir="${webapp.root}/implementations" />
	<unzip dest="${webapp.root}/implementations" >
		<fileset dir="${implementations.dir}">
			<include name="*/*/distributions/*.zip" />
		</fileset>
	</unzip>
</goal>

<goal name="configure-webapp" description="set properties in web.xml, server-config.wsdd, etc">
	<!-- patch server-config with wsdd file contained in client.jar -->
	<property name="working.dir" location="${basedir}/target/tmp" />
	<mkdir dir="${working.dir}" />
	<deploy:copy-deps todir="${working.dir}" />
	<unjar dest="${working.dir}" overwrite="true">
		<fileset dir="${working.dir}">
			<include name="*client*.jar" />
		</fileset>
		<patternset>
			<include name="wsdd/**" />
			<include name="xsd/**" />
			<include name="wsdl/**" />
		</patternset>
	</unjar>
	<delete>
		<fileset dir="${working.dir}">
			<include name="*.jar" />
		</fileset>
	</delete>
  	<!-- hack from mailing list to fix Maven XLST bug -->
	${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}	
	<xslt in="${working.dir}/wsdd/deploy.wsdd"
	      out="${webapp.root}/WEB-INF/server-config.wsdd"
	      extension=".wsdd"
	      style="${basedir}/build/server-config.xsl"
	/>
</goal>

</project>
