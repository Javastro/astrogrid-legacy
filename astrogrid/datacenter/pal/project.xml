<?xml version="1.0" encoding="ISO-8859-1"?>
<project>

<extend>${basedir}/../build/project-base.xml</extend>
  <!-- the version of maven's project object model -->
  <pomVersion>3</pomVersion>

  <!-- a unique name for this project -->
  <id>pal</id>
  <name>Publishers Astrogrid Library</name>
  <currentVersion>${astrogrid.iteration}</currentVersion>

  <description><![CDATA[
   <p>
   An Astrogrid datacenter published a collection of astronomical data on the Astrogrid.
   </p><p>
   PAL contains everything you need to install a data center, wrapped up in one big bundle.
   </p>
  <section name="Build">
   <p>
   <i>See parent project for fuller instructions</i>
   </p><p>
To build PAL by hand, you need to build all its prerequisites - the jars it
depends on, plus the javadocs and dist bundles it grabs. Do the following:
</p><p>
<code>
$ cd datacenter<br />
$ maven multiproject:clean ; maven multiproject:site ; maven jar:install-snapshot<br />
</code>
then go and have a cup of coffee
</p><p>
The result is a pal-SNAPSHOT, which is left in your local
repository. Usually
<tt>~/.maven/repository/astrogrid-datacenter/wars/pal-SNAPSHOT.war</tt>
</p>
<subsection name="Hacking with PAL"><p>

The full build above takes a long time to finish - not good if you're tinkering with
the packaging of PAL itself. However, once you've run the recipe once, the
required resources are present. You can then rebuild PAL using the existing
resources by:
</p><p>
<code>
$ cd datacenter/pal<br />
$ maven pal <br />
</code>
</p><p>
Note however, that the result of this build is put in a different place -
<tt>datacenter/pal/target/pal.war</tt>
</p>
</subsection>
<subsection name="Other goals"><p>

<b>pal-deploy / pal-undeploy</b><br />
The pal project provides goals to deploy / undeploy
<tt>datacenter/pal/target/pal.war</tt> to a tomcat webserver using tomcat's manager tool.
This can be handy for testing.
</p><p>
You need to set some variables for this
to work. Its probably best to put them in <tt>~/build.properties</tt>.
</p><p>
<code>
tomcat.endpoint=http://localhost:8080/manager<br />
tomcat.username=noel<br />
tomcat.password=secret<br />
</code>
</p></subsection>
</section>
  ]]></description>


  <!-- must be on a single line -->
  <shortDescription>Publishers Astrogrid Library</shortDescription>

  <siteDirectory>${maven.site.central.directory}/${astrogrid.iteration}/datacenter/pal</siteDirectory>

  <repository>
    <connection>
      scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/datacenter/pal
    </connection>
    <developerConnection>
      scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/datacenter/pal
    </developerConnection>
  </repository>



  <!-- jar files the project is dependent on -->
  <dependencies>
   <!-- astrogrid components -->
   <dependency>
      <groupId>org.astrogrid</groupId>
      <artifactId>astrogrid-datacenter-server</artifactId>
      <version>${pom.currentVersion}</version>
      <properties>
         <war.bundle>true</war.bundle>
      </properties>
   </dependency>

   <dependency>
      <groupId>org.astrogrid</groupId>
      <artifactId>astrogrid-datacenter-client</artifactId>
      <version>${pom.currentVersion}</version>
          <properties>
      <war.bundle>true</war.bundle>
    </properties>
   </dependency>

   <dependency>
      <groupId>org.astrogrid</groupId>
      <artifactId>cdsdelegate</artifactId>
      <version>${pom.currentVersion}</version>
      <properties>
         <war.bundle>true</war.bundle>
      </properties>
   </dependency>

    <dependency>
      <groupId>astrogrid-registry</groupId>
      <artifactId>astrogrid-registry-client</artifactId>
      <version>SNAPSHOT</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
      </dependency>
      
       <dependency>
        <id>astrogrid-mySpace</id>
        <version>${pom.currentVersion}</version>
       <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>

    <dependency>
      <id>astrogrid-mySpace</id>
      <version>SNAPSHOT</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>
    
    <dependency>
      <groupId>astrogrid-ogsadai</groupId>
      <type>jar</type>
      <artifactId>astrogrid-ogsadai-app</artifactId>
      <version>${pom.currentVersion}</version>
    </dependency>

    <!-- JavaMail -->
    <dependency>
      <id>JavaMail</id>
      <version>UNKNOWN</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
      <jar>JavaMail.jar</jar>
    </dependency>

    <dependency>
      <groupId>astrogrid-jes</groupId>
      <artifactId>astrogrid-jes-delegate</artifactId>
      <version>${pom.currentVersion}</version>
      <properties>
         <war.bundle>true</war.bundle>
      </properties>
    </dependency>

        <!-- community -->
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-community-common</artifactId>
            <version>${pom.currentVersion}</version>
                      <properties>
                         <war.bundle>true</war.bundle>
                      </properties>
        </dependency>
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-community-client</artifactId>
            <version>${pom.currentVersion}</version>
                      <properties>
                         <war.bundle>true</war.bundle>
                      </properties>
        </dependency>
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-community-resolver</artifactId>
            <version>${pom.currentVersion}</version>
                      <properties>
                         <war.bundle>true</war.bundle>
                      </properties>
        </dependency>
   <!-- supporting libraries -->
    <dependency>
      <id>breezetk</id>
      <version>UNKNOWN</version>
      <jar>breezetk.jar</jar>
          <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>

    <dependency>
      <id>VOTableUtil</id>
      <version>UNKNOWN</version>
      <jar>VOTableUtil.jar</jar>
          <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>
    
    <!-- required for the CEA interface -->
    <dependency>
      <id>astrogrid-workflow-objects</id>
      <groupId>org.astrogrid</groupId>
      <version>${pom.currentVersion}</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>

    <dependency>
      <id>junitee</id>
      <version>1.8</version>
      <properties>
         <war.bundle>true</war.bundle>
      </properties>
    </dependency>

    <!-- required for the registry -->
            <dependency>
                <artifactId>astrogrid-registry-client</artifactId>
                <groupId>org.astrogrid</groupId>
                <version>${pom.currentVersion}</version>
                <properties>
                        <war.bundle>true</war.bundle>
                </properties>
        </dependency>
        <dependency>
                <artifactId>astrogrid-registry-common</artifactId>
                <groupId>org.astrogrid</groupId>
                <version>${pom.currentVersion}</version>
                <properties>
                        <war.bundle>true</war.bundle>
                </properties>
        </dependency>

        <!-- myspace -->
       <dependency>
        <id>astrogrid-mySpace</id>
        <groupId>org.astrogrid</groupId>
        <version>${pom.currentVersion}</version>
       <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>

   <!-- sun's activation jar. we need to include it, as tomcat 5 lacks it -->
   <dependency>
      <id>activation</id>
      <version>1.0.2</version>
      <properties>
         <war.bundle>true</war.bundle>
      </properties>
   </dependency>
   
    <dependency><!-- hsqldb - for testing -->
        <id>hsqldb</id>
        <version>1.7.1</version>
       <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>
    
    <dependency>
      <id>log4j</id>
   <version>1.2.8</version>
   <properties>
   <war.bundle>true</war.bundle>
   </properties>
    </dependency>
   <!-- catalina-ant - used for test deployments to local tomcat -->
   <dependency>
      <id>catalina-ant</id>
      <version>4.1.24</version>
   </dependency>
  </dependencies>


  <!-- build information for the project -->
   <reports>
    <report>
      maven-license-plugin
    </report>
  </reports>
</project>

