####################################################################
###
### Default configuration file for astrogrid datacenter
###
####################################################################

#
# The name of this datacenter service
#
datacenter.name=SampleStars AstroGrid Datacenter

###
### emailer server name for emailing results
###
#emailserver.address=smtp.roe.ac.uk
#emailserver.from=pal@roe.ac.uk

#--- Metadata Configuration --
#
# How to server the metadata : REQUIRED for publishing to the Virtual Observatory
# The default is set to the sample stars metadata plugin:
#
datacenter.metadata.plugin=org.astrogrid.datacenter.queriers.test.SampleStarsMetaServer

# 'Normal practice' might be to comment out the above and just specify where
# a metadata file exists:
#
#datacenter.metadata.filename
#datacenter.metadata.url

# Otherwise you can write your own plugin and replace the plugin class above

#--- Plugin Configuration --
###
### Plugin Configuration : REQUIRED
###
### You must specify a back-end implementation to use. The implementation class
### must extend QuerierPlugin
###
### The default configuration has a dummy querier
datacenter.querier.plugin=org.astrogrid.datacenter.queriers.test.SampleStarsPlugin


### -- SQL Plugin Configurations ---

# Standard SQL Plugin
#datacenter.querier.plugin=org.astrogrid.datacenter.queriers.sql.JdbcPlugin

#
# SQL Translator.
#
# The standard SQL maker will make standard SQL; if you need a specialist one,
# specifiy it here.
#
#datacenter.querier.plugin.sql.translator=org.astrogrid.datacenter.queriers.sql.postgres.PostgresSqlMaker

# specify which extra ADQL functions are supported
datacenter.implements.circle=true
datacenter.implements.xmatch=false

# Enables SQL-Passthru - Do not enable this unless you understand the
# concequences and have taken measures to protect your database from malicious
# queries.
#
datacenter.sql.passthrough.enabled=false

#
# Limit results - Sets the maximum number of rows that can be returned by an
# SQL query.  This is a crude safety limit to avoid full datacenter readouts in VOTable...
#
datacenter.sql.maxreturn=2000

#
# Cone Search configuration - these are the columns that will be used when
# a cone search is submitted to a RDBMS.
#
conesearch.table=TARGET
conesearch.ra.column=RA
conesearch.dec.column=DEC

#
# JDBC Connection details - Required to connect to a
# RDBMS.  It is also possible to use a JNDI datasource with the key pal/datasource.
# The examples here are for a microsoft SQL Server connection.
#
#datacenter.plugin.jdbc.drivers=com.microsoft.jdbc.sqlserver.SQLServerDriver
#datacenter.plugin.jdbc.url=jdbc:microsoft:sqlserver://<authorityid>;Database=<db>
#datacenter.plugin.jdbc.user=
#datacenter.plugin.jdbc.password=


### -- Warehouse SQL Plugin --
###
# -------------------------------------------
# Location of OGSA-DAI grid service registry
# HYDRA
#WAREHOUSE_OgsaDaiHostString=http://hydra.star.le.ac.uk:8082
#WAREHOUSE_OgsaDaiRegistryString=/gdw/services/ogsadai/DAIServiceGroupRegistry
#
# CASS123
WAREHOUSE_OgsaDaiHostString=http://cass123.ast.cam.ac.uk:4040
WAREHOUSE_OgsaDaiRegistryString=/gdw/services/ogsadai/DAIServiceGroupRegistry

# -------------------------------------------
# Location of XSLT stylesheet for XML RowSet -> VOTable transformation
# This is a one-size-fits-all hack that will need replacing.
WAREHOUSE_XslTransform=http://astrogrid.ast.cam.ac.uk/xslt/ag-warehouse-first.xsl

# -------------------------------------------
# Location of JVM for shelling out to GdsQueryDelegate
# If using the JVM in tomcat's JAVA_HOME is acceptable, leave this
# commented out; only supply it if you want to use a custom JVM
# for some reason.
WAREHOUSE_WarehouseJvm=/data/cass123a/kea/j2sdk1.4.1_01/bin/java
#
# Location of executable jar for shelled-out ogsadai call
# This relative path should work in tomcat if it's started from
# $TOMCAT_HOME/bin:
#WAREHOUSE_ExecutableJarPath=../webapps/warehouse/WEB-INF/classes/
#
# You can also use an absolute path, eg:
# cass123
WAREHOUSE_ExecutableJarPath=/export/home/ogsa-dai-tomcat/webapps/pal-SNAPSHOT/WEB-INF/classes/
# hydra
#WAREHOUSE_ExecutableJarPath=/home/data/gdw/tomcat1/webapps/pal-SNAPSHOT/WEB-INF/classes/
#
WAREHOUSE_ExecutableJarName=astrogrid-ogsadai-app-SNAPSHOT.jar
