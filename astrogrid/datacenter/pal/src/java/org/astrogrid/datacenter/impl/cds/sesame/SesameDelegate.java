/*$Id: SesameDelegate.java,v 1.1 2004/10/05 19:19:18 mch Exp $
 * Created on 15-Oct-2003
 *
 * Copyright (C) AstroGrid. All rights reserved.
 *
 * This software is published under the terms of the AstroGrid
 * Software License version 1.2, a copy of which has been included
 * with this distribution in the LICENSE.txt file.
 *
**/
package org.astrogrid.datacenter.impl.cds.sesame;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.RemoteException;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.rpc.ServiceException;
import org.apache.axis.utils.XMLUtils;
import org.astrogrid.datacenter.impl.cds.generated.sesame.Sesame;
import org.astrogrid.datacenter.impl.cds.generated.sesame.SesameService;
import org.astrogrid.datacenter.impl.cds.generated.sesame.SesameServiceLocator;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

/**
 * Delegate class that wraps the Sesame service generated by WSDL2Java
 * @author Noel Winstanley nw@jb.man.ac.uk 15-Oct-2003
 *
 */
public class SesameDelegate {
    /**
     * Construct a sesameDelegate, connecting to specified endpoint.
     * @param endpoint
     * @throws MalformedURLException
     * @throws ServiceException
     */
    public SesameDelegate(String endpoint) throws MalformedURLException, ServiceException {
        this(new URL(endpoint));
    }
    /**
     * Construct a sesameDelegate, connecting to specified endpoint
     * @param endpoint service endpoint
     * @throws ServiceException
     */
    public SesameDelegate(URL endpoint) throws ServiceException {
        SesameService service = new SesameServiceLocator();
        sesame = service.getSesame(endpoint);
    }
   /**
    *  Construct a sesameDelegate, connecting to default service.
    * @throws ServiceException
    */
    public SesameDelegate() throws ServiceException {
        SesameService service = new SesameServiceLocator();
        sesame = service.getSesame();
    }
    protected Sesame sesame;
    
    /**
     * Query a name in the Sesame name resolver.
     * @param name name to resolve
     * @return plain text description of the name
     * @throws RemoteException
     */
    public String resolveName(String name) throws RemoteException {
        return sesame.sesame(name,PLAIN);
    }
    /**
     * Query a name in the Sesame name resolver.
     * @param name name to resolve
     * @return xml document giving description of name. Follows schema at
     * <a href="http://vizier.u-strasbg.fr/xml/sesame_1.xsd">http://vizier.u-strasbg.fr/xml/sesame_1.xsd</a>
     * @throws ParserConfigurationException
     * @throws SAXException
     * @throws IOException
     * @todo - provide a castor object model for this schema. then return object in this schema.
     */
    public Document resolveNameToXML(String name) throws ParserConfigurationException, SAXException, IOException {
        String response = sesame.sesame(name,XML);
        InputStream is = new ByteArrayInputStream(response.getBytes());
        return XMLUtils.newDocument(is);
    }
    /**
     * Query a name in the Sesame name resolver.
     * @param name name to resolve
     * @return HTML-formatted description of name.
     * @throws RemoteException
     */
    public String resolveNameToHTML(String name) throws RemoteException {
        return sesame.sesame(name,HTML);
    }

    // constant codes for resolver service.
    protected static final String HTML = "H";
    protected static final String XML = "x";
    protected static final String PLAIN = "p";
    
    /** Query a name in specific catalogues
     *
     * @param name name to search for
     * @param cat catalogues to search in
     * @return plain text definition of the name
     * @throws RemoteException
     */
    public String resolveNameInCatalogues(String name,Catalogues cat) throws RemoteException {
        return sesame.sesame(name,PLAIN,true,cat.getCode());
    }
    /** Query a name in specific catalogues
     *
     * @param name name to search for
     * @param cat catalogues to search in
     * @return xml definition of the name, following the schema at
     * <a href="http://vizier.u-strasbg.fr/xml/sesame_1.xsd">http://vizier.u-strasbg.fr/xml/sesame_1.xsd</a>
     * @throws ParserConfigurationException
     * @throws SAXException
     * @throws IOException
     */
    public Document resolveNameInCataloguesToXML(String name,Catalogues cat) throws ParserConfigurationException, SAXException, IOException {
        String result = sesame.sesame(name,XML,true,cat.getCode());
        InputStream is = new ByteArrayInputStream(result.getBytes());
        return XMLUtils.newDocument(is);
    }
    
    /** Query a name in specific catalogues
     *
     * @param name name to search for
     * @param cat catalogues to search in
     * @return html formatted definition of the name.
     * @throws RemoteException
     */
    public String resolveNameInCataloguesToHTML(String name,Catalogues cat) throws RemoteException {
        return sesame.sesame(name,HTML,true,cat.getCode());
    }
}


/*
$Log: SesameDelegate.java,v $
Revision 1.1  2004/10/05 19:19:18  mch
Merged CDS implementation into PAL

Revision 1.2  2003/11/20 15:47:18  nw
improved testing

Revision 1.1  2003/11/18 11:23:49  nw
mavenized cds delegate

Revision 1.1  2003/10/16 10:11:45  nw
first check in
 
*/
