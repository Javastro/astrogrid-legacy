<?xml version="1.0" encoding="ISO-8859-1"?>
<project>
<extend>${basedir}/../build/project-base.xml</extend>

  <!-- a unique name for this project -->
  <artifactId>astrogrid-datacenter-client</artifactId>
  <name>AstroGrid DataCenter Client Delegate</name>


   <description><![CDATA[
   <section name="Astrogrid Datacenter Client">
   <p>
    This project contains the delegate interface to the datacenter.
    </p><p>
    The name of the jar produced by this project is <tt>astrogrid-datacenter-client</tt>
    To add a dependency on this project to your own project, add the following to your <tt>project.xml</tt>
    <source>
      &lt;dependencies&gt;
      ...
      &lt;dependency&gt;
      &lt;groupId&gt;astrogrid-datacenter&lt;/groupId&gt;
      &lt;artifactId&gt;astrogrid-datacenter-client&lt;/artifactId&gt;
      &lt;version&gt;SNAPSHOT&lt;/version&gt;
      &lt;/dependency&gt;
      ...
      &lt;dependencies&gt;
    </source>


    </p></section>
        <section name="Build" ><p>
    This project generates a large amount of source code automatically from XML schema and WSDL files in
    <tt>src/xsd</tt> and <tt>src/wsdl</tt>. This source is placed in a separate tree called <tt>generated/java</tt>.
   </p><p>
    This maven project has an additional goal - <tt>generate-delegate</tt>
    that performs this code generation.
    Castor and the wsdl2java tool from Axis are used as part of this.
    The goal is defined in the <tt>maven.xml</tt> file, where is is documented in more detail.
   </p><p>
   The code generation is <b>not</b> performed automatically by the nightly build: after editing the wsdl or schema files the
   <tt>generate-delegate</tt> goal must be run by hand; then the generated sources verified and checked back into CVS.
        </p>
        </section>
        ]]>
   </description>

  <shortDescription>Client-side delegate and supporting libraries</shortDescription>



  <repository>
    <connection>
      scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/datacenter/client
    </connection>
    <developerConnection>
      scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/datacenter/client
    </developerConnection>
  </repository>

   <packageGroups>
      <packageGroup>
         <title>Public API</title>
         <packages>org.astrogrid.datacenter.delegate:org.astrogrid.datacenter.query:org.astrogrid.datacenter.webnotify:org.astrogrid.datacenter.tools</packages>
      </packageGroup>
      <packageGroup>
         <title>Query Languages</title>
         <packages>org.astrogrid.datacenter.adql*:org.astrogrid.datacenter.sql</packages>
      </packageGroup>
      <packageGroup>
         <title>Delegates</title>
         <packages>org.astrogrid.datacenter.delegate.*</packages>
      </packageGroup>
      <packageGroup>
         <title>Transport</title>
         <packages>org.astrogrid.datacenter.axisdataserver*</packages>
      </packageGroup>
   </packageGroups>


  <!-- jar files the project is dependent on -->
  <dependencies>

    <!-- required for the NVO cone search delegate -->
    <dependency>
      <artifactId>astrogrid-store-client</artifactId>
      <groupId>org.astrogrid</groupId>
      <version>${astrogrid.mySpace.version}</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>

    <!-- used to talk to SkyNodes (instead of Axis) see SkyNodeClient_* -->
    <dependency>
      <id>activation</id>
      <version>1.0.2</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>
    <dependency>
      <id>soap</id>
      <version>2.3.1</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>

    <!-- common UI stuff -->
    <dependency>
         <groupId>org.astrogrid</groupId>
      <artifactId>astrogrid-ui</artifactId>
      <version>${astrogrid.ui.version}</version>
      <properties>
        <war.bundle>true</war.bundle>
      </properties>
    </dependency>


    <dependency>
      <id>breezetk</id>
      <version>UNKNOWN</version>
      <jar>breezetk.jar</jar>
          <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>

    <dependency>
      <id>VOTableUtil</id>
      <version>UNKNOWN</version>
      <jar>VOTableUtil.jar</jar>
          <properties>
      <war.bundle>true</war.bundle>
    </properties>
    </dependency>

   <!-- used as part of build - no need to deploy with final app.-->

   <dependency>
      <groupId>axis</groupId>
      <artifactId>axis-ant</artifactId>
      <version>1.1</version>
   </dependency>


  </dependencies>

   <build>
      <resources>
         <resource>
            <directory>${basedir}/generated</directory>
            <includes>
               <include>wsdd/**</include>
            </includes>
         </resource>
         <resource>
            <directory>${basedir}/src</directory>
            <includes>
               <include>wsdl/**</include>
               <include>xsd/**</include>
            </includes>
         </resource>
         <resource>
            <directory>${basedir}/src/java</directory>
            <includes>
               <include>**/*.properties</include>
               <include>**/*.xml</include>
            </includes>
         </resource>
      </resources>
   </build>

</project>

