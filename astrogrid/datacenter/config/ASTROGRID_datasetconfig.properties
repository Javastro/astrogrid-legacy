##################################################################################
#     B E W A R E!   *   B E W A R E!   *   B E W A R E!  *   B E W A R E!       #
#                                                                                #
#     Do not inadvertently introduce white space at the end of a line            #
#     <<<particularly>>> after a line-end continuation character.                #
#     e.g. there must be no white space after a backslash continuation...        #
#                                                                                #
#     SUBMIT_JOB_RESPONSE.TEMPLATE= \                                            #
#     <?xml version='1.0' encoding='UTF8'?> \                                    #
#                                                                                #
#     YOU HAVE BEEN WARNED!                                                      #
##################################################################################
#
# Each datacenter is configured by setting properties within this file.
#

#
# Following are the base name, language code and country code for 
# the properties file that contains all messages for a datacenter 
#
# Example. 
# Given these values:
# MESSAGES.INSTALLATION.BASENAME=ASTROGRID_datacentermessages
# MESSAGES.INSTALLATION.LANGUAGECODE=en
# MESSAGES.INSTALLATION.COUNTRYCODE=US
#
# suiteable file names would be:
# ASTROGRID_datacentermessages.properties        // installation default messages
# ASTROGRID_datacentermessages_en.properties     // English language default messages
# ASTROGRID_datacentermessages_en_US.properties  // US specific English language messages
#
MESSAGES.INSTALLATION.BASENAME=ASTROGRID_datacentermessages
MESSAGES.INSTALLATION.LANGUAGECODE=
MESSAGES.INSTALLATION.COUNTRYCODE=
 
#
# Switches validation on/off for query request documents 
#
PARSER.VALIDATION=false
 
#
# Each catalog can possess its own query factory, or share a query factory.
# This is dependent upon whether one DBMS is vastly different from another,
# and whether the datacenter runs different DBMS's, or even different and
# incompatible releases of the same DBMS. 
#
# A DBMS can be commercial (e.g. DB/2, Oracle, SQLServer), 
# open source (e.g. MySQL, PostgreSQL), or even completely home grown.
# Each of these COULD give rise to different QueryFactory implementations.
# It is required each implement the org.astrogrid.datacenter.job.QueryFactory interface.
#
# Each catalog can be held within a different datasource (database), 
# or not, as the case may be. We require the JNDI location in order
# to find the datasource.
#
# The first two entries show how to set up defaults...
#

# Defaults:
.QUERYFACTORY=org.astrogrid.datacenter.impl.QueryFactoryImpl
.DATASOURCE=java:comp/env/default-datasource

#
# Specific catalog entries go here. The format is:
# <catalog-name>.<partial-key>=<value>
#
USNOB.QUERYFACTORY=org.astrogrid.datacenter.impl.QueryFactoryImpl
USNOB.DATASOURCE=java:comp/env/jdbc/usnob-datasource

#
# Factory for creating VOTables. At present only one is supported.
# Each datacenter can write their own version, if they want to. 
# This must implement the org.astrogrid.datacenter.votable.VOTableFactory interface.
#
VOTABLEFACTORY=org.astrogrid.datacenter.impl.VOTableFactoryImpl

#
# The MySpaceFactory
# It is not recommended that datacenters write their own implementation
# for co-operating with the MySpace facility. However, here is how
# the astrogrid implementation is loaded...
#
MYSPACE.FACTORY_KEY=org.astrogrid.datacenter.impl.MySpaceFactoryImpl

#
# Local directory where temporary files associated with the MySpace facility 
# can be created (e.g. for the purposes of holding a votable to be ftp'd to MySpace).
# The format is operating system dependent and can be a relative- or a fully-
# qualified path.
MYSPACE.CACHE_DIRECTORY=/tmp

#
# This is the URL for the MySpace facility closest and most convenient
# for this datacenter...
#
MYSPACE.MANAGER.URL=http://hydra.star.le.ac.uk:8080/axis/services/MySpaceManager

#
# MySpace request template
#
MYSPACE.MANAGER.REQUEST_TEMPLATE= \
<?xml version="1.0" encoding="UTF-8"?> \
<request> \
    <elements> \
        <userID>{0}</userID> \
        <communityID>{1}</communityID> \
        <jobID>{2}</jobID> \
        <fileLocation>{3}</fileLocation> \
    </elements> \
</request>


#
# A job factory and database is required of each datacenter
# The job database is probably a temporary requirement.
#
JOB.FACTORY=org.astrogrid.datacenter.impl.JobFactoryImpl
JOB.DATASOURCE=java:comp/env/jdbc/job-datasource
JOB.TABLENAME=JOB


#
# JobMonitor request template
#
JOB.MONITOR.REQUEST_TEMPLATE= \
<?xml version="1.0" encoding="UTF8"?> \
<job name="{0}" userid="{1}" community="{2}" jobURN="{3}" time="{4}" > \
   <jobstep name="{5}" stepNumber="{6}" status="{7}"/> \
</job>


#
# Datacenter specific UCD to Column Headings mappings go here. The format is:
# <catalog-name>.<table-name>.<UCD>=<value>
#
USNOB.USNOB.POS_EQ_RA=URA
USNOB.USNOB.POS_EQ_DEC=UDEC
USNOB.USNOB.ERROR=PERR
USNOB.USNOB.POS_EQ_PMRA=RAPM
USNOB.USNOB.POS_EQ_PMDEC=DECPM
USNOB.USNOB.PHOT_TYCHO=TYCHO
USNOB.USNOB.ERROR=RAERR
USNOB.USNOB.ERROR=DECERR
USNOB.USNOB.STAT_PROBABILITY=PMPROB
USNOB.USNOB.PMCAT=PMCAT
USNOB.USNOB.NUMBER=NDETS
USNOB.USNOB.DSPIKE=DSPIKE
USNOB.USNOB.YS4=YS4
USNOB.USNOB.TIME_EPOCH=EPOCH
USNOB.USNOB.PHOT_PHG_B=B1MAG
USNOB.USNOB.PHOT_PHG_R=R1MAG
USNOB.USNOB.PHOT_PHG_B=B2MAG
USNOB.USNOB.PHOT_PHG_R=R2MAG
USNOB.USNOB.NMAG=NMAG
USNOB.USNOB.B1STAR=B1STAR
USNOB.USNOB.R1STAR=R1STAR
USNOB.USNOB.B2STAR=B2STAR
USNOB.USNOB.R2STAR=R2STAR