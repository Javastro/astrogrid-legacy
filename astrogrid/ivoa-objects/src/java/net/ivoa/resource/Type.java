/*
 * $Id: Type.java,v 1.2 2011/09/13 13:43:29 pah Exp $
 * Copyright 2011 Paul Harrison (paul.harrison@manchester.ac.uk)
 *
 * File originally generated by JAXB, but since hand updated
 */


package net.ivoa.resource;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="Archive"/>
 *     &lt;enumeration value="Bibliography"/>
 *     &lt;enumeration value="Catalog"/>
 *     &lt;enumeration value="Journal"/>
 *     &lt;enumeration value="Library"/>
 *     &lt;enumeration value="Simulation"/>
 *     &lt;enumeration value="Survey"/>
 *     &lt;enumeration value="Transformation"/>
 *     &lt;enumeration value="Education"/>
 *     &lt;enumeration value="Outreach"/>
 *     &lt;enumeration value="EPOResource"/>
 *     &lt;enumeration value="Animation"/>
 *     &lt;enumeration value="Artwork"/>
 *     &lt;enumeration value="Background"/>
 *     &lt;enumeration value="BasicData"/>
 *     &lt;enumeration value="Historical"/>
 *     &lt;enumeration value="Photographic"/>
 *     &lt;enumeration value="Press"/>
 *     &lt;enumeration value="Organisation"/>
 *     &lt;enumeration value="Project"/>
 *     &lt;enumeration value="Registry"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum Type {

    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("Archive")
    ARCHIVE("Archive"),
    @XmlEnumValue("Bibliography")
    BIBLIOGRAPHY("Bibliography"),
    @XmlEnumValue("Catalog")
    CATALOG("Catalog"),
    @XmlEnumValue("Journal")
    JOURNAL("Journal"),
    @XmlEnumValue("Library")
    LIBRARY("Library"),
    @XmlEnumValue("Simulation")
    SIMULATION("Simulation"),
    @XmlEnumValue("Survey")
    SURVEY("Survey"),
    @XmlEnumValue("Transformation")
    TRANSFORMATION("Transformation"),
    @XmlEnumValue("Education")
    EDUCATION("Education"),
    @XmlEnumValue("Outreach")
    OUTREACH("Outreach"),
    @XmlEnumValue("EPOResource")
    EPO_RESOURCE("EPOResource"),
    @XmlEnumValue("Animation")
    ANIMATION("Animation"),
    @XmlEnumValue("Artwork")
    ARTWORK("Artwork"),
    @XmlEnumValue("Background")
    BACKGROUND("Background"),
    @XmlEnumValue("BasicData")
    BASIC_DATA("BasicData"),
    @XmlEnumValue("Historical")
    HISTORICAL("Historical"),
    @XmlEnumValue("Photographic")
    PHOTOGRAPHIC("Photographic"),
    @XmlEnumValue("Press")
    PRESS("Press"),
    @XmlEnumValue("Organisation")
    ORGANISATION("Organisation"),
    @XmlEnumValue("Project")
    PROJECT("Project"),
    @XmlEnumValue("Registry")
    REGISTRY("Registry");
    private final String value;

    Type(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Type fromValue(String v) {
        for (Type c: Type.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
