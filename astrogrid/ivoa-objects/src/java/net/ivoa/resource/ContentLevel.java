/*
 * $Id: ContentLevel.java,v 1.2 2011/09/13 13:43:30 pah Exp $
 * Copyright 2011 Paul Harrison (paul.harrison@manchester.ac.uk)
 *
 * File originally generated by JAXB, but since hand updated
 */


package net.ivoa.resource;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;


/**
 * <p>Java class for ContentLevel.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ContentLevel">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="General"/>
 *     &lt;enumeration value="Elementary Education"/>
 *     &lt;enumeration value="Middle School Education"/>
 *     &lt;enumeration value="Secondary Education"/>
 *     &lt;enumeration value="Community College"/>
 *     &lt;enumeration value="University"/>
 *     &lt;enumeration value="Research"/>
 *     &lt;enumeration value="Amateur"/>
 *     &lt;enumeration value="Informal Education"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
public enum ContentLevel {

    @XmlEnumValue("General")
    GENERAL("General"),
    @XmlEnumValue("Elementary Education")
    ELEMENTARY_EDUCATION("Elementary Education"),
    @XmlEnumValue("Middle School Education")
    MIDDLE_SCHOOL_EDUCATION("Middle School Education"),
    @XmlEnumValue("Secondary Education")
    SECONDARY_EDUCATION("Secondary Education"),
    @XmlEnumValue("Community College")
    COMMUNITY_COLLEGE("Community College"),
    @XmlEnumValue("University")
    UNIVERSITY("University"),
    @XmlEnumValue("Research")
    RESEARCH("Research"),
    @XmlEnumValue("Amateur")
    AMATEUR("Amateur"),
    @XmlEnumValue("Informal Education")
    INFORMAL_EDUCATION("Informal Education");
    private final String value;

    ContentLevel(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ContentLevel fromValue(String v) {
        for (ContentLevel c: ContentLevel.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
