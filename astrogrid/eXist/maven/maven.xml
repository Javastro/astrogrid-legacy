<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid exist components.
    |
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
    >

	<!--+
		| Determine what the top-level project root is
		+-->
	<core:set var="project.base.root" value="${pom.parentBasedir().getParentFile().getCanonicalFile()}"/>
	<ant:echo message=""/>
	<ant:echo message="Top level project directory : ${project.base.root}"/>
	<!--+
		| Load the maven properties.
		| Note, if we use ant:properties, then the values are not passed to the Maven plugins.
		| eg. jar:deploy-snapshot tries to deploy to ibiblio.org !
		+-->
	<ant:echo message="Loading maven properties : ${project.base.root}/maven/maven.properties"/>
	<util:properties file="${project.base.root}/maven/maven.properties"/>
	<!--+
		| Load the exist properties.
		| Note, if we use util:properties, then the references to other properties are not resolved.
		+-->
	<ant:echo message="Loading exist properties  : ${project.base.root}/maven/exist.properties"/>
	<ant:property file="${project.base.root}/maven/exist.properties"/>

<!--
	<j:set var="maven.checkstyle.header.file" value="${project.base.root}/short-license.txt" />
	<j:set var="maven.checkstyle.properties" value="${project.base.root}/checkstyle.xml" />
	<j:set var="maven.license.licenseFile" value="${project.base.root}/LICENSE.txt" />
-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!--+
        | Plugin goals.
        | These are the common goals that should be moved into a plugin.
        +-->

    <!--+
        | Initialise the eXist tools.
        +-->
    <goal name="init.tools">
        <ant:echo message="Initialising Axis tools ...."/>
        <!--+
            | Check if we have already done this.
            +-->
        <core:if test="${!existInitToolsDone}">
            <ant:echo message="...."/>
            <core:set var="existInitToolsDone" value="true"/>
            <!--+
                | Initialise our classpath.
                +-->
            <attainGoal name="init.classpath"/>
            <!--+
                | Initialise our tools.
                +-->
            <ant:taskdef name="axis.admin"     classpathref="astro.exist.classpath" classname="org.apache.axis.tools.ant.axis.AdminClientTask"/>
            <ant:taskdef name="axis.wsdl2java" classpathref="astro.exist.classpath" classname="org.apache.axis.tools.ant.wsdl.Wsdl2javaAntTask"/>
            <ant:taskdef name="axis.java2wsdl" classpathref="astro.exist.classpath" classname="org.apache.axis.tools.ant.wsdl.Java2WsdlAntTask"/>
        </core:if>
    </goal>

    <!--+
        | Initialise the exist classpath.
        | Adds the exist jars to our build classpath.
        +-->
    <goal name="init.classpath">
        <ant:echo message="Initialising exist classpath ...."/>
        <!--+
            | Check if we have already done this.
            +-->
        <core:if test="${!existClassPathDone}">
            <ant:echo message="...."/>
            <core:set var="existClassPathDone" value="true"/>
            <!--+
                | Initialise our paths.
                +-->
            <attainGoal name="init.paths"/>
            <!--+
                | Check if the exist webapp has been unpacked.
                +-->
            <ant:echo message="Checking for Exist webapp"/>
            <core:set var="existLibExists" value="false" />
            <util:available file="${existDir}/WEB-INF/lib">
                <core:set var="existLibExists" value="true" />
                <ant:echo message="Found exist webapp at ${existDir}"/>
            </util:available>
            <!--+
                | If the exist webapp has not been unpacked then unpack it.
                +-->
            <core:if test="${!existLibExists}">
                <attainGoal name="init.exist"/>
            </core:if>
            <!--+
                | Create an Ant classpath from the jars inside our webapp.
                +-->
            <ant:path id="astro.exist.classpath">
                <ant:fileset dir="${existDir}/WEB-INF/lib">
                    <include name="*.jar"/>
                </ant:fileset>
            </ant:path>
            <!--+
                | Add this to the global maven.dependency.classpath.
                +-->
            <maven:addPath id="maven.dependency.classpath" refid="astro.exist.classpath"/>
        </core:if>
    </goal>

    <!--+
        | Initialise our Exist libraries
        +-->
    <goal name="init.exist">
        <ant:echo message="Initialising exist libraries ...."/>
        <!--+
            | Check if we have already done this.
            +-->
        <core:if test="${!existUnpackDone}">
            <ant:echo message="...."/>
            <core:set var="existUnpackDone" value="true"/>
            <!--+
                | Initialise our paths.
                +-->
            <attainGoal name="init.paths"/>
            <!--+
                | Project.getDependencyPath() only works for jar and ejb files.
                | See : http://maven.apache.org/xref/org/apache/maven/DependencyClasspathBuilder.html#100
                | Means we have to do this the long way round .... by iterating through our list of artifacts.
                +-->
            <core:forEach var="artifact" items="${pom.getArtifacts()}">
                <!--+
                    | If the artifact matches our criteria.
                    +-->
                <ant:echo message="  Ident    : ${artifact.getDependency().getId()}"/>
                <core:if test="${artifact.getDependency().getType().equals('war') and artifact.getDependency().getId().equals('exist:exist')}">
                    <ant:echo message="Found Exist war file"/>
                    <ant:echo message="  Ident    : ${artifact.getDependency().getId()}"/>
                    <ant:echo message="  Type     : ${artifact.getDependency().getType()}"/>
                    <ant:echo message="  Name     : ${artifact.getName()}"/>
                    <ant:echo message="  Path     : ${artifact.getPath()}"/>
                    <!--+
                        | Unpack the Exist war file.
                        +-->
                    <ant:echo message="Unpacking Exist war file"/>
                    <ant:unjar src="${artifact.getPath()}" dest="${existDir}"/>
                </core:if>
            </core:forEach>
        </core:if>
    </goal>

    <!--+
        | Initialise our path locations.
        +-->
    <goal name="init.paths">
        <ant:echo message="Initialising exist paths ..."/>
        <!--+
            | Check if we have already done this.
            +-->
        <core:if test="${!astroInitPathsDone}">
            <ant:echo message="...."/>
            <core:set var="astroInitPathsDone" value="true"/>
            <core:set var="existUrl" value="http://${astro.axis.host}:${astro.axis.port}/${pom.groupId}"/>
            <core:set var="existDir" value="${astro.axis.webapp.dir}"/>
            <core:set var="tempDir" value="${astro.axis.generated.temp.dir}"/>
            <core:set var="javaDir" value="${astro.axis.generated.java.dir}"/>
            <core:set var="wsdlDir" value="${astro.axis.generated.wsdl.dir}"/>
            <core:set var="wsddDir" value="${astro.axis.generated.wsdd.dir}"/>

			<ant:echo message="existUrl : ${existUrl}"/>
			<ant:echo message="existDir : ${existDir}"/>
			<ant:echo message="tempDir : ${tempDir}"/>
			<ant:echo message="javaDir : ${javaDir}"/>
			<ant:echo message="wsdlDir : ${wsdlDir}"/>
			<ant:echo message="wsddDir : ${wsddDir}"/>

        </core:if>
    </goal>

</project>
