<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven project description for the AstroGrid registry common components.
    +-->
<project
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="maven-project.xsd">
    <!--+
        | Extend the top level project descriptor.
        +-->
    <extend>${basedir}/../maven/project.xml</extend>

    <!--+
        | The current version of the Maven project descriptor.
        +-->
    <pomVersion>3</pomVersion>

    <!--+
        | The short name of the project.
        | This is used when naming jars and distribution files.
        +-->
    <id>astrogrid-exist</id>

    <!--+
        | The full name of the project.
        | This is used when generating JavaDoc titles.
        +-->
    <name>AstroGrid eXist</name>

    <!--+
        | The Java package name of the project.
        | This value is used when generating JavaDoc.
        +-->
    <package>org.astrogrid.xmldb.eXist.webapp</package>

    <!--+
        | Optional.
        | A detailed description of the project.
        | This element is usually specified as CDATA to enable the use of HTML tags within the description.
        | This description is used to generate the front page of the project's web site. 
        +-->
    <description>
        <![CDATA[
	<p>
		This is the server side component for the eXist xml database.  The main use will be with other
		astrogrid components such as registry or data center using Fits files.   It also has a web service
		built on top, for other direct interaction with the eXist database.
	</p>
	<section name="Builds">
		<p>			
			Here are the maven goals for building the eXist.
			<ul>
				<li>clean - cleans out and removes all previous builds.</li>
				<li>astrogrid-install-snapshot - Builds all the necessry jar and war files.</li>
				<li>astrogrid-deploy-snapshot - Builds and deploys the snapshot onto the repository.</li>
				<li>astrogrid-deploy-site - Generates reports and documents to be deployed on the site repository.</li>
				<li>generate-castor - generates the castor objects.  This is automatically done though because it is done
				as a pre-goal to java:compile.</li>				
			</ul>
		</p>
	</section>
		]]>        
</description>

    <!--+
        | A short description of the project.
        | The short description should be limited to a single line.
        +-->
    <shortDescription>eXist server side component.</shortDescription>

    <!--+
        | Our cvs repository location.
        +-->
    <repository>
        <connection>
            scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/eXist
        </connection>
        <developerConnection>
            scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/eXist
        </developerConnection>
    </repository>

    <!--+
        | The external dependencies required to build and test the project.
        +-->
    <dependencies>

        <dependency>
            <id>axis</id>
            <version>1.1</version>
        </dependency>
        
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-common</artifactId>
	        <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
        </dependency>
        
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-exist-server</artifactId>
	        <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
        </dependency>

        <dependency>
            <groupId>exist</groupId>
            <artifactId>exist</artifactId>
	        <version>SNAPSHOT</version>
            <type>war</type>
            <url>http://www.astrogrid.org/</url>
        </dependency>
        

        <dependency>
           <id>jaxrpc</id>
           <version>unknown</version>
           <jar>jaxrpc.jar</jar>
        </dependency>
        
        
        <dependency>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
            <version>1.0.3</version>
        </dependency>
        
    </dependencies>

    <!--+
        | The build properties for our project.
        +-->
    <build>
        <!--+
            | The location of our Java source code.
            +-->
        <sourceDirectory>src/java</sourceDirectory>
        <!--+
            | The location of our JUnit source code.
            +-->
        <unitTestSourceDirectory>src/junit</unitTestSourceDirectory>
        <!--+
            | Our JUnit test classes.
            +-->
        <unitTest>
            <!--+
                | Which tests to include.
                +-->
            <includes>
                <include>**/*Junit.java</include>
            </includes>
            
            <!--+
                | The resources for our tests.
            <resources>
                <resource>
                </resource>
            </resources>
                +-->
        </unitTest>
    </build>

</project>
