<?xml version="1.0" ?>
<!-- extension maven script -->
<project xmlns:j="jelly:core"  xmlns:maven="jelly:maven" xmlns:deploy="deploy"  
  xmlns:ag="org.astrogrid.objects" default="jar:jar">
    <j:import inherit="true" file="./mavendefinitions.xml"/>
    
<!-- location of generated source tree -->
<property name="generated.src" location="${maven.build.dir}/java" />

<!-- goals for nightly build -->
<goal name="astrogrid-clean" prereqs="clean"/>

<goal name="astrogrid-deploy-site" prereqs="site,site:deploy" />

<goal name="astrogrid-deploy-snapshot" prereqs="jar:deploy-snapshot"/>

<goal name="astrogrid-deploy-artifact" prereqs="jar:deploy" />
<goal name="astrogrid-install-artifact" prereqs="jar:install" />

<goal name="astrogrid-install-snapshot" prereqs="jar:install-snapshot"/>
  
  
  <!-- To make this goal work, properties schema.path and generated.src
       must be set. The latter property is set above; the former should be
       set on the command line when maven is invoked. -->
  <goal name="castor-bind-one-schema">
    <ag:CastorGenerate/>
  </goal>


  <goal name="generate-mapping" prereqs="java:compile">
              <java fork="yes" classname="GenerateMapping" classpathref="maven.dependency.classpath">
                <classpath>
                        <pathelement location="${basedir}/build" />
                        <pathelement location="${basedir}/target/classes" />
                        <path refid="maven.dependency.classpath" />
                </classpath>
                <arg file="${basedir}/sampleDocuments/mapping.xml"/>
                </java>

  </goal>

<!-- wsdl2java tooling -->
        <!-- all sources generated by wsdl2java (rather than castor) -->
        <patternset id="generated-by-wsdl2java">
           <include name="**/axis/**/*.java" />
           <include name="org/astrogrid/jes/delegate/v1/**/*.java" />
           <include name="org/astrogrid/jes/types/v1/**/*.java" />
           <include name="org/astrogrid/jes/service/v1/**/*.java" />
           <include name="org/astrogrid/applications/service/v1/**/*.java" />

        </patternset>

        <goal name="run-wsdl2java" description="generate classes from wsdl"
                prereqs="axis-declare-tasks,wsdl-cleanout,controller-wsdl,monitor-wsdl,cec-wsdl,results-wsdl,wsdd-postprocess,source-postprocess" />

        <goal name="wsdl-cleanout">
                <delete>
                        <fileset dir="${generated.src}">
                                <patternset refid="generated-by-wsdl2java" />
                        </fileset>
                </delete>
        </goal>

        <goal name="controller-wsdl" prereqs="axis-declare-tasks">
          <axis-wsdl2java output="${generated.src}"             verbose="true"
            serverside="true"
            skeletondeploy="false"
            deployscope="Application"
            testcase="false"
        url="${basedir}/wsdl/JobController.wsdl"
        namespacemappingfile="${basedir}/build/axis-namespace-mappings.properties"
        />
        <move file="${generated.src}/org/astrogrid/jes/delegate/v1/jobcontroller/deploy.wsdd"
                tofile="${generated.src}/org/astrogrid/jes/delegate/v1/jobcontroller/JobController-deploy.wsdd" />
        </goal>


   <goal name="monitor-wsdl" prereqs="axis-declare-tasks">
          <axis-wsdl2java output="${generated.src}"             verbose="true"
            serverside="true"
            skeletondeploy="false"
            deployscope="Application"
            testcase="false"
        url="${basedir}/wsdl/JobMonitor.wsdl"
        namespacemappingfile="${basedir}/build/axis-namespace-mappings.properties"
        />
       <move file="${generated.src}/org/astrogrid/jes/delegate/v1/jobmonitor/deploy.wsdd"
                tofile="${generated.src}/org/astrogrid/jes/delegate/v1/jobmonitor/JobMonitor-deploy.wsdd" />
   </goal>

  <goal name="cec-wsdl" prereqs="axis-declare-tasks">
          <axis-wsdl2java output="${generated.src}"             verbose="true"
            serverside="true"
            skeletondeploy="false"
            deployscope="Application"
            testcase="false"
        url="${basedir}/wsdl/CommonExecutionConnnector.wsdl"
        namespacemappingfile="${basedir}/build/axis-namespace-mappings.properties"
        />

         <move file="${generated.src}/org/astrogrid/applications/service/v1/cea/deploy.wsdd"
                tofile="${generated.src}/org/astrogrid/applications/service/v1/cea/CommonExecutionConnector-deploy.wsdd" />

   </goal>

  <goal name="results-wsdl" prereqs="axis-declare-tasks">
          <axis-wsdl2java output="${generated.src}"             verbose="true"
            serverside="true"
            skeletondeploy="false"
            deployscope="Application"
            testcase="false"
        url="${basedir}/wsdl/CEAResultsListener.wsdl"
        namespacemappingfile="${basedir}/build/axis-namespace-mappings.properties"
        />

         <move file="${generated.src}/org/astrogrid/jes/service/v1/cearesults/deploy.wsdd"
                tofile="${generated.src}/org/astrogrid/jes/service/v1/cearesults/CEAResultsListener-deploy.wsdd" />

   </goal>

   <goal name="wsdd-postprocess" description="apply xslt to fix generation bugs">
           <!--declare the transformer factory to use -->
        ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}
        <xslt basedir="${generated.src}"
              includes="**/*-deploy.wsdd" style="${basedir}/build/clean-wsdd.xsl"
              destdir="${basedir}/wsdd" extension=".wsdd">
                <outputproperty name="encoding" value="iso8859_1"/>
                <outputproperty name="indent" value="yes"/>
                <!-- makes combining wsdd files easier if they've got no header declaration -->
                <outputproperty name="omit-xml-declaration" value="yes" />

        </xslt>
        <copy todir="${basedir}/wsdd">
                <fileset dir="${basedir}/wsdd">
                        <include name="**/*-deploy.wsdd" />
                </fileset>
                <mapper type="flatten" />
        </copy>
        <delete dir="${basedir}/wsdd/org"/>

   </goal>

   <goal name="source-postprocess">
             <!-- first delete the remaining undeploy wsdd files in source tree
                     want to remove any *Impl.java files too-->
             <delete>
                     <fileset dir="${generated.src}">
                            <include name="**/*.wsdd" />
                             <include name="**/*Impl.java" />
                     </fileset>
             </delete>
        <!-- fix axis-wsdl bug - sometimes introduces spurious &gt; at start of strings -->
        <replaceregexp flags="sg" match='"&gt;([^"]+)"'        replace='"\1"' >
                  <fileset dir="${generated.src}">
                                  <patternset refid="generated-by-wsdl2java" />
                          </fileset>
        </replaceregexp>

   </goal>
<!-- end of generation stuff -->


  <goal name="jaxb-generate" description="use jaxb to generate sources" prereqs="jaxb-declare-tasks">
        <mkdir dir="jaxbsrc"/>
        <xjc target="jaxbsrc">
      <schema dir="schema" includes="**/*.xsd" excludes="**/stc/**,**/quantity/**"/>
      <arg value="-extension" />
    </xjc>
  </goal>
  
  <goal name="xmlbeans-generate" prereqs="xmlbeans-declare-tasks">
  	<mkdir dir="xmlbeansrc" />
  	<xmlbean srcgendir="xmlbeansrc" srconly="true">
     <fileset dir="schema" includes="**/*.xsd" excludes="**/stc/**,**/quantity/**"/>
    </xmlbean>
  </goal>
  

  <goal name="axis-declare-tasks">
     <taskdef resource="axis-tasks.properties"  classpathref="maven.dependency.classpath" />
  </goal>

  <goal name="jaxb-declare-tasks">
        <taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask"  classpathref="maven.dependency.classpath" >
  </taskdef>

  </goal>
  <goal name="xmlbeans-declare-tasks">
  	<taskdef name="xmlbean" classname="org.apache.xmlbeans.impl.tool.XMLBean" classpath="/usr/local/lib/xbean.jar"/>
  </goal>



</project>
