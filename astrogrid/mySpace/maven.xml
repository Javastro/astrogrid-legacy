<?xml version="1.0"?>
<!-- extension maven script -->
<project default="astrogrid-build-site" xmlns:j="jelly:core">
	<!-- custom astrogrid goals for nightly build -->
	<goal name="astrogrid-clean" prereqs="clean"/>
	<goal name="astrogrid-deploy-site" 
		prereqs="astrogrid-build-site,site:fsdeploy" />
	<goal name="astrogrid-build-site" prereqs="site"/>
	<goal name="astrogrid-deploy-snapshot" prereqs="jar:deploy-snapshot,war:deploy-snapshot"/>
	<goal name="astrogrid-build-snapshot" prereqs="jar:snapshot,war:war"/>
	<goal name="astrogrid-install-snapshot" prereqs="jar:install-snapshot,war:install-snapshot"/>
	<goal name="astrogrid-deploy-artifact" prereqs="jar:deploy,war:deploy"/>
	<goal name="astrogrid-build-artifact" prereqs="jar:jar,war:war"/>
	<goal name="astrogrid-install-artifact" prereqs="jar:install,war:install"/>
	
	
	<preGoal name="java:compile">
		<mkdir dir="${basedir}/target/classes"/>
		<!-- JDepend fails if this dir is not present.  Hack to fix it. -->
	</preGoal>

	<postGoal name="war:webapp">
		<j:set var="classes.dir" value="${pom.getPluginContext('maven-war-plugin').getVariable('webapp.build.classes')}" />
		<echo message="Copying xml templates and properties across from ${maven.conf.dir} to ${classes.dir} directory"/>
		<copy todir="${classes.dir}" overwrite="yes">
			<fileset dir="${maven.conf.dir}">
      		</fileset>
		</copy>
		<echo message="copying across a readme and sample config file"/>
		<copy todir="${maven.war.webapp.dir}" overwrite="yes">
			<fileset dir="${basedir}">
				<include name="INSTALL"/>
			</fileset>
		</copy>
		<!--Temporary measure - we need to find a better way to set up the database, and a better place to store the config files-->
		<echo message="copying across database setup files - see xdocs/createregistry_v02.lis to see what they're for"/>
		<copy todir="${maven.war.webapp.dir}" overwrite="yes">
			<fileset dir="${basedir}/demoData">
				<include name="*.servers"/>
				<include name="*.sh"/>
			</fileset>
		</copy>
	</postGoal>
	<goal name="webapp.patch" prereqs="java:compile">
        <copy todir="${maven.war.webapp.dir}/WEB-INF/classes">
          <fileset dir="${maven.build.dir}/classes"/>
        </copy>
        <copy todir="${maven.war.webapp.dir}/">
          <fileset dir="src/webapp">
          <exclude name="WEB-INF/**"/>
          </fileset>
        </copy>
        
    </goal>
	
</project>
