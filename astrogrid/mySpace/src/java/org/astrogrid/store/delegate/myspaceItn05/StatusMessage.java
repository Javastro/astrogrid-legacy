package org.astrogrid.myspace.delegate;

 import java.util.Date;

/**
 * <p>
 * The <code>StatusMessage</code> class stores details of the error,
 * warning or information messages generated by a MySpace Service.
 * Each <code>StatusMessage</code> object stores the details for a single
 * message.
 * </p>
 * <p>
 * The MySpace delegate maintains a list of all the
 * <code>StatusMessage</code> objects returned by the MySpace Services
 * that it has invoked.  This list is available to the application
 * invoking the delegate.  The information stored in each message 
 * includes:
 * </p>
 * <ul>
 *   <li>its severity level (error, warning or information),</li>
 *   <li>the text of the message,</li>
 *   <li>a time-stamp generated when the message was generated.</li>
 * </ul>
 * <p>
 * The class has get methods to obtain these various items of
 * information.
 * </p>
 * 
 * @author A C Davenhall (Edinburgh)
 * @since Iteration 5.
 * @version Iteration 5.
 */

public class StatusMessage
{

//
//Member variables defining the message.

   private int severity;         // Severity level.
   String message;               // Text of the message.
   Date timeStamp = new Date();  // Time the message was generated.

//
// Constructors.

/**
 * Create a <code>StatusMessage</code>, setting the member variables.
 *
 * @param severity Severity level of the message.  One of:
 *   <code>StatusCodes.INFO</code> <code>StatusCodes.WARN</code or 
 *   <code>StatusCodes.ERROR</code
 * @param message Text of the message.
 * @param timeStamp Time the message was generated.
 */

   public StatusMessage (int severity, String message, Date timeStamp)
   {  this.severity = severity;
      this.message = message;
      this.timeStamp = timeStamp;
   }


/**
 * Create a <code>StatusMessage</code> object from the equivalent
 * <code>StatusResults</code> object.
 *
 * @param statusResults StatusResults object.
 */

   public StatusMessage (StatusResults statusResults)
   {  this.severity = statusResults.getSeverity();
      this.message = statusResults.getMessage();
      this.timeStamp = new Date( statusResults.getTimeStamp() );
   }


/**
 * Create a <code>StatusMessage</code>, generating the time-stamp but
 * setting the other member variables.
 *
 * @param severity Severity level of the message.  One of:
 *   <code>StatusCodes.INFO</code> <code>StatusCodes.WARN</code or 
 *   <code>StatusCodes.ERROR</code
 * @param message Text of the message.
 */

   public StatusMessage (int severity, String message)
   {  this.severity = severity;
      this.message = message;
      this.timeStamp = new Date();
   }


/**
 * Create a <code>StatusMessage</code>, without passing any arguments.
 */

  public StatusMessage ()
   {  this.severity = -1;
      this.message = "<no message>";
      this.timeStamp = new Date();
   }


// ----------------------------------------------------------------------

//
// Get methods.
//
// The StatusMessage class has a get method for every member variable.

/**
 * Return the severity level.
 *
 * @return The severity level.
 */

   public int getSeverity()
   {  return severity;
   }


/**
 * Return text of the message.
 *
 * @return The text of the message
 */

   public String getMessage()
   {  return message;
   }


/**
 * Return the time stamp.
 *
 * @return The time stamp generated when the message was generated.
 */

   public Date getTimeStamp()
   {  return timeStamp;
   }


// ----------------------------------------------------------------------

//
// Other methods.

/**
 * Produce a reasonable string representation of a StatusMessage.
 */

   public String toString()
   {  String returnString = "";

      if (severity == StatusCodes.INFO)
      {  returnString = "!Info:  " + message;
      }
      else if (severity == StatusCodes.WARN)
      {  returnString = "!Warn:  " + message;
      }
      else if (severity == StatusCodes.ERROR)
      {  returnString = "!Error: " + message;
      }
      else
      {  returnString = "![?" + severity + "]: " + message;
      }

      return returnString;
   }
}
