This file describes the installation of the front-end web-service for
AstroGrid's Grid Data Warehouse. The service is installed from the file 
warehouse.war, which you should download from AstroGrid, into 
Jakarta-Tomcat. In principle, you can install the service in any J2EE 
web-container, but the detailed instructions below are specific to Tomcat.

The main configuration-file is included in warehouse.war but must be 
extracted and installed separately. The WAR is structurally a jar file, so 
jar tools can be used. On Unix or Linux, use the jar command: 

  jar xf warehouse.war WEB-INF/classes/AstroGridConfig.properties

On Windows, extract AstroGridConfig.properties using WinZip.

Copy AstroGridConfig.properties to $CATALINA_HOME/conf/ where 
$CATALINA_HOME stands for the absolute path to the Tomcat installation.

Load warehouse.war using Tomcat's manager interface (see the Tomcat 
manual). This will create a web-application called warehouse.

Now stop the warehouse web-application, using the manager interface.
This prevents users from running the web-application until you have it 
properly configured.

Open Tomcat's administration interface (see the Tomcat manual). In the
tree display at the left of the screen, open the "Environment Entities"
object in the "Resources" section. From the drop-down menu, labelled
"Available Actions", select "Create New Env Entry". Make an entry as
follows:

   * name  = org.astrogrid.config.url
   * type  = java.lang.String
   * value = $CATALINA_HOME/conf/AstroGridConfig.properties 
   * description = Path to AstroGrid central configuration.

but you must replace $CATALINA_HOME with the full path to the Tomcat 
directory when typing the entry.

Edit the warehouse configuration if needed to suit your site. Q.v. the 
configuration guide (the file CONFIG in the installation kit).  The 
default configuration is correct for operation with the GDW back-end
service on hydra.star.le.ac.uk.

To configure the data warehouse module of the Astrogrid software, only two
configuration files need to be edited: the WarehouseQuerier.properties
file and the AstroGridConfig.properties file.  $TOMCAT is used below to
indicate the Tomcat installation directory.

A. $TOMCAT/webapps/warehouse/WEB-INF/classes/org/astrogrid/warehouse/queriers/ogsadai/WarehouseQuerier.properties

This file configures the data warehouse querier.  Change the parameter
names to specify the warehouse querier class name, the location of the
OGSA-DAI registry, the XSLT stylesheet used to transform rowsets to
VOTable, a specific java virtual machine for the querier (optional), and
the location of the OGSA-DAI jar files.

1. DatabaseQuerierClass
Configure the type of querier. Enter the package name of the data centre
querier class here:
	DatabaseQuerierClass =
		org.astrogrid.warehouse.queriers.ogsadai.WarehouseQuerier

2. OgsaDaiHostString and OgsaDaiRegistryString
Configure the location of the OGSA-DAI grid service registry. Enter the
URL for the OGSA-DAI registry host machine followed by the local
identifier of the OGSA-DAI registry:
	OgsaDaiHostString=http://hydra.star.le.ac.uk:8082

OgsaDaiRegistryString=/gdw/services/ogsadai/DAIServiceGroupRegistry

3. XslTransform
Configure the name and location of the XSLT stylesheet that will convert
XML rowsets to VOTable. Enter the URL of the XSLT stylesheet:

XslTransform=http://astrogrid.ast.cam.ac.uk/xslt/ag-warehouse-first.xsl

4. WarehouseJVM (Optional)
Configure the JVM for the GdsQueryDelegate. Only set this variable if the
GdsQueryDelegate requires a specific java virtual machine (other than the
one specified in Tomcat's $JAVA-HOME variable).
	WarehouseJvm=/data/cass123a/kea/j2sdk1.4.1_01/bin/java

5. ExecutableJarPath
Configure the executable path for OGSA-DAI classes. Set this variable to
the relative pathname that holds the OGSA-DAI package jar file in
Tomcat(note - an absolute path can be used as well):
	ExecutableJarPath=../webapps/warehouse/WEB-INF/classes/

6. ExecutableJarName
Configure the OGSA-DAI jar filename. Enter the filename of the OGSA-DAI
jar file located in the relative pathname above:
	ExecutableJarName=astrogrid-ogsadai-delegates.jar

B. $TOMCAT/conf/AstroGridConfig.properties

This is the configuration file for an Astrogrid data centre - it can be
specialized to describe a data warehouse.  Only one parameter needs to be
changed to specify the warehouse.

1. DatabaseQuerierClass
Configure the package name of the class that will query the data
warehouse:
	DatabaseQuerierClass=
		org.astrogrid.warehouse.queriers.ogsadai.WarehouseQuerier


Go back to the manager interface and start the warehouse web-application.
This makes it available to users over the Internet.

Check the installation.

   1 Validate the Axis installation: all the core jars should be
     present, but some optional jars may be missing.

   2 View the list of available services: AxisDataServer should be 
     present.

   3 Submit a test query using the web form; the ADQL linked from 
     the query page is suitable for the GDW database at Leicester.
