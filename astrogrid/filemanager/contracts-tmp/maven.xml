<?xml version="1.0" ?>
<!-- extension maven script -->
<project xmlns:j="jelly:core" xmlns:maven="jelly:maven" xmlns:deploy="deploy" default="jar:jar">
    <!-- location of generated source tree -->
    <property name="generated.src" location="${basedir}/src/java" />
    <property name="generated.dir" location="${basedir}/src" />
    <!-- Mandatory goals for nightly build (others are inherited from maven-base) -->
    <goal name="astrogrid-deploy-site" prereqs="schemadoc,site,site:deploy" />


    <!-- Goals we're using right now (JDT) -->
    <goal name="filemanager-wsdl" prereqs="axis-declare-tasks">
        <delete><!-- delete original sources -->
                <fileset dir="${generated.src}/org/astrogrid/filemanager/common">
                        <include name="*.java" />
                </fileset>
        </delete>
        <axis-wsdl2java output="${generated.src}" verbose="true"
                serverside="true" skeletondeploy="false"
                deployscope="Application" testcase="false"
                url="${basedir}/wsdl/FileManager.wsdl" all="true"
                >
        <mapping namespace="urn:astrogrid:schema:filemanager:FileManager:v0.1"
                package="org.astrogrid.filemanager.common" />
        </axis-wsdl2java>
        <mkdir dir="${generated.src}/wsdd" />
        <copy file="${generated.src}/org/astrogrid/filemanager/common/deploy.wsdd"
            tofile="${generated.src}/wsdd/FileManager.wsdd" />
    </goal>

    <goal name="axis-declare-tasks">
        <taskdef resource="axis-tasks.properties" classpathref="maven.dependency.classpath" />
    </goal>













    <!--goals we might want to resurrect later...-->
    <!-- re-run all code generation -->
    <goal name="regenerate-all" description="regenerate all sources" prereqs="run-wsdl2java" />
    <goal name="generate-mapping" prereqs="java:compile">
        <java fork="yes" classname="GenerateMapping" classpathref="maven.dependency.classpath">
            <classpath>
                <pathelement location="${basedir}/build" />
                <pathelement location="${basedir}/target/classes" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg file="${basedir}/sampleDocuments/mapping.xml"/>
        </java>
    </goal>
    <!-- wsdl2java tooling -->
    <!-- all sources generated by wsdl2java (rather than castor) -->
    <patternset id="generated-by-wsdl2java">
        <include name="**/axis/**/*.java" />
        <include name="org/astrogrid/jes/delegate/v1/**/*.java" />
        <include name="org/astrogrid/jes/types/v1/**/*.java" />
        <include name="org/astrogrid/jes/service/v1/**/*.java" />
        <include name="org/astrogrid/applications/service/v1/**/*.java" />
    </patternset>
    <goal name="run-wsdl2java" description="generate classes from wsdl"
        prereqs="axis-declare-tasks,wsdl-cleanout,controller-wsdl,monitor-wsdl,cec-wsdl,results-wsdl,wsdd-postprocess,source-postprocess" />
    <goal name="wsdl-cleanout">
        <delete>
            <fileset dir="${generated.src}">
                <patternset refid="generated-by-wsdl2java" />
            </fileset>
        </delete>
    </goal>


    <goal name="wsdd-postprocess" description="apply xslt to fix generation bugs"> <!--declare the transformer factory to use -->
        ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} <xslt
        basedir="${generated.src}" includes="**/*-deploy.wsdd" style="${basedir}/build/clean-wsdd.xsl" destdir="${basedir}/wsdd" extension=".wsdd">
        <outputproperty name="encoding" value="iso8859_1"/> <outputproperty name="indent" value="yes"/> <!-- makes combining wsdd files easier if they've got no header declaration -->
         <outputproperty name="omit-xml-declaration" value="yes" /> </xslt> <copy todir="${basedir}/wsdd"> <fileset dir="${basedir}/wsdd"> <include
        name="**/*-deploy.wsdd" /> </fileset> <mapper type="flatten" /> </copy> <delete dir="${basedir}/wsdd/org"/> </goal>
    <goal name="source-postprocess">
        <!-- first delete the remaining undeploy wsdd files in source tree
                     want to remove any *Impl.java files too-->
        <delete>
            <fileset dir="${generated.src}">
                <include name="**/*.wsdd" />
                <include name="**/*Impl.java" />
            </fileset>
        </delete>
        <!-- fix axis-wsdl bug - sometimes introduces spurious &gt; at start of strings -->
        <replaceregexp flags="sg" match='"&gt;([^"]+)"' replace='"\1"' >
            <fileset dir="${generated.src}">
                <patternset refid="generated-by-wsdl2java" />
            </fileset>
        </replaceregexp>
    </goal>
    <!-- end of generation stuff -->
    <!-- some documentation generation -->
    <goal name="schemadoc"> <delete dir="${basedir}/xdocs/schema"/> <mkdir dir="${basedir}/xdocs/schema"/> <!-- move the xsl to the same directory as the schema - the lookups of included schema seem to be relative to the stylesheet directory rather than the base directory-->
         <copy file="${basedir}/build/xs3p.xsl" todir="${basedir}/schema" /> <!--declare the transformer factory to use -->
        ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')} <xslt
        basedir="${basedir}/schema" includes="*.xsd" style="${basedir}/schema/xs3p.xsl" destdir="xdocs/schema" extension=".html"> <param
        name="searchIncludedSchemas" expression="true" /> <param name="searchImportedSchemas" expression="true" /> <param name="linksFile"
        expression="${basedir}/build/links.xml" /> </xslt> <copy file="${basedir}/build/xs3p.xsl" todir="${basedir}/schema/externalSchema" /> <xslt
        basedir="${basedir}/schema/externalSchema" includes="*.xsd" style="${basedir}/schema/externalSchema/xs3p.xsl"
        destdir="${basedir}/xdocs/schema/externalSchema" extension=".html"> <param name="searchIncludedSchemas" expression="true" /> <param
        name="searchImportedSchemas" expression="true" /> <param name="linksFile" expression="${basedir}/build/linkse.xml" /> </xslt> <!-- cleanup --> <delete>
        <fileset dir="${basedir}/schema/"> <include name="**/xs3p.xsl" /> </fileset> </delete> </goal>

</project>