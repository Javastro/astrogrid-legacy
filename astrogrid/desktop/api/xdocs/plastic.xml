<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
	<properties>
		<author email="noel.winstanley@manchester.ac.uk">Noel Winstanley</author>
		<title>Astro Runtime and PLASTIC</title>
	</properties>
	<body>
		<section name="What is PLASTIC?">
			<p>
			From <a href="http://plastic.sourceforge.net">plastic.sourceforge.net</a>:
				<blockquote>
					PLASTIC is a protocol for communication between
					client-side astronomy applications. It is very
					simple for application developers to adopt and is
					easily extended. Through PLASTIC applications can do
					tasks such as instruct each other to load VOTables,
					highlight a subset of rows or load an image of a
					particular area of sky. Although such operations are
					quite simple, they enable powerful collaborations
					between tools. The philosophy is that the astronomer
					should have a suite of interoperating tools at his
					disposal, each of which does one thing well and
					which can be composed according to his particular
					needs.
				</blockquote>
			</p>
		</section>
		<section name="PLASTIC's relationship to  Astro Runtime"><p>
		PLASTIC and Astro Runtime have different purposes. In short
			<dl>
			<dt><b>Astro Runtime</b></dt>
			<dd>Connects client programs to VO services</dd>
			<dt><b>PLASTIC</b></dt>
			<dd>Connects client programs to other client progams</dd>
			</dl>
		 	However, PLASTIC developed out of the work we were doing with
		 	the Astro Runtime - so although the purpose is different, much of 
		 	the technology and techniques used are similar.
		 	
		 	<ul>
		 		<li>Both are a desktop service, to which clients connect.</li>
		 		<li>Clients may connect using RMI, XMLRPC, or HTTP REST</li>
		 		<li>Clients determine how to connect to the service by reading a 
		 		service-written properties file.</li>
		 	</ul>
		 	
		 	Furthermore, the reference implementation of the PLASTIC hub is 
		 	embedded within the Astro Runtime. This means that any client connected
		 	to <i>this</i> hub is also connected to the Astro Runtime - and may call AR
		 	 API functions <i>and</i> send PLASTIC messages
		 	without any additional setup.</p>
		 	<p>Documentation for for PLASTIC Messaging is included in the API docs.
		 	Furthermore, there are examples of sending messages in some of the examples</p> 
		 
		</section>
	</body>

</document>