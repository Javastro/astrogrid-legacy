<?xml version="1.0" ?>

<module name="system">
	<description>System Components</description>
	<property>
		 <key>system.webserver</key>
		 <value>
			<servlet name="xmlrpc" path="/xmlrpc" class="org.astrogrid.desktop.modules.system.XmlRpcServlet" />
			<servlet name="html" path="/*" class="org.astrogrid.desktop.modules.system.HtmlServlet"/>	
		</value>		
		</property>	
	<property>
		<key>icon</key>
		<value>gear.png</value>
	</property>			
	<property>
		<key>priority</key>
		<value>100</value>
	</property>	
	<component name="help" 
		implementationClass="org.astrogrid.desktop.modules.system.HelpServerImpl"
		interfaceClass="org.astrogrid.acr.system.HelpServer">
		<description>Display application help</description>
		<method name="showHelp">
							<return>
					<description>nothing</description>
				</return>
		</method>
		<method name="showHelpForTarget">
							<return>
					<description>nothing</description>
				</return>
				<parameter name="target">
					<description>target in helpset to display</description>
				</parameter>				
		</method>
		<method name="showHelpFromFocus">
							<return>
					<description>nothing</description>
				</return>
		</method>
	</component>
	<component name="browser" 
		implementationClass="org.astrogrid.desktop.modules.system.WebstartBrowserControl"
		interfaceClass="org.astrogrid.acr.system.BrowserControl"		
		>
		<description>Control the default webbrowser</description>
		
		<method name="openURL">
				<description>open a URL in the system webbrowser</description>
				<return>
					<description>nothing</description>
				</return>
				<parameter name="url">
					<description>url of the page to display</description>
				</parameter>
		</method>	
		<method name="openRelative">
			<description>open a relative url in the system webbrowser</description>
				<return>
					<description>nothing</description>
				</return>	
				<parameter name="url">
					<description>relative URL of the page to display (relative to webserver context)</description>
				</parameter>						
		</method>
	</component>
	
	<component name="configuration"
		implementationClass="org.astrogrid.desktop.modules.system.JavaPrefsConfiguration"
		interfaceClass="org.astrogrid.acr.system.Configuration"
		>
		<description>Manage connection settings and configuration</description>
	<property>
		<key>icon</key>
		<value>properties.gif</value>
	</property>		
		<method name="list">
			<description>list configuration entries</description>
			<return><description>set of key-value pairs</description></return>
	<property>
		<key>icon</key>
		<value>flatLayout.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Show Settings</value>
			</property>					
		</method>
		<method name="listKeys">
			<description>list configuration keys</description>
	<property>
		<key>icon</key>
		<value>flatLayout.gif</value>
	</property>							
		</method>
		<method name="setKey">
			<description>set a configuration key</description>
	<property>
		<key>icon</key>
		<value>editorpane_obj.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Change a setting</value>
			</property>				
			<return><description>success code</description>
				<property>
						<key>system.xmlrpc.type</key>
						<value>boolean</value>
					</property>
				</return>
			<parameter name="key"><description>key to set</description></parameter>
			<parameter name="value"><description>value to set to </description></parameter>
		</method>
		<method name="getKey">
			<description>get a value for a configuration key</description>
	<property>
		<key>icon</key>
		<value>info_obj.gif</value>
	</property>					
			<return><description>key value</description></return>
			<parameter name="key"><description>key to retreive value for</description></parameter>
		</method>
<method name="removeKey">
			<description>remove the binding for a key</description>
	<property>
		<key>icon</key>
		<value>delete_obj.gif</value>
	</property>					
			<return><description>nothing</description></return>
			<parameter name="key"><description>key to remover</description></parameter>
		</method>		
	</component>
	
	<component name="ui"
		interfaceClass="org.astrogrid.acr.system.UI"
		>
		<property>
			<key>implementations</key>
			<value>
				<implementation 
					checkClass="org.astrogrid.desktop.modules.system.CheckNotHeadless"
					implementationClass="org.astrogrid.desktop.modules.system.UIImpl" />
				<implementation implementationClass="org.astrogrid.desktop.modules.system.NullUIImpl" />					
			</value>
		</property>		
		<description>Graphical User Interface</description>
	<property>
		<key>icon</key>
		<value>view_detailed.png</value>
	</property>				
		<method name="show">
			<description>Show the user interface</description>			
		</method>
		<method name="hide">
			<description>Hide the user interface</description>
	<property>
		<key>icon</key>
		<value>delete_obj.gif</value>
	</property>						
		</method>

	</component>
	
	<component name="webserver"
		implementationClass="org.astrogrid.desktop.modules.system.JettyWebServer"
		interfaceClass="org.astrogrid.acr.system.WebServer"
		>
			<description>desktop web server - register servlets with it via module parameter keys</description>
	<property>
		<key>icon</key>
		<value>server.png</value>
	</property>					
			<method name="getUrlRoot">
				<description>get url root of the webserver context</description>
	<property>
		<key>icon</key>
		<value>info_obj.gif</value>
	</property>						
				<property>
				<key>system.ui.menu.entry</key>
				<value>Show Server Root</value>
			</property>
			</method>
		<method name="getKey">
				<description>get key for the webserver context</description>
			</method>
		<method name="getPort">
				<description>get port the webserver is running on</description>
			</method>						
	</component>
	
	<component name="systray"		
		interfaceClass="org.astrogrid.acr.system.SystemTray"
		>
		<property>
			<key>implementations</key>
			<value>
				<implementation 
					checkClass="org.astrogrid.desktop.modules.system.CheckJDICSystemTrayPresent"
					implementationClass="org.astrogrid.desktop.modules.system.JDICSystemTray" />
			</value>
		</property>
		<description>System Tray Icon - only available on some platforms</description>
	   <method name="displayErrorMessage">
		  <description>Display an error message in the system tray</description>
			<return><description>nothing</description></return>
			<parameter name="caption"><description>caption for message</description></parameter>
			<parameter name="message"><description>text of message</description></parameter>		
	  </method>
	   <method name="displayInfoMessage">
		  <description>Display an information message in the system tray</description>
			<return><description>nothing</description></return>
			<parameter name="caption"><description>caption for message</description></parameter>
			<parameter name="message"><description>text of message</description></parameter>		
	  </method>
	   <method name="displayWarningMessage">
		  <description>Display an warning message in the system tray</description>
			<return><description>nothing</description></return>
			<parameter name="caption"><description>caption for message</description></parameter>
			<parameter name="message"><description>text of message</description></parameter>		
	  </method>	  	  
	</component>
	
	<component name="apihelp"
		implementationClass="org.astrogrid.desktop.modules.system.ApiHelpImpl"
		interfaceClass="org.astrogrid.acr.system.ApiHelp">
		<description>
			Introspection component that lists available modules, components and their methods and provides documentation for these.
		</description>
		<method name="listMethods">
			<description>
			   This method may be used to enumerate the methods implemented by the XML-RPC server.
               It requires no parameters. 

		  </description>
			<return>
				<description>It returns an array of strings, each of which is the name of a method implemented by the server.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>	
				</return>	  
		  </method>
		  <method name="listModules">
			<description>
					    This method may be used to enumerate the modules implemented by the XML-RPC server.
                        It requires no parameters. 
			</description>
			<return>
				<description>It returns an array of strings, each of which is the name of a moduleimplemented by the server.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>	
				</return>	  			
		</method>
		<method name="listComponentsOfModule">
			<description>
				This method may be used to enumerate the components implemented by a module the XML-RPC server.
                 This method takes one paramter,the name of a module 

			</description>
	<return>
				<description>It returns an array of strings, each of which is the name of a component  implemented by the server.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>	
				</return>	  					
				<parameter name="module"><description>name of module to list components for</description></parameter>
		</method>
		<method name="listMethodsOfComponent">
			<description>
						This method may be used to enumerate the methods implemented by a component in the XML-RPC server.
                        This method takes one parameter, the module-qualified name of a component (i.e. 'module.component') 
				</description>
	<return>
				<description>It returns an array of strings, each of which is the name of a method mplemented by the server.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>	
				</return>	  		
				<parameter name="component"><description>component to list methods for</description></parameter>				
		</method>
		<method name="methodSignature">			
			<description>
						This method takes one parameter, the name of a method implemented by the XML-RPC server.
     
			</description>
			<return>
				<description>I                        It returns an array of possible signatures for this method. A signature is an array of types. 
                        The first of these types is the return type of the method, the rest are parameters.
                        Multiple signatures (ie. overloading) are permitted: this is the reason that an array of signatures are returned by this method.
						                   Signatures themselves are restricted to the top level parameters expected by a method.
                        For instance if a method expects one array of structs as a parameter, and it returns a string, its signature is simply 'string, array'
                        If it expects three integers, its signature is 'string, int, int, int'.
						</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>	
				</return>	  		
							<parameter name="methodname"><description>name of method</description></parameter>						
		</method>
		<method name="methodHelp">
			<description>
						This method takes one parameter, the module-qualified name of a method (i.e. 'module.component.method') implemented by the XML-RPC server.
                        It returns a documentation string describing the use of that method.
                        If no such string is available, an empty string is returned.			
			</description>
							<parameter name="methodname"><description>name of method</description></parameter>				
		</method>
		<method name="moduleHelp">
			<description>
						This method takes one parameter, the name of a module provided by the XML-RPC server.
                        It returns a documentation string describing the use of that module. 
                        If no such string is available, an empty string is returned.			
			</description>
							<parameter name="modulename"><description>name of module</description></parameter>				
		</method>
		<method name="componentHelp">
			<description>
						This method takes one parameter, the module-qualified name of a component (i.e. 'module.component') implemented by the XML-RPC server.
                        It returns a documentation string describing the use of that component. 
                        If no such string is available, an empty string is returned.				
			</description>
							<parameter name="componentname"><description>name of component</description></parameter>				
		</method>						
	</component>	
	<component name="rmi"
		implementationClass="org.astrogrid.desktop.modules.system.RmiLiteRmiServerImpl"
		interfaceClass="org.astrogrid.acr.system.RmiServer"
		>
		<description>
			Rmi server component - provides access into the ACR via Java RMI
		</description>
		<method name="getPort">
			<description>retrieve port the rmi server is running on</description>
				
			<return><description>port numbe</description>
				<property>
						<key>system.xmlrpc.type</key>
						<value>int</value>
					</property>
				</return>			
		</method>
	</component>
	<!-- interceptor class -->
	<component name="throbber"
		implementationClass="org.astrogrid.desktop.modules.system.ThrobbingInterceptor"
		interfaceClass="org.aopalliance.intercept.MethodInterceptor" >
			<property>
				<key>hidden.component</key>
				<value>true</value>								
			</property>						
	</component>
		

</module>