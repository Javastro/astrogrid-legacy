<?xml version="1.0" ?>
<!--can't dtd validate - need to replace with schema later.
	<!DOCTYPE module PUBLIC "-//Astrogrid//DTD Desktop Module 1.0//EN" "file:///home/noel/eclipse/desktop/src/java/org/astrogrid/desktop/framework/descriptors/module-descriptor.dtd">
-->
<module name="astrogrid">
	<description>Direct access to Astrogrid Components</description>
	<property>
		<key>system.ui.menu.links</key>
		<value>
			<link text="AstroGrid v1 Release Pages"
				icon="logo1.gif"
				toolTipText="Wiki Pages of for AstroGrid"
				url="http://wiki.astrogrid.org/bin/view/Astrogrid/ReleaseV1Pages" />
		</value>
		</property>
	<property>
		<key>icon</key>
		<value>logo1.gif</value>
	</property>
	<property>
		<key>priority</key>
		<value>50</value>
	</property>		
	<component name="community" 
		implementationClass="org.astrogrid.desktop.modules.ag.CommunityImpl" 
		interfaceClass="org.astrogrid.acr.astrogrid.Community" >
		<description>User Authentication and Management</description>
	<property>
		<key>icon</key>
		<value>personal.png</value>
	</property>		
		<method name="login">
			<description>Login to astrogrid</description>	
			<return>
				<description>success code</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
			<parameter name="username">
				<description>user to log in as</description>
			</parameter>
			<parameter name="password">
				<description>password for this user</description>
			</parameter>
			<parameter name="community">
				<description>community the user belongs to</description>
			</parameter>
		</method>
		<method name="guiLogin">
			<description>Open Login Dialogue</description>
	<property>
		<key>icon</key>
		<value>connect_creating.png</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Login..</value>
			</property>
		</method>
		<method name="logout">
			<description>Logout of astrogrid</description>
	<property>
		<key>icon</key>
		<value>connect_no.png</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Logout</value>
			</property>
		</method>
		<method name="isLoggedIn">
			<description>Verify that user is logged in</description>
			<return>
				<description>true if logged in</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
		</method>
	</component>
	
		<component name="registry" 
		implementationClass="org.astrogrid.desktop.modules.ag.RegistryImpl" 
		interfaceClass="org.astrogrid.acr.astrogrid.Registry" >
		<description>Query and list registered resources</description>
	<property>
		<key>icon</key>
		<value>java_lib_obj.gif</value>
	</property>				
		<method name="resolveIdentifier">
			<description>Resolve a service ivorn to a web service 
				endpoint</description>
	<property>
		<key>icon</key>
		<value>link_obj.gif</value>
	</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Resolve Identifier</value>								
			</property>						
			<return>
				<description>url of endpoint</description>
			</return>
			<parameter name="ivorn">
				<description>identifier of the service to resolve</description>
			</parameter>
		</method>
		<method name="getRecord">
			<description>Retrieve the registry entry for an ivorn</description>
	<property>
		<key>icon</key>
		<value>xml.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>View Record</value>								
			</property>		
			<!--	
			<property>
				<key>system.ui.result.browser</key>
				<value>true</value>								
			</property>						
			-->
			<return>
				<description>XML Query results</description>
				<property>
					<key>system.result.transformer</key>
					<value>org.astrogrid.desktop.modules.system.transformers.XmlDocumentResultTransformerSet</value>
				</property>
			</return>
			<parameter name="ivorn">
				<description>identifier of the registry entry to 
					return</description>
			</parameter>
		</method>
		<method name="getResourceData">
			<description>Retreive information about a registry entry</description>
			<property>
				<key>icon</key>
				<value>info_obj.gif</value>
			</property>
			<property>
				<key>system.ui.menu.entry</key>
				<value>View Resource Summary</value>
			</property>
			<return>
				<description>Resource Summary Object</description>
			</return>
			<parameter name="ivon">
				<description>identifier of the registry entry to retreive</description>
			</parameter>
			</method>
		<method name="search">
			<description>Execute an adql  query the registry. </description>
	<property>
		<key>icon</key>
		<value>search.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Perform Query</value>								
			</property>
			<!--						
			<property>
				<key>system.ui.result.browser</key>
				<value>true</value>								
			</property>				
			-->
			<return>
				<description>XML Query results</description>
				<property>
					<key>system.result.transformer</key>
					<value>org.astrogrid.desktop.modules.system.transformers.XmlDocumentResultTransformerSet</value>
				</property>
			</return>
			<parameter name="sadql">
				<description>Query to execute (String form of 
					ADQL).  For example: select * from Registry where vr:content/vr:type='Archive'</description>
			</parameter>
		</method>
	</component>
	
	
	<component name="myspace" 
		implementationClass="org.astrogrid.desktop.modules.ag.VospaceImpl" 
		interfaceClass="org.astrogrid.acr.astrogrid.Myspace" >
		<description>Access remote file storage</description>
	<property>
		<key>icon</key>
		<value>repo_rep.gif</value>
	</property>			
		<method name="home">
			<desciption>access ivorn of home</desciption>
	<property>
		<key>icon</key>
		<value>home_nav.gif</value>
	</property>				
			<property>
				<key>system.ui.menu.entry</key>
				<value>Show Home Ivorn</value>
			</property>
		</method>
		<method name="node">
			<desciption>access a node</desciption>
	<property>
		<key>icon</key>
		<value>info_obj.gif</value>
	</property>							
			<property>
				<key>system.ui.menu.entry</key>
				<value>Show Node Properties</value>								
			</property>				
			<return>
				<description>representation of this node</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>struct</value>
				</property>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node to retreive</description>
			</parameter>
		</method>
		<method name="exists">
			<description>verify a myspace ivorn exists</description>		
			<return>
				<description>true if it exists</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node to retreive</description>
			</parameter>
		</method>
		<method name="getType">
			<description>check type of a myspace node</description>
			<return>
				<description>file or folder</description>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node to retreive</description>
			</parameter>
		</method>
		<method name="newFile">
			<description>create a new myspace file.</description>
			<return>
				<description>ivorn of the new file</description>
			</return>
			<parameter name="parentIvorn">
				<description>Ivorn of parent node</description>
			</parameter>
			<parameter name="name">
				<description>name of the new file</description>
			</parameter>
		</method>
		<method name="newFolder">
			<description>create a new myspace folder.</description>
			<return>
				<description>ivorn of the new folder</description>
			</return>
			<parameter name="parentIvorn">
				<description>Ivorn of parent node</description>
			</parameter>
			<parameter name="name">
				<description>name of the new folder</description>
			</parameter>
		</method>
		<method name="readContent">
			<description>read contents of a myspace node.</description>
	<property>
		<key>icon</key>
		<value>Resource.gif</value>
	</property>							
			<property>
				<key>system.ui.menu.entry</key>
				<value>Read File Contents</value>								
			</property>	
			<!--						
			<property>
				<key>system.ui.result.browser</key>
				<value>true</value>								
			</property>				
			-->
			<return>
				<description>URL from which contents can be readr</description>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="copyContentToURL">			
			<description>copy contents of a myspace node to a 
				url</description>
	<property>
		<key>icon</key>
		<value>export_log.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Copy MySpace File Contents to a URL</value>								
			</property>							
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
			<parameter name="destination">
				<description>location to copy contents to. file://, http:// and 
					ftp:// are supported.</description>
			</parameter>
		</method>
		<method name="copyURLToContent">
			<description>copy contents of a url to a myspace
				node</description>
	<property>
		<key>icon</key>
		<value>import_log.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Copy URL Contents to MySpace File</value>								
			</property>						
			<parameter name="source">
				<description>location to copy contents from: file://, http:// 
					and ftp:// are supported.</description>
			</parameter>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="getParent">
			<description>return ivorn of node's parent, (or null)</description>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="getParentNode">
			<description>return details of parent node - equivalent to 
				node(n.getParent())</description>
			<return>
				<property>
					<key>system.xmlrpc.type</key>
					<value>struct</value>
				</property>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="getChildren">
			<description>list children of a node</description>
			<return>
				<description>an array of the ivorns of this node's 
					children</description>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="getChildrenNodes">
			<description>list children of a node</description>
			<return>
				<description>an array of details of the child 
					nodes</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>struct</value>
				</property>
			</return>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="refresh">
			<description>refresh the definition of a node with the myspace
				server</description>
			<parameter name="ivorn">
				<description>Ivorn of node</description>
			</parameter>
		</method>
		<method name="delete">
			<description>delete a node</description>
	<property>
		<key>icon</key>
		<value>delete_obj.gif</value>
	</property>				
			<property>
				<key>system.ui.menu.entry</key>
				<value>Delete File</value>								
			</property>						
			<parameter name="ivorn">
				<description>Ivorn of node to delete.</description>
			</parameter>
		</method>
		<method name="rename">
			<description>rename a node</description>
			<parameter name="ivorn">
				<description>Ivorn of node to rename.</description>
			</parameter>
			<parameter name="newName">
				<description>new name for node</description>
			</parameter>
		</method>
		<method name="move">
			<description>move a node</description>
			<parameter name="ivorn">
				<description>Ivorn of node to move</description>
			</parameter>
			<parameter name="newParentIvorn">
				<description>Ivorn of new parent node</description>
			</parameter>
			<parameter name="newName">
				<description>new name for node</description>
			</parameter>
		</method>
		<method name="changeStore">
			<description>move content of a node from one filestore to 
				another.</description>
			<parameter name="ivorn">
				<description>Ivorn of node to alter</description>
			</parameter>
			<parameter name="storeIvorn">
				<description>ivorn of filestore to relocate content 
					to</description>
			</parameter>
		</method>
		<method name="listAvailableStores">
			<description>List details of available filestores</description>
			<property>
				<key>icon</key>
				<value>info_obj.gif</value>
			</property>
			<property>
				<key>system.ui.menu.entry</key>
				<value>List available filestores</value>
			</property>
			<return>
				<description>Array of Resource Summary Object</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>				
			</return>
			</method>		
		<method name="copy">
			<description>copy a node</description>
			<parameter name="ivorn">
				<description>Ivorn of node to copy</description>
			</parameter>
			<parameter name="newParentIvorn">
				<description>Ivorn of new parent node</description>
			</parameter>
			<parameter name="newName">
				<description>name for copied node</description>
			</parameter>
		</method>

	</component>
	

	<component name="applications" 
		interfaceClass="org.astrogrid.acr.astrogrid.Applications" 
		implementationClass="org.astrogrid.desktop.modules.ag.ApplicationsImpl" 
		>
		<description>Remote Applications: list those registered, provide parameters, execute and monitor progress of CEA applications </description>
	<property>
		<key>icon</key>
		<value>thread_view.gif</value>
	</property>			
		<method name="list">
			<description>list names of registered applications</description>
			<property>
				<key>system.ui.menu.entry</key>
				<value>List Application Names</value>
			</property>
	<property>
		<key>icon</key>
		<value>flatLayout.gif</value>
	</property>					
			<return>
				<description>list of application ivorns</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>
			</return>
		</method>
		<method name="fullList">
			<description>list details of registered applications</description>
	<property>
		<key>icon</key>
		<value>properties.gif</value>
	</property>				
			<property>
				<key>system.ui.menu.entry</key>
				<value>List Application Details</value>
			</property>
			<return>
				<description>list of application information</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>
			</return>
		</method>

		<method name="getInfo">
			<description>Return information about an application</description>
	<property>
		<key>icon</key>
		<value>info_obj.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>View Details</value>								
			</property>	

			<return>
				<description>Description of an application</description>
			</return>
			<parameter name="applicationName">
				<description>registry key of the application to query 
					for</description>
			</parameter>
		</method>
		<method name="getToolTemplate">
			<description>Return a template tool document for an 
				application</description>
	<property>
		<key>icon</key>
		<value>newfile_wiz.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Create Template Tool</value>								
			</property>	
			<!--		
			<property>
				<key>system.ui.result.browser</key>
				<value>true</value>								
			</property>					
			-->
			<return>
				<description>Tool Document</description>
				<property>
					<key>system.result.transformer</key>
					<value>
						org.astrogrid.desktop.modules.system.transformers.CastorDocumentResultTransformerSet</value>
				</property>
			</return>
			<parameter name="applicationName">
				<description>name of the application to build a tool 
					for</description>
			</parameter>
			<parameter name="applicationName">
				<description>name of the interface to use - use 'default' for 
					default interface</description>
			</parameter>
		</method>
		<method name="convertToolToStruct">
			<return><description>datastructure</description>
			<description>convert a tool xml document to a datastructure that 
				may be more easy to manipulate in your language
				</description>				
			<property>
					<key>system.xmlrpc.type</key>
					<value>struct</value>
				</property>
			</return>				
			<parameter name="tool"><description>Tool document to convert</description></parameter>
		</method>
		<method name="convertStructToTool">
			<description>inverse of convertToolToStruct</description>
			<return><description>a tool document</description></return>
			<parameter name="struct"><description>datastructure representing a tool</description>
		<property>
					<key>system.xmlrpc.type</key>
					<value>struct</value>
				</property>				
				</parameter>
			
		</method>
		<method name="validateTool">
			<description>Validate a tool document against an application 
				description</description>		
	<property>
		<key>icon</key>
		<value>complete_status.gif</value>
	</property>										
			<return>
				<description>true if valid. otherwise some kind of 
					exception.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
			<parameter name="document">
				<description>the tool document to validate</description>
			</parameter>
		</method>
		<method name="validateToolFile">
			<description>Validate a tool document (referenced by url) against 
				an application description</description>
		<property>
			<key>icon</key>
			<value>complete_status.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Validate Tool</value>								
			</property>					
			<return>
				<description>true if valid. otherwise some kind of 
					exception.</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
			<parameter name="documentURL">
				<description>URL pointing to the tool document to 
					validate</description>
			</parameter>
		</method>
		
		<method name="listProvidersOf">
			<description>Find cea servers that provide an application</description>
		<property>
			<key>icon</key>
			<value>search.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Find Application Providers</value>								
			</property>		
			<return>
				<description>list of ResourceData objects for the cea services providing this application</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>
			</return>
			<parameter name="applicationName">
				<description>name of the application to find providing servers for</description>
			</parameter>						
		</method>
		
		<method name="execute">
			<description>Execute an application on a suitable server</description>
			<return>
				<description>A new execution identifier</description>
			</return>			
			<parameter name="tool">
				<description>Tool document - describes the application and parameters to execute</description>
			</parameter>				
		</method>
		
		<method name="executeOn">
			<description>Execute an application on a specified server</description>	
			<return>
				<description>A new execution identifier</description>
			</return>				
			<parameter name="tool">
				<description>Tool document - describes the application and parameters to execute</description>
			</parameter>		
			<parameter name="server">
				<description>Ivorn of the service to execute this application on</description>
			</parameter>						
		</method>
		
	<method name="executeFile">
			<description>Execute an application on a suitable server</description>
			<property>
			<key>icon</key>
			<value>run_tool.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Execute Application</value>								
			</property>	
			<return>
				<description>A new execution identifier</description>
			</return>			
			<parameter name="url">
				<description>Url of the Tool document to submit - describes the application and parameters to execute</description>
			</parameter>				
		</method>
		
		<method name="executeOnFile">
			<description>Execute an application on a specified server</description>
<property>
			<key>icon</key>
			<value>run_tool.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Execute Application on Server</value>								
			</property>		
			<return>
				<description>A new execution identifier</description>
			</return>				
			<parameter name="url">
				<description>Url of the Tool document to submit- describes the application and parameters to execute</description>
			</parameter>		
			<parameter name="server">
				<description>Ivorn of the service to execute this application on</description>
			</parameter>						
		</method>
				
		<method name="abort">
			<description>Halt execution of an application</description>
			<property>
			<key>icon</key>
			<value>stop.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Cancel Execution</value>								
			</property>		
			<return>
				<description> true if execution was successfully cancelled</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>boolean</value>
				</property>
			</return>
			<parameter name="executionId">
				<description>id of the application execution to cancel</description>
			</parameter>				
		</method>

		
		<method name="checkExecutionProgress">
			<description>Query progress of an application execution</description>
			<property>
			<key>icon</key>
			<value>waiting.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Query Execution Progress</value>								
			</property>	
			<return>
				<description>report on the progress of this application</description>			
			</return>	
			<parameter name="executionId">
				<description>id of the application execution to query</description>
			</parameter>				
		</method>
		
		<method name="getExecutionSummary">
			<description>Get summary of an application execution</description>
			<property>
			<key>icon</key>
			<value>info_obj.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Get Execution Summary</value>								
			</property>		
	<return>
				<description>summary of this application</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>string</value>
				</property>
				<property>
					<key>system.result.transformer</key>
					<value>
						org.astrogrid.desktop.modules.system.transformers.CastorDocumentResultTransformerSet</value>
				</property>
			</return>				
			<parameter name="executionId">
				<description>id of the application execution to query</description>
			</parameter>				
		</method>
		
		<method name="getResults">
			<description>Get results of an application execution</description>
		<property>
			<key>icon</key>
			<value>MultipleImages.gif</value>
		</property>						
			<property>
				<key>system.ui.menu.entry</key>
				<value>Get Execution Results</value>								
			</property>		
	<return>
				<description>results document for this application execution</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>
				<property>
					<key>system.result.transformer</key>
					<value>
						org.astrogrid.desktop.modules.system.transformers.CastorDocumentResultTransformerSet</value>
				</property>
			</return>							
			<parameter name="executionId">
				<description>id of the application execution to query</description>
			</parameter>				
		</method>

		
	</component>
	
	<component name="jobs" 
		implementationClass="org.astrogrid.desktop.modules.ag.JobsImpl" 
		interfaceClass="org.astrogrid.acr.astrogrid.Jobs">
		<description>Submit workflows to an execution server, and manage running jobs</description>
	<property>
		<key>icon</key>
		<value>debugt_obj.gif</value>
	</property>				
		<method name="list">
			<description>list users jobs</description>
	<property>
		<key>icon</key>
		<value>flatLayout.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>List Jobs</value>
			</property>
			<return>
				<description>list of job identifiers</description>
				<property>
					<key>system.xmlrpc.type</key>
					<value>array</value>
				</property>
			</return>
		</method>
		<method name="getJob">
			<description>Retrieve a workflow transcript</description>
	<property>
		<key>icon</key>
		<value>Resource.gif</value>
	</property>	
			<property>
				<key>system.ui.menu.entry</key>
				<value>Get Job</value>								
			</property>	
			<!--	
			<property>
				<key>system.ui.result.browser</key>
				<value>true</value>								
			</property>					
			-->
			<return>
				<description>a workflow document</description>
				<property>
					<key>system.result.transformer</key>
					<value>org.astrogrid.desktop.modules.system.transformers.WorkflowResultTransformerSet</value>
						
				</property>
			</return>
			<parameter name="jobURN">
				<description>identifier of job to retreive</description>
			</parameter>
		</method>
		<method name="getJobSummary">
			<description>Retrieve a summary for a job</description>
	<property>
		<key>icon</key>
		<value>info_obj.gif</value>
	</property>							
			<property>
				<key>system.ui.menu.entry</key>
				<value>Get Job Summary</value>								
			</property>					
			<return>
				<description>a summary of the jobs progress</description>
			</return>
			<parameter name="jobURN">
				<description>identifier of job to retreive</description>
			</parameter>
		</method>
	
		<method name="submitJob">
			<description>Submit a workflow for execution</description>
			<return>
				<description>unique identifier of the new job</description>
			</return>
			<parameter name="workflow">
				<description>Workflow document to execute</description>
			</parameter>
		</method>
	<method name="submitJobFile">
			<description>Submit a workflow for execution</description>
	<property>
		<key>icon</key>
		<value>run_tool.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Submit Job</value>								
			</property>					
			<return>
				<description>unique identifier of the new job</description>
			</return>
			<parameter name="url">
				<description>URL Reference (ftp://, http://, file://) of file containing workflow document to execute</description>
			</parameter>
		</method>		
	<method name="cancelJob">
			<description>Cancel a running Job</description>
	<property>
		<key>icon</key>
		<value>stop.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Cancel Job</value>								
			</property>					
			<parameter name="jobURN">
				<description>identifier of job to cancel</description>
			</parameter>
		</method>
		<method name="deleteJob">
			<description>Delete a completed Job</description>
	<property>
		<key>icon</key>
		<value>delete_obj.gif</value>
	</property>					
			<property>
				<key>system.ui.menu.entry</key>
				<value>Delete Job</value>								
			</property>					
			<parameter name="jobURN">
				<description>identifier of job to delete</description>
			</parameter>
		</method>		
	</component>
	

	
	<component name="portal"		
		implementationClass="org.astrogrid.desktop.modules.ag.PortalImpl"
		interfaceClass="org.astrogrid.acr.astrogrid.Portal"
		>
		<description>Ineract with the web portal (beta)</description>
		<method name="openPage">
			<description>open a page in the portal</description>
			<parameter name="page">
				<description>name of the page to open</description>
			</parameter>
			</method>
	</component>
	<!-- startable component that registers required convertors. -->
	<component name="register-converters" 
		implementationClass="org.astrogrid.desktop.modules.ag.RegisterConverters" 
		interfaceClass="org.picocontainer.Startable" >
			<property>
				<key>hidden.component</key>
				<value>true</value>								
			</property>						
	</component>
</module>