<?xml version="1.0"?>
<!DOCTYPE module  [
	<!ENTITY descriptors SYSTEM "classpath:/org/astrogrid/desktop/hivemind/util-descriptors.xml">
	]>
<module id="util" version="1.0.0" package="org.astrogrid.acr.util">
Utility Components
	
	<!-- contributions -->
	<contribution configuration-id="framework.acrServices">
			<acrService id="tables" interface="Tables" />
	</contribution>
		
	<contribution configuration-id="framework.descriptors">
		<acr-module name="util" description="useful utility services">
		&descriptors;
		</acr-module>
	</contribution>
	

<!-- 
============================================
TABLES
 -->
	
	<service-point id="tables" interface="Tables">
		Table Manipulation Utilities (STIL)
        <interceptor service-id="system.edt" />        
		<invoke-factory model="primitive">
			<construct class="org.astrogrid.desktop.modules.util.TablesImpl" >
				<service>system.vfs</service>
			</construct>
		</invoke-factory>	
	</service-point>

	<contribution configuration-id="hivemind.EagerLoad">
		<load service-id="tables"/> <!--  as it configures stil -->
	</contribution>
	
<!-- 
===========================================
SELF-TESTING

This component consumes junit tests contributed by other services, and runs them
all on startup in a background thread. If any errors occur, a UI is shown that displays the 
problems and allows the tests to be re-run.

Intention is that self-tests can be used to verify that the network is accessible, file locations
readable etc - i.e. things that might go wrong in a usage environment. Self tests aren't a
good place to put functionality and coding tests - which should be part of the main test tree.

 -->
 
    <service-point id="selftest" interface="org.astrogrid.desktop.modules.util.SelfTester">
        <interceptor service-id="system.edtInvoke" />
        <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.util.SelfTesterImpl">
                <service>system.ui</service>
                <service>system.scheduler</service>
                <configuration>selftest</configuration>
                <int>${util.selftest.testDelay}</int><!-- delay between AR startup and running selftests -->
            </construct>
        </invoke-factory>
    </service-point>
    
    <contribution configuration-id="framework.preferences">
        <preference name="util.selftest.testDelay" 
            requires-restart="true" advanced="true"
            default-value="5">
                <ui-name>Self test delay</ui-name>
                <description>Time to wait after AR startup before running self tests</description> 
                <units>seconds</units>
            </preference>
    </contribution>
    
        <implementation service-id="vomon" if="property util.selftest.disabled">
        <invoke-factory service-id="hivemind.lib.PlaceholderFactory" /> 
    </implementation>   
    
    <contribution configuration-id="hivemind.EagerLoad">
        <load service-id="selftest" />
    </contribution>
    
    <configuration-point id="selftest" schema-id="system.objects">
        Allows services to export junit tests to be used in self testing.
        Each object exported should be a TestCase or TestSuite
    </configuration-point>
 
 
    <contribution configuration-id="selftest" >
        <object>instance:org.astrogrid.desktop.modules.util.ConnectivityTests</object>
    </contribution>
    
    <contribution configuration-id="system.uiStructure">
        <action parentName="runtime" name="selftest" text="Self tests.." onEventDispatchThread="true"
            object="service:selftest" methodName="show" after="prefs" before="reset"/>
    </contribution>
 </module>
 