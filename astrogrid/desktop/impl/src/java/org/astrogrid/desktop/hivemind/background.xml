<?xml version="1.0"?><module id="background" version="1.0.0" package="org.astrogrid.desktop.modules.background">Module of background services	<dependency module-id="system" />	<dependency module-id="astrogrid"/>	<!-- new configurations -->			<configuration-point id="applicationDescriptions" schema-id="system.objects">		List of application descriptions for use in internal cea server. Each		must implement ApplicationDescription.	</configuration-point>	<!-- contriubutions to existing config points -->	<!-- necessary to register each of the strategies as a scheduled task too -->	<contribution configuration-id="system.scheduledTasks">		<object>service:jesStrategy</object>		<object>service:ceaStrategy</object> 	</contribution>				<contribution configuration-id="astrogrid.processStrategies">		<object>service:jesStrategy</object>		<object>service:ceaStrategy</object> 	</contribution>		<contribution configuration-id="applicationDescriptions">				<object>service:siapAppDesc</object>		<object>service:coneAppDesc</object>					<!-- todo - should be more of these -->	</contribution>			<!-- run eveeything as eager when testing -->	<contribution configuration-id="hivemind.EagerLoad" if="property acr.debug"> 		<load service-id="tasks"/>		<load service-id="ceaStrategy" /> 		<load service-id="jesStrategy" />		<!-- the rest are caused to load by the above 3 public components-->	 		<load service-id="idgen"/>		<load service-id="authResolver" />		<load service-id="protocols" />		<load service-id="envFactory" />		<load service-id="execHist" />		<load service-id="ret" /> 		<load service-id="appDescLib"/>		<load service-id="controller" />		<load service-id="query" />		<load service-id="siapAppDesc" />		<load service-id="coneAppDesc" /> 			</contribution>			<contribution configuration-id="hivemind.FactoryDefaults">		<default symbol="background.jesStrategy.refreshSeconds" value="240" />		<default symbol="background.ceaStrategy.refreshSeconds" value="240" />		<default symbol="background.tasks.workdir" 			value="${user.home}$[file.separator}.workbench${file.separator}cea" />	</contribution>			<!-- services and implementations -->		<service-point id="jesStrategy"  interface="org.astrogrid.desktop.modules.ag.RemoteProcessStrategy">		Strategy for executing remote workflows		<invoke-factory>			<construct class="JesStrategyImpl" >				<service>astrogrid.messaging</service>				<service>astrogrid.recorder</service>				<service>astrogrid.community</service>				<service>astrogrid.applications</service>				<service>system.ui</service>				<set property="refreshSeconds" value="${background.jesStrategy.refreshSeconds}" />				<event-listener service-id="astrogrid.community" />									</construct>		</invoke-factory>		</service-point>	<implementation service-id="jesStrategy" if="property background.jesStrategy.disabled">		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />				</implementation>		<service-point id="ceaStrategy" interface="org.astrogrid.desktop.modules.ag.RemoteProcessStrategy">		Strategy for executing remote cea applications.		<invoke-factory>			<construct class="CeaStrategyImpl" >				<service>astrogrid.messaging</service>				<service>astrogrid.recorder</service>				<service>tasks</service>				<service>astrogrid.registry</service>				<service>astrogrid.applications</service>				<service>system.ui</service>                                                                <service>astrogrid.community</service>				<set property="refreshSeconds" value="${background.ceaStrategy.refreshSeconds}" />								<event-listener service-id="astrogrid.community" />							</construct>		</invoke-factory>		</service-point>	<implementation service-id="ceaStrategy" if="property background.ceaStrategy.disabled">		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />		</implementation>					<service-point id="tasks" interface="TasksInternal">		Minimalistic Internal CEA server.		<invoke-factory>			<construct class="WorkbenchCeaComponentManager" >				<service>controller</service>				<service>query</service>				<service>appDescLib</service>			</construct>		</invoke-factory>		</service-point>	<implementation service-id="tasks" if="property background.tasks.disabled">		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />		</implementation>	<!-- components of the cea server - never instantiated if the tasks aren't used.	-->		<service-point id="idgen" visibility="private" interface="org.astrogrid.applications.manager.idgen.IdGen">			<invoke-factory>				<construct class="TimeBasedIdGen"/>			</invoke-factory>		</service-point>		<service-point id="authResolver" visibility="private" interface="org.astrogrid.applications.manager.AppAuthorityIDResolver">			<invoke-factory>				<construct class="InProcessAuthorityIDResolver" />			</invoke-factory>		</service-point>				<service-point id="protocols" visibility="private" interface="org.astrogrid.applications.parameter.protocol.ProtocolLibrary">			<invoke-factory>				<construct class="org.astrogrid.applications.parameter.protocol.DefaultProtocolLibrary" />			</invoke-factory>		</service-point>					<!-- work-around for hivemind limitation -->	  <service-point id="envFactory" visibility="private" interface="IApplicationDescriptionEnvironmentFactory">		  <invoke-factory>			  <construct class="ApplicationDescriptionEnvironmentFactory"/>		</invoke-factory>	</service-point>		<service-point id="execHist" visibility="private" interface="org.astrogrid.applications.manager.persist.ExecutionHistory">		<invoke-factory>			<construct class="ManagingFileStoreExecutionHistory">				<string>${background.tasks.workdir}</string>			</construct>		</invoke-factory>	</service-point>		  <service-point id="ret" visibility="private" interface="org.astrogrid.applications.manager.ApplicationEnvironmentRetriver">		  <invoke-factory>			  <construct class="org.astrogrid.applications.manager.DefaultApplicationEnvironmentRetriever" >				  <service>execHist</service>			  </construct>		</invoke-factory>	</service-point>							<service-point id="appDescLib" visibility="private" interface="IBestMatchApplicationDescriptionLibrary">				<invoke-factory>			<construct class="BestMatchApplicationDescriptionLibrary">				<service>astrogrid.registry</service>				<object>service-property:envFactory:instance</object>				<configuration>applicationDescriptions</configuration>			</construct>		</invoke-factory>	</service-point>				<service-point id="controller" visibility="private" interface="ManagingExecutionController">				<invoke-factory>			<construct class="MessagingExecutionController">				<service>appDescLib</service>				<service>execHist</service>				<service>system.executor</service>				<service>astrogrid.messaging</service>				<service>astrogrid.registry</service>			</construct>		</invoke-factory>	</service-point>				<service-point id="query" visibility="private" interface="org.astrogrid.applications.manager.QueryService">				<invoke-factory>			<construct class="org.astrogrid.applications.manager.DefaultQueryService">				<service>execHist</service>				<service>ret</service>			</construct>		</invoke-factory>	</service-point>								<!-- various application descriptions -->				<service-point id="siapAppDesc" visibility="private" interface="org.astrogrid.applications.description.ApplicationDescription">		<invoke-factory>			<construct class="SiapApplicationDescription">				  <object>service-property:envFactory:instance</object>								<service>ivoa.siap</service>				<service>astrogrid.myspace</service>			</construct>		</invoke-factory>	</service-point>					<service-point id="coneAppDesc" visibility="private" interface="org.astrogrid.applications.description.ApplicationDescription">		<invoke-factory>			<construct class="ConeApplicationDescription">				  <object>service-property:envFactory:instance</object>								<service>nvo.cone</service>				<service>astrogrid.myspace</service>			</construct>		</invoke-factory>	</service-point>								 </module> 