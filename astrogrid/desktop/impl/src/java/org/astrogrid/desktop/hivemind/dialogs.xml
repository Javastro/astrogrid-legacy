<?xml version="1.0"?>
<!DOCTYPE module  [
	<!ENTITY descriptors SYSTEM "classpath:/org/astrogrid/desktop/hivemind/dialogs-descriptors.xml">
	]>
<module id="dialogs" version="1.0.0" package="org.astrogrid.acr.dialogs">
	User Interface Dialogues.
	<dependency module-id="system" />
	<dependency module-id="astrogrid" />
	<!-- PREAMBLE -->
	<contribution configuration-id="framework.descriptors">
		<acr-module name="dialogs" description="Reusable UI Dialogues">
		&descriptors;
		</acr-module>
	</contribution>	
		
	<contribution configuration-id="framework.acrServices">
			<acrService id="resourceChooser" interface="ResourceChooser"/>
			<acrService id="toolEditor" interface="ToolEditor" />
			<acrService id="registryGoogle" interface="RegistryGoogle" />
	</contribution>

<!-- 
==========================
RESOURCE (FILE) CHOOSER
 -->
	<service-point id="resourceChooser" interface="org.astrogrid.desktop.modules.dialogs.ResourceChooserInternal">
		Select a local or myspace file
  	    <interceptor service-id="system.edtInvoke" />
    	<invoke-factory model="session">
			<construct class="org.astrogrid.desktop.modules.dialogs.ResourceChooserImpl" >
			    <service>system.ui</service>
                <service>ui.UiBuilder</service>		
			</construct>
		</invoke-factory>	
	</service-point>

	<implementation service-id="resourceChooser" if="property dialogs.resourceChooser.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>
	
<!-- 
===========================
TOOL EDITOR
 -->
	<!-- todo: make non-singleton? -->			
	<service-point id="toolEditor" interface="org.astrogrid.desktop.modules.dialogs.ToolEditorInternal">
		Edit a remote application invocation.
            <interceptor service-id="system.edtInvoke" />        
		<invoke-factory model="session">
			<construct class="org.astrogrid.desktop.modules.dialogs.ToolEditorImpl" >
				<service>system.ui</service>
                <service>ui.UiBuilder</service>
				<service>astrogrid.applications</service>						
			</construct>
		</invoke-factory>	
	</service-point>

	<implementation service-id="toolEditor" if="property dialogs.toolEditor.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>
	<!-- 
	<contribution configuration-id="system.helpmap">
		<item id="userInterface.taskEditor" url="http://www2.astrogrid.org/science" />
	</contribution>	
     -->	

<!--  
============================
REGISTRY GOOGLE
 -->
	<service-point id="registryGoogle" interface="RegistryGoogle">
		Select a registry resource
            <interceptor service-id="system.edtInvoke" />        
		<invoke-factory model="session">
			<construct class="org.astrogrid.desktop.modules.dialogs.RegistryGoogleImpl" >
				<service>system.ui</service>
                <service>ui.UiBuilder</service>
			</construct>
		</invoke-factory>	
	</service-point>

	<contribution configuration-id="ui.UiBuilderObjects">
		Describes how to build a new registry google panel.
		It's a complex thing to construct - using an object builder
		means we only need to describe the construction in one place,
		and then pass an instancoe of the ObjectBuilder factory
		into wherever a googlePanel is needed.
		<object name="registryGooglePanel" class="org.astrogrid.desktop.modules.ui.voexplorer.RegistryGooglePanel">
			<inject-arg />
            <inject object="service:ivoa.registry" />
			<inject object="cache:resources" />
			<inject object="cache:bulk" />
			<inject object="service:ui.UiBuilder" />
			<inject object="service:votech.vomon" />
			<inject object="service:capabilityIconFactory" />
			<inject object="service:votech.annotate" />
            <inject object="preference:acr.advanced" />            
		</object>
	</contribution>
	
		<!--  todo: refactor location of registryGooglePanel so that this icon factory
		can be in ui module, and private to it. -->
		<service-point id="capabilityIconFactory" 
		interface="org.astrogrid.desktop.modules.ui.voexplorer.google.CapabilityIconFactory" >
		Shared component that creates composite capability icons.
		A service, as can be shared between all instances of voexplorer.
		<create-instance model="primitive"
			class="org.astrogrid.desktop.modules.ui.voexplorer.google.CapabilityIconFactoryImpl"
			/>
	</service-point>
	
	<implementation service-id="registryGoogle" if="property dialogs.registryGoogle.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>		
	
	
	<!--  help keys for registry panel - they're pointing to the wiki for now.
	<contribution configuration-id="system.helpmap">
		<item id="reg.general" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer" />
		<item id="reg.search" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Search_Field" />
		<item id="reg.filter" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Filter_Field" />
		<item id="reg.filters" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Filters_Table" />
		<item id="reg.table" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Resources_List" />
		<item id="reg.details" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Resource_Details" />
		<item id="reg.xml" url="http://wiki.astrogrid.org/bin/view/Astrogrid/RegistryExplorer#Resource_XML" />
		
	</contribution>
     -->



<!--  lists of available resource viewers -->
<contribution configuration-id="ui.UiBuilderObjects">
	<object name="formattedResourceView" class="org.astrogrid.desktop.modules.ui.voexplorer.google.FormattedResourceViewer">
			<inject object="service:system.browser" />
			<inject object="service:ui.registryBrowser" />
            <inject object="service:ivoa.capabilityTester" />
            <inject object="service:ivoa.availability" />     
	</object>
	<object name="annotatedResourceView" class="org.astrogrid.desktop.modules.ui.voexplorer.google.AnnotatedResourceViewer">
			<inject object="service:system.browser" />
			<inject object="service:ui.registryBrowser" />
			<inject object="service:votech.annotate" />
            <inject object="service:ivoa.capabilityTester" />   
            <inject object="service:ivoa.availability" />        
	</object>	
	<object name="tableResourceView" class="org.astrogrid.desktop.modules.ui.voexplorer.google.TabularMetadataResourceViewer">
    </object>
	<object name="xmlResourceView" class="org.astrogrid.desktop.modules.ui.voexplorer.google.XMLResourceViewer">
        <inject-arg />
		<inject object="service:ivoa.registry" />
	   <inject object="preference:acr.advanced" />		
	</object>
	<object name="resultsResourceView" class="org.astrogrid.desktop.modules.ui.scope.ResultsResourceViewer">
        <inject-arg />
        <inject object="service:ui.UiBuilder" />
        <inject-arg />
    </object>
</contribution>
					
 </module>


 