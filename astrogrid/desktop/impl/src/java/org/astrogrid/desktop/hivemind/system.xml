<?xml version="1.0"?>
<!DOCTYPE module  [
	<!ENTITY descriptors SYSTEM "classpath:/org/astrogrid/desktop/hivemind/system-descriptors.xml">
	]>
<module id="system" version="1.0.0" package="org.astrogrid.acr.system">
System module.
	<dependency module-id="framework" />
	<!-- PREAMBLE -->
	
	<contribution configuration-id="framework.acrServices">
			<acrService id="help" interface="HelpServer" />
			<acrService id="browser" interface="BrowserControl" />
			<acrService id="configuration" interface="Configuration" />
			<acrService id="ui" interface="UI" />
		    <acrService id="webserver" interface="WebServer" />
			<acrService id="apihelp" interface="ApiHelp" />
			<acrService id="rmi" interface="RmiServer" />
			<acrService id="systray" interface="SystemTray" />
	</contribution>
		
	<contribution configuration-id="framework.descriptors">
		<acr-module name="system" description="System Components">
		&descriptors;
		</acr-module>
	</contribution>
	
	<!--  new schemas  -->
		<schema id="objects">
		A list of objects - used in various configuration points.
			<element name="object" content-translator="object">
				A single object may refer to another service - using service:.., etc
				<rules>
					<push-content />
					<invoke-parent method="addElement" />
				</rules>
			</element>		
	</schema>	
	
	<!--  
	=====================================
	FUNDAMENTAL UI STRUCTURES
	 -->
	<!-- always define a tab named advanced, but labelling and placement differs by mode -->
	<contribution configuration-id="uiStructure" if="property acr.mode">
		<tab name="advanced" text="Astro Runtime" before="*" help-id="tab.advanced " />	
		<tab name="links" text="Links" after="advanced" help-id="tab.links" />			
	</contribution>
		<contribution configuration-id="uiStructure" if="property hub.mode">
		<tab name="advanced" text="Plastic" before="*" help-id="tab.plastic" />	
		<tab name="links" text="Links" after="advanced" help-id="tab.links"  />			
	</contribution>
	<contribution configuration-id="uiStructure" if="property workbench.mode">
		<menu name="links" text="Other VO-Enabled Applications" parentName="help" before="projects" after="div2"/>		
		<tab name="advanced" text="Advanced" after="*" visibleCondition="preference:acr.advanced" help-id="tab.advanced"/>
	</contribution>

	<!--  help for these structures. -->
	<contribution configuration-id="helpmap">
		<item id="tab.advanced" url="http://www2.astrogrid.org/desktop/astro-runtime" /> <!-- todo  -->
		<item id="tab.plastic" url="http://plastic.sourceforge.net" />
		<item id="tab.links" url="http://www2.astrogrid.org/science/documentation/workbench-helper-applications" />
	</contribution>
	
	<contribution configuration-id="uiStructure">
		<menu name="runtime" text="Runtime" parentName="menubar" before="*" />
		<menu name="help" text="Help" parentName="menubar" after="*" />
			<divider parentName="help" name="div1"
				before="div2" />
			<divider parentName="help" name="div2"
			after="div1"  />					
		<menu name="projects" text="About Projects" parentName="help" before="about" after="div2"/>

		<action parentName="runtime" name="exit" text="Exit" iconName="exit16.png" onEventDispatchThread="true"
			object="service:builtin.shutdown" methodName="halt" after="*">
			<tooltip>Halt the service</tooltip>
			<confirmMessage>About to close all windows and exit. Continue?</confirmMessage>
		</action>	
        
		<action parentName="runtime" name="prefs" text="Preferences.." onEventDispatchThread="true"
			object="service:configDialogue" methodName="run"  before="reset"/>
		<action parentName="runtime" name="reset" text="Reset configuration"
			object="service:configuration" methodName="reset" before="exit">
			<tooltip>Reset all configuration back to factory defaults</tooltip>
			<confirmMessage>Reset: All user settings wil be lost. Continue?</confirmMessage>
		</action>
				
	</contribution>
	

	<!--  APP AND PROJECT LINKS -->
	<!--  Links that don't appear in 'hiub mode' -->
	<contribution configuration-id="uiStructure" if="not (property system.browser.disabled) and not (property hub.mode)">
		<action parentName="projects" name="ivoaProject" text="IVOA" iconName="ivoa.gif"
			object="service:system.browser" methodName="openURL"
			>
			<tooltip>Home Page for the International Virtual Observatory Alliance</tooltip>
			<parameter>http://www.ivoa.net</parameter>
		</action>	
		<action parentName="projects" name="cadcProject" text="CADC" iconName="cadc.jpg"
			object="service:system.browser" methodName="openURL"
			>
			<tooltip>Home Page for Canadian Astronomy Data Center (CADC)</tooltip>
			<parameter>http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/cadc</parameter>
		</action>

		<action parentName="projects" name="cdsProject" 
			text="CDS" iconName="cds_icon.gif"
			object="service:system.browser" methodName="openURL">
			<tooltip>Centre de Donnees Astronomiques Home Page</tooltip>			
			<parameter>http://cdsweb.u-strasbg.fr/</parameter>
		</action>				
		<action parentName="projects" name="esacProject" text="ESA-VO" iconName="esavo33.gif"
			object="service:system.browser" methodName="openURL"
			>
			<tooltip>Home Page for ESA-VO</tooltip>
			<parameter>http://esavo.esa.int/</parameter>
		</action>	
		<action parentName="projects" name="egg" visibleCondition="preference:acr.advanced"
			text="Perspective" object="service:system.browser" methodName="openURL"
			after="*">
			<tooltip>It helps to keep a sense of perspective...</tooltip>
			<parameter>http://dingo.care2.com/cards/flash/5409/galaxy.swf</parameter>
		</action>	
		
		<!--  TODO - add RVO, VO-Paris, and others listed in weasl.
		also - member os plastic?? -->
		<!--  TODO - find details
		<action parentName="projects" name="estarProject" 
			text="EStar" iconName="estar_icon.gif"
			object="service:system.browser" methodName="openURL">
			<tooltip>ESTAR - FILL in TITLE of PAGE</tooltip>			
			<parameter>FILL IN ESTAR URL</parameter>
		</action>		
		<action parentName="projects" name="voeventProject" 
			text="VOEvent" iconName="voevent_icon.gif"
			object="service:system.browser" methodName="openURL">
			<tooltip>VOEVENT - FILL in TITLE of PAGE</tooltip>			
			<parameter>FILL IN VOEVNET URL</parameter>
		</action>	
		-->	
	</contribution>
	
	<!--  LINKS that alwasys appear -->
	<contribution configuration-id="uiStructure" if="not (property system.browser.disabled)">
		<!-- 
		PROJECTS
		 -->
		<action parentName="projects" name="plasticProject" text="Plastic" iconName="plastic.gif"
			object="service:system.browser" methodName="openURL"
			>
			<tooltip>Home Page for PLASTIC</tooltip>
			<parameter>http://plastic.sourceforge.net/</parameter>
		</action>	
		<action parentName="projects" name="votechProject" 
			text="VOTech" iconName="votech_icon.gif"
			object="service:system.browser" methodName="openURL">
			<tooltip>Euro-VO VOTech Project Home Page</tooltip>			
			<parameter>http://eurovotech.org/</parameter>
		</action>
		<action parentName="projects" name="agProject" text="AstroGrid" iconName="logo48x48.png"
			object="service:browser" methodName="openURL" before="*">
			<parameter>http://www.astrogrid.org</parameter>
		</action>	
	

		<!--  other menu items -->
		<action parentName="help" name="bugreport" text="Feature request / Bug report " 
			after="projects" before="about"
			object="service:browser" methodName="openURL"  >
			<parameter>http://www.astrogrid.org/bugzilla/enter_bug.cgi?product=Workbench%20and%20ACR</parameter>
		</action>
		<!--  
		APPLICATIONS
		 -->
		<action parentName="links" name="aladin" text="Aladin" iconName="aladin_48pix.png"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html><b>Aladin</b> is an interactive software sky atlas allowing the user to <br>
			visualize digitized images of any part of the sky, to superimpose entries from <br>
			astronomical catalogs or personal user data files, and to interactively access related <br>
			data and information from the SIMBAD, NED, VizieR, or other archives for all known objects in the field. </tooltip>
			]]></tooltip>
			<parameter>http://aladin.u-strasbg.fr/</parameter>
		</action>	
		<action parentName="links" name="gaia" text="GAIA" iconName="gaialogo.gif" after="aladin"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html><b>GAIA</b> is an image display and analysis tool. It provides the usual <br>
			facilities of image display tools, plus more astronomically useful ones such as <br>
			aperture & optimal photometry, contouring, source detection, surface photometry, <br>
			arbitrary region analysis, celestial coordinate readout, calibration and modification,<br>
			 grid overlays, blink comparison, defect patching and the ability to<br>
			  query on-line (WWW) catalogues.
						]]></tooltip>
			<parameter>http://star-www.dur.ac.uk/~pdraper/gaia/gaia.html</parameter>
		</action>			
		<action parentName="links" name="octet" text="Octet" iconName="cvo.png" after="gaia"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html>With Octet, CVO has developed advanced observation query capabilities to help users <br>
			fully exploit the broad wavelength coverage of our collections. We have also included data from <br>
			select external collections to increase wavelength coverage from radio (FIRST) to X-ray (RASS).
			]]></tooltip>
			<parameter>http://www2.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/cvo/</parameter>
		</action>
		<action parentName="links" name="splat" text="SPLAT" iconName="splat.gif"
			after="octet"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html><b>SPLAT</b>is a graphical tool for displaying, comparing, modifying and<br>
			 analysing astronomical spectra stored in NDF, FITS and TEXT files <br>
			 as well as the new NDX format. 
			]]></tooltip>
				<parameter>http://star-www.dur.ac.uk/~pdraper/splat/splat.html</parameter>
		</action>	
		<action parentName="links" name="topcat" text="TopCat" iconName="tc3.gif"
			after="splat"
			object="service:browser" methodName="openURL" >
			<tooltip><![CDATA[
			<html><b>TOPCAT</b> is an interactive graphical viewer and editor for tabular data.<br>
			 It has been designed for use with astronomical tables such as object catalogues, but is not <br>
			 restricted to astronomical applications. It understands a number of different astronomically<br>
			 important formats (including FITS and VOTable) and more formats can be added.
			]]></tooltip>
			<parameter>http://www.star.bris.ac.uk/~mbt/topcat/</parameter>
		</action>
		<action parentName="links" name="visivo" text="VisIVO" iconName="visivo.png"
			after="topcat"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html><b>VisIVO</b> is a visualisation and analysis software for astrophysical data.<br>
			 VisIVO can handle both observational and theoretical data.<br>
			  It can be used both as a stand-alone application, that acts on local files, <br>
			  and as an interface to the Virtual Observatory framework.
			  ]]></tooltip>
			<parameter>http://visivo.cineca.it/</parameter>
		</action>

		<action parentName="links" name="vospec" text="VOSpec" iconName="vospecLogo.png"
			after="visivo"
			object="service:browser" methodName="openURL">
			<tooltip><![CDATA[
			<html><b>VOSpec</b>: A tool to handle VO-compatible spectra
			  ]]></tooltip>
			<parameter>http://esavo.esa.int/vospecapp</parameter>
		</action>

	</contribution>	
	<!-- add a link to the workbench if we're not running in workbench mode. -->
	<contribution configuration-id="uiStructure" if="not (property system.browser.disabled) and ((property hub.mode) or (property acr.mode))">
		<action parentName="links" name="voexplorer" text="VO Explorer" iconName="logo48x48.png"
			before="aladin" object="service:browser" methodName="openURL" >
			<tooltip><![CDATA[
			<html><b>VO Explorer</b> needs a description.
			]]></tooltip>
			<parameter>http://www2.astrogrid.org/desktop</parameter>
		</action>
	</contribution>
	
	<contribution configuration-id="framework.preferences">	
		<!-- working directory - used for storing various data. -->
		<preference name="astrogrid.workdir"
			requires-restart="true"
			default-value="${user.home}${file.separator}.workbench" >
			<ui-name>Working directory</ui-name>
			<description>Location to store query results, cache registry queries, etc</description>
			<units>directory</units>
		</preference>	

	</contribution>

		<!-- things that should be started eager -->
	<contribution configuration-id="hivemind.EagerLoad">
		<load service-id="webserver" /> 
		<load service-id="rmi" /> 
		<load service-id="scheduler"/>
		<load service-id="executor" />
		<load service-id="configuration" />
		<load service-id="snitch" />
		<load service-id="tupperware" />
	</contribution>

	
	<!--  
	============================
	HELP
	 -->
	<service-point id="help" interface="org.astrogrid.desktop.modules.system.HelpServerInternal">			
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.HelpServerImpl">
				<service>browser</service>
				<configuration>helpmap</configuration>
			</construct>
		</invoke-factory>
	</service-point>
	
	<implementation service-id="help" if="(property system.help.disabled) or (property system.browser.disabled)">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>

	<configuration-point id="helpmap">
		<schema>
			<element name="item" key-attribute="id">
			  defines a single help page.
				<attribute name="id" required="true" unique="true">
					The abstract id of the page
				</attribute>
				<attribute name="url" required="true">
					The URL this id points to
				</attribute>
				<conversion class="org.astrogrid.desktop.modules.system.contributions.HelpItemContribution" />
			</element>
		</schema>
	</configuration-point>
	
	<contribution configuration-id="helpmap">
		<!--  front page -->
		<item id="top" url="http://www2.astrogrid.org/science" />
		<!--  contents / index -->
		<item id="contents" url="http://www2.astrogrid.org/sitemap" />
		<item id="gettingStarted" url="http://www2.astrogrid.org/science/getting-started/" />
		<item id="tutorial.dataAccess" url="http://www2.astrogrid.org/science/data-access/data-access-worksheet" />
		<item id="tutorial.solar" url="http://www2.astrogrid.org/science/solar-system" />
		<item id="tutorial.galactic" url="http://www2.astrogrid.org/science/science-examples-galaxies" />
		<item id="tutorial.stars" url="http://www2.astrogrid.org/science/science-examples-stars" />
		<item id="tutorial.cosmology" url="http://www2.astrogrid.org/science/science-cosmology" />
	</contribution>
	
	<!--  only display this set of help in workbench mode. later maybe add an equivalent set of buttons for plastic. -->
	<contribution configuration-id="uiStructure" if="not (property system.help.disabled) and (property workbench.mode)">
		<action parentName="help" name="intro" text="AstroGrid: Science Introduction"
			object="service:help" methodName="showHelp" before="*" />

		<action parentName="help" name="started" text="Getting Started"
			object="service:help" methodName="showHelpForTarget" 
			after="intro"  before="contents" iconName="help16.png" >
			<parameter>gettingStarted</parameter>
		</action>		
		
		<action parentName="help" name="contents" text="Help Contents"
			object="service:help" methodName="showHelpForTarget" 
			after="started" before="tutorials" 
			iconName="contents16.png" >
			<parameter>contents</parameter>
		</action>
		
		
	<menu name="tutorials" text="Tutorials" parentName="help" after="contents" before="div1" />

 	<action parentName="tutorials" name="access" text="Data Access"
 		object="service:help" methodName="showHelpForTarget" before="*">
 			<parameter>tutorial.dataAccess</parameter>
 	</action>
 	 	<action parentName="tutorials" name="cosmology" text="Cosmology"
 		object="service:help" methodName="showHelpForTarget"  after="access" before="galaxy">
 			<parameter>tutorial.cosmology</parameter>
 	</action>
 	 	<action parentName="tutorials" name="galaxy" text="Galaxies"
 		object="service:help" methodName="showHelpForTarget"  after="cosmology" before="star">
 			<parameter>tutorial.galactic</parameter>
 	</action>
 	 	<action parentName="tutorials" name="star" text="Stars"
 		object="service:help" methodName="showHelpForTarget" before="solar" after="galaxy">
 			<parameter>tutorial.stars</parameter>
 	</action>
 	 	<action parentName="tutorials" name="solar" text="Solar"
 		object="service:help" methodName="showHelpForTarget" after="*">
 			<parameter>tutorial.solar</parameter>
 	</action>

	</contribution>
	<!--  
	================================
	BROWSER CONTROL
	 -->
	
	<service-point id="browser" interface="BrowserControl">
	Controls the webbrowser
	</service-point>
	<implementation service-id="browser" if="(class javax.jnlp.ServiceManager) and (not (property system.browser.disabled))">
		<invoke-factory>
		<construct class="org.astrogrid.desktop.modules.system.WebstartBrowserControl">
			<service>webserver</service>
			<service>ui</service>
		</construct>
		</invoke-factory>
	</implementation>

	<implementation service-id="browser" if="(not (class javax.jnlp.ServiceManager)) and  (class edu.stanford.ejalbert.BrowserLauncher) and (not (property system.browser.disabled))">
		<invoke-factory>
		<construct class="org.astrogrid.desktop.modules.system.BrowserLauncherBrowserControl">
			<service>webserver</service>
			<service>ui</service>
		</construct>
		</invoke-factory>		
	</implementation>

	<implementation service-id="browser" if="(not (class javax.jnlp.ServiceManager)) and (not (class edu.stanford.ejalbert.BrowserLauncher)) and (not (property system.browser.disabled)) ">
		<invoke-factory>
		<construct class="org.astrogrid.desktop.alternatives.FallbackBrowserControl">
	<service>webserver</service>
		</construct>
		</invoke-factory>		
	</implementation>	
		
	<implementation service-id="browser"  if="property system.browser.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>	
	
	<!--  
	===================================
	CONFIGURATION
	 -->

	
	<service-point id="configuration" interface="org.astrogrid.desktop.modules.system.ConfigurationInternal">
		Provides and persists preferences objects
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.pref.PreferenceManagerImpl">
				<configuration>framework.preferences</configuration>
				<configuration>framework.preferenceClass</configuration>
				<service>framework.sysproperties</service>
			</construct>
		</invoke-factory>
	</service-point>	
	
	<contribution configuration-id="hivemind.ObjectProviders">
		<provider prefix="preference" service-id="configuration" />
	</contribution>
	
	<contribution configuration-id="hivemind.SymbolSources">
		<source name="preferences"
		 	before="hivemind.ApplicationDefaults" 
		 	service-id="configuration" />
	</contribution>	
	
	<!--  preference editing servlet -->
	<contribution configuration-id="servlets" if="not (property system.preference.servlet.disabled)">
		<servlet name="preferences" path="/preferences" 
			servletClass="org.astrogrid.desktop.modules.system.pref.PreferenceEditorServlet" />
	</contribution>
	
	<contribution configuration-id="servletContext">
		<attribute name="preferences" object="configuration:framework.preferences" />
		<attribute name="arranger" object="service:preferencesArranger" />
	</contribution>

	<!-- 
	=============================
	UI
	 -->
	 
	 <service-point id="ui" interface="org.astrogrid.desktop.modules.system.ui.UIContext">
	 	The User Interface central model.
        <!-- 
         -->
        <interceptor service-id="system.edtInvoke" >
            <include method="show" />
            <include method="hide" />
            <include method="setLoggedIn" />
            <include method="setStatusMessage" />
            <include method="startThrobbing" />
            <include method="stopThrobbing" />                                                
            <exclude method="*" />
        </interceptor>           
	 	<invoke-factory>
	 		<construct class="org.astrogrid.desktop.modules.system.ui.UIContextImpl">
	 			<service>configuration</service>
	 			<service>executor</service>
	 			<service>help</service>
	 			<service>browser</service>
	 			<service>plasticList</service>
	 			<configuration>windowFactories</configuration>
	 		</construct>
	 	</invoke-factory>
	 </service-point>
	 
	 <configuration-point id="windowFactories">
	 	Defines factories that can create different kinds of top level UI windows.
	 	ui module contributes to these 
	 	<schema>
			<element name="window" key-attribute="name" content-translator="object">
	 				Reference to a service, or somesuch that acts as a factory.
	 				must implemeent org.apache.commons.collections.Factory
	 			<attribute name="name" required="true" unique="true">
	 				Name of the window factory - used in UI.
	 			</attribute>
				<rules>
					<push-content />
					<invoke-parent method="addElement" />
				</rules>
			</element>	
	 	</schema>
	 </configuration-point>
	 
	 <!--  todo - maybe replace this with a uiBuilder instead. -->
	<service-point id="uiView" interface="org.astrogrid.desktop.modules.ui.UIComponent"> 
		Main user interface view, used in AR and PLastic versions.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.ui.ArMainWindow"> 
				<service>builtin.shutdown</service>
				<service>ui</service>
				<service>uiBuilder</service>
				<event-listener service-id="builtin.shutdown" />				
				<set property="visible" value="${system.ui.visible}" /> 
				<set property="title"	value="${system.ui.title}" />
			</construct>
		</invoke-factory>		
	</service-point>
	
	<implementation service-id="uiView"  if="(property system.ui.disabled) or (property workbench.mode)">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />
	</implementation>
	
		<!--  need to add some extra logic here - so that it's possible to get it back after hide. -->
	<contribution configuration-id="framework.preferences" if="not (property asr.mode)">
		<preference name="system.ui.visible" advanced="true"
			default-value="true">
			<ui-name>Display main window on startup</ui-name>
			<description>If false, will startup in hidden mode</description>
			<units>boolean</units>
		</preference>
	</contribution>	
		

	<!-- start this  eager as we want to display a UI 
		need to determine whether system.ui.visble takes effect as wanted-->
	<contribution configuration-id="hivemind.EagerLoad">
		<load service-id="uiView"/>
	</contribution>
	
	<service-point id="uiBuilder" interface="org.astrogrid.desktop.modules.system.ui.UIContributionBuilder">
		Consumes the UI Contribution, and builds a UI from it.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.ui.UIContributionBuilderImpl">
				<configuration>uiStructure</configuration>
				<service>framework.htmlResultTransformer</service>
				<service>framework.converter</service>
				<error-handler/>			
			</construct>
		</invoke-factory>
	</service-point>	
	
	<configuration-point id="uiStructure">
		Defines menus, tabs, and entries of the user interface.
		<schema>
			<element name="menu" key-attribute="name">
				A new menu
				<attribute name="parentName"  required="true">
					names the parent of this menu - i.e. where it should be added.
					Either nominate another menu, or 'menubar' to add a new top-level menu
				</attribute>
				<attribute name="name" required="true" unique="true" >
					the name of this new menu 
				</attribute>
				<attribute name="text" required="true" >
					Display text for this menu
				</attribute>
				<attribute name="visibleCondition" translator="object">
					tie this ui component to a preference object, and only make this component visible when the
					preference is true
				</attribute>
				<element name="tooltip">
					<rules>
						<push-content />
						<invoke-parent method="setToolTipText" />
					</rules>					
				</element>
				<attribute name="iconName">
					unqualified name of the icon file. Must be loadable by IconHelper
				</attribute>
				<attribute name="before" >
					list of names of items that this menu should appear before.
					Use '*' to indicate all.
				</attribute>
				<attribute name="after">		
					list of names of items that this menu should appear after. Use '*' to indicate all.
				</attribute>
				<conversion class="org.astrogrid.desktop.modules.system.contributions.UIMenuContribution" />
			</element>	
		<element name="divider" key-attribute="name">
			A divider / menu separtor
				<attribute name="parentName"  required="true">
					Names the parent tab or menu this divider belongs to
				</attribute>
				<attribute name="name" required="true" unique="true" >					
					name of this divider
				</attribute>	
				<attribute name="before" >
					list of names of items that this divider should appear before.
					Use '*' to indicate all.					
				</attribute>
				<attribute name="after" >
					list of names of items that this divider should appear after.
					Use '*' to indicate all.					
				</attribute>		
				<conversion class="org.astrogrid.desktop.modules.system.contributions.UIDividerContribution" />				
		</element>	
		
		<element name="action" key-attribute="name">	
			A new action - materializes as a button or menu entry.
				<attribute name="onEventDispatchThread" translator="boolean">
					If true, run on EDT, if false, run in background (default).
					Set to true for blocking dialogues  - else once the background task
					timesout, the dialogue will be dismissed.
				</attribute>
				<attribute name="parentName"  required="true">
					Names the parent tab or menu for this action.
				</attribute>
				<attribute name="name" required="true" unique="true" >					
					name of this action.
				</attribute>
				<attribute name="text" required="true" >
					Display text for this action.
				</attribute>
				<attribute name="visibleCondition" translator="object">
					tie this ui component to a preference object, and only make this component visible when the
					preference is true
				</attribute>			
				<element name="tooltip">
					<rules>
						<push-content />
						<invoke-parent method="setToolTipText" />
					</rules>					
				</element>
				<attribute name="iconName" > 
					unqualified name of the icon file. Must be loadable by IconHelper					
				</attribute>
				<attribute name="before" >
					list of names of items that this menu should appear before.
					Use '*' to indicate all.					
				</attribute>
				<attribute name="after" >
					list of names of items that this menu should appear after.
					Use '*' to indicate all.					
				</attribute>
				<attribute name="object" required="true" translator="object">
					The object that this action invokes a method on. May refer to an
					existing service using 'service:..' or a new object using 'instance:..'
				</attribute>
				<attribute name="methodName" required="true" >	
					name of the method to invoke.
				</attribute>
				<attribute name="help-id">
					a help id to display help for this tab.
				</attribute>					
				<element name="confirmMessage" > 
					If present, this element defines a message to display in a 'yes'/'no' popup
					dialogue before invoking the action method. Useful for 'are you sure'
					checks.
					<rules>
						<push-content />
						<invoke-parent method="setConfirmMessage" />
					</rules>					
				</element>
				<element name="parameter">
					An inline parameter to the action method. Will be converted from
					string to the appropriate basic type if necessary.
					<rules>
						<push-content />
						<invoke-parent method="addParameter" />
					</rules>
				</element>			
				<element name="reference">
					A parameter given as a reference to some other object 
					- e.g. a  service: or instance:
					<attribute name="value" translator="object"/>
					<rules>
						<push-attribute  attribute="value" />
						<invoke-parent method="addParameter" />
					</rules>
				</element>
			
				<conversion class="org.astrogrid.desktop.modules.system.contributions.UIActionContribution" />				
			</element>						
			<element name="tab" key-attribute="name">
				A new tab in the user interface
				<attribute name="name" required="true" unique="true" >
					name of this tab
				</attribute>
				<attribute name="text" required="true" >
					text to display
				</attribute>
				<attribute name="visibleCondition" translator="object">
					tie this ui component to a preference object, and only make this component visible when the
					preference is true
				</attribute>			
				<element name="tooltip">
					<rules>
						<push-content />
						<invoke-parent method="setToolTipText" />
					</rules>					
				</element>
				<attribute name="iconName">
				unqualified name of the icon file. Must be loadable by IconHelper		
				</attribute>					
				<attribute name="before" >
		list of names of items that this menu should appear before.
					Use '*' to indicate all.							
				</attribute>
				<attribute name="after" >		
		list of names of items that this menu should appear after.
					Use '*' to indicate all.		
				</attribute>
				<attribute name="help-id">
					a help id to display help for this tab.
				</attribute>					
				<conversion class="org.astrogrid.desktop.modules.system.contributions.UITabContribution" />				
			</element>							
		</schema>
	</configuration-point>
		
	<!-- 
	====================
	WEBSERVER
	 -->
	<service-point id="webserver" interface="org.astrogrid.desktop.modules.system.WebServerInternal">
		Web server - consumes servlets and servletContext configurations.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.JettyWebServer"
				initialize-method="init" >
				<configuration>servlets</configuration>				
				<configuration>servletContext</configuration>
				<event-listener service-id="builtin.shutdown" />				
				<set property="port" value="${system.webserver.port}" />
				<set property="scanStartPort" value="${system.webserver.startScanPort}" />
				<set property="scanEndPort" value="${system.webserver.endScanPort}" />
				<set property="contextName" value="${system.webserver.contextName}" />			
				<set property="connectionFile" value="${system.webserver.connectionFile}" />
				<set property="disableConnectionFile" value="${system.webserver.disableConnectionFile}" />
				<set property="inetAddress" value="${system.webserver.inetAddress}" />
				<set-object property="contextName" value="service-property:builtin.sessionManager:defaultSessionId" />
			</construct>
		</invoke-factory>
	</service-point>	
	
	<implementation service-id="webserver"  if="property system.webserver.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>	

	<contribution configuration-id="framework.preferences" if="not (property system.webserver.disabled)">
		<preference name="system.webserver.port" default-value="-1"
		requires-restart="true" advanced="true">
			<ui-name>Run Webserver on port</ui-name>
			<alternative>-1</alternative>
			<units>(-1 to scan for available port)</units>
			<description></description>
		</preference>		
		<preference name="system.webserver.startScanPort" default-value="8001" 
			requires-restart="true" advanced="true">
			<ui-name>Webserver: scan from port</ui-name>
			<description>network port number to start scanning from</description>		
			<units>number</units>
		</preference>
		<preference name="system.webserver.endScanPort" default-value="8800" 
			requires-restart="true" advanced="true">
			<ui-name>until port</ui-name>
			<description>network port number to scan up to</description>		
			<units>number</units>
		</preference>
	</contribution>
	
	<contribution configuration-id="hivemind.FactoryDefaults">					
		<default symbol="system.webserver.contextName" value=""/> <!-- indicates auto-generate -->
		<default symbol="system.webserver.disableConnectionFile" value="false" />
		<default symbol="system.webserver.connectionFile" value="${user.home}${file.separator}.astrogrid-desktop" />
		<default symbol="system.webserver.inetAddress" value="" /><!--  preference? -->
	</contribution>

	<configuration-point id="servlets">
			List of servlets to deploy in Webserver
			<schema>
				<element name="servlet">
					Describes a single servlet
					<attribute name="name" required="true" unique="true" >
						the name of the servlet
					</attribute>
					<attribute name="path" required="true" unique="true" >
						the context path to deploy the servlet to
					</attribute>
					<attribute name="servletClass" required="true" translator="class">			
						name of the class implementing this servlet. Must extend AbstractServlet
					</attribute>
					<conversion 
						class="org.astrogrid.desktop.modules.system.contributions.ServletsContribution" 
						/>				
				</element>
			</schema>
	</configuration-point>
	
	<configuration-point id="servletContext">
		List of objects to add into servlet context, so they can be accessed by servlets
		(as hivemind can't constructor-inject into servlets itself)
		<schema>
			<element name="attribute">
				Describes a single addition to the servlet context
				<attribute name="name" required="true" unique="true" >
					name to store the object under
				</attribute>
				<attribute name="object" required="true" translator="object" >
					the object to store - give a reference to a service using 'service:..', or 
					instantiate a new object using 'instance:..'
				</attribute>
				<conversion 
					class="org.astrogrid.desktop.modules.system.contributions.ServletContextContribution"
					/>
			</element> 
		</schema>
	</configuration-point>
	
	
		
	<contribution configuration-id="servlets" if="not (property system.xmlrpc.disabled)">
		<servlet name="xmlrpc" path="/xmlrpc" servletClass="org.astrogrid.desktop.modules.system.XmlRpcServlet" />
	</contribution>
	
	<contribution configuration-id="servlets" if="not (property system.html.disabled)">
			<servlet name="html" path="/*" servletClass="org.astrogrid.desktop.modules.system.HtmlServlet"/>		
	</contribution>
		
	<contribution configuration-id="servletContext">
		<attribute name="module-registry" object="service:builtin.acr"/>
		<attribute name="converter" object="service:framework.converter"/>
		<attribute name="plainResultTransformer" object="service:framework.plainResultTransformer" />
		<attribute name="htmlResultTransformer" object="service:framework.htmlResultTransformer" />
		<attribute name="rpcResultTransformer" object="service:framework.rpcResultTransformer" />
	</contribution>
	
<!-- 
==========================================
SYSTEM TRAY
 -->
	<service-point id="systray" interface="org.astrogrid.desktop.modules.system.SystemTrayInternal">		
	System Tray
                <interceptor service-id="system.edtInvoke" />               
	</service-point>
    
	 <contribution configuration-id="hivemind.Startup" >
        <startup object="service:systray" />
    </contribution>
    
	<implementation service-id="systray" if="class java.awt.SystemTray">
        Adaptable UI, when JVM offers a system tray (yet this may not be supported under this particular OS / Window manager)
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.BestSuitableSystemTray">
				<service>system.ui</service>
				<service>builtin.shutdown</service>
				<service>configDialogue</service>
			</construct>
		</invoke-factory>
	</implementation>

    <implementation service-id="systray" if="not (class java.awt.SystemTray)">
        Minimalistic UI, when no system tray provided by JVM
        <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.system.FallbackSystemTray">
                <service>system.ui</service>
                <service>builtin.shutdown</service>
                <service>configDialogue</service>
            </construct>
        </invoke-factory>
    </implementation>

	<implementation service-id="systray"  if="(property system.systray.disabled)">
        Non-UI - just logs.
		<invoke-factory>
			<construct class='org.astrogrid.desktop.alternatives.LoggingSystemTray'>
				<string>SYSTRAY</string>
			</construct>
		</invoke-factory>		
	</implementation>	
    
	
	<!-- 
	========================================
	APIHELP
	 -->
	<service-point id="apihelp" interface="ApiHelp">
		Access api help on acr methods
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.ApiHelpImpl">
				<service>builtin.acr</service>
				<service>framework.converter</service>
				<service>framework.rpcResultTransformer</service>
				<service>framework.plainResultTransformer</service>				
			</construct>
		</invoke-factory>
	</service-point>		

	<implementation service-id="apihelp"  if="property system.apihelp.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>	
	
	<!-- 
	==============================
	RMI
	 -->
	<service-point id="rmi" interface="RmiServer">
		RMI Service. Consumes the rmiListenerInterfaces configuration
		<invoke-factory>
			<construct 
				class="org.astrogrid.desktop.modules.system.RmiLiteRmiServerImpl"
				initialize-method="init"
				>
				<service>builtin.acr</service>
				<configuration>rmiListenerInterfaces</configuration>
				<service>builtin.sessionManager</service>
				<event-listener service-id="builtin.shutdown" />						
				<set property="port" value="${system.rmi.port}" />
				<set property="scanStartPort" value="${system.rmi.startScanPort}" />
				<set property="scanEndPort" value="${system.rmi.endScanPort}" />
				<set property="disableConnectionFile" value="${system.rmi.disableConnectionFile}" />				
			</construct>
		</invoke-factory>	
	</service-point>	
	
	<implementation service-id="rmi"  if="property system.rmi.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>
	
	<contribution configuration-id="framework.preferences" if="not (property system.rmi.disabled)">
		<preference name="system.rmi.port" default-value="-1"
		requires-restart="true" advanced="true">
			<ui-name>Run RMI server on port</ui-name>
			<alternative>-1</alternative>
			<description></description>
			<units>(-1 to scan for available port)</units>
		</preference>		
		<preference name="system.rmi.startScanPort" default-value="1099" 
			requires-restart="true" advanced="true">
			<ui-name>RMI server: scan from port </ui-name>
			<description>network port number to start scanning from</description>		
			<units>number</units>
		</preference>
		<preference name="system.rmi.endScanPort" default-value="2099" 
			requires-restart="true" advanced="true">
			<ui-name>until port</ui-name>
			<description>network port number to scan up to</description>	
			<units>number</units>
		</preference>
	</contribution>

	<contribution configuration-id="hivemind.FactoryDefaults">
		<default symbol="system.rmi.disableConnectionFile" value="false" />
	   <default symbol="system.rmi.connectionFile" value="${user.home}${file.separator}.acr-rmi-port" />			
	</contribution>
		
		<configuration-point id="rmiListenerInterfaces">
		Used in RMI service. - list of services that accept listener interfaces - and the 
		interfaces used. Each of these listener interfaces needs to be registered differently
		with the RMI service.
		<schema>
			<element name="service" key-attribute="id">
				Description of an acr service with listener interfaces
				<attribute name="id" required="true" unique="true" translator="qualified-id" >
					the id of the service
				</attribute>
				<element name="listener">
					A listener inteface that this service accepts as a parameter
					<attribute name="interface" required="true" translator="class" >
						Class name of the listener interface. Must extend Listener.
					</attribute>
					<rules>
						<push-attribute attribute="interface" />
						<invoke-parent method="add" />
					</rules>
				</element>
				<rules>
					<create-object class="org.astrogrid.desktop.modules.system.contributions.RmiListenerInterfacesContribution" />
					<read-attribute property="id" attribute="id" />
					<invoke-parent method="addElement" />
				</rules>
			</element>
		</schema>
	</configuration-point>
	
	<!-- ===========================
	INTERNALS - not visible as acr services 
	 -->	
	
	<!--  ===========================
	VFS
	 -->
	<service-point id="vfs" interface="org.apache.commons.vfs.FileSystemManager">
		Uniform access to all filesystems.
        <interceptor service-id="system.edt" /><!-- doesn't give much protection, but might identify some problems. -->        
		<invoke-factory> <!-- should maybe be session later -->
			<construct 
			class="org.astrogrid.desktop.modules.system.HivemindFileSystemManager"
			initialize-method="init"
			log-property="logger">
				<service>tmpFileStore</service>
				<configuration>vfsProviders</configuration>
				<configuration>vfsOperations</configuration>
				<configuration>vfsExtensions</configuration>
				<configuration>vfsMimes</configuration>                
				<set-object property="filesCache" value="service:vfsCache" />
				<set-object property="defaultProvider"
				 value="instance:org.apache.commons.vfs.provider.url.UrlFileProvider" />
				 <set-object property="replicator" value="service:replicator" />
			<!-- 	 <set-object property="temporaryFileStore" value="service:tmpFileStore" /> -->
				 <set property="baseFileString" value="${vfs.basefile}" />
				 <set-object property="fileContentInfoFactory" value="instance:org.astrogrid.desktop.modules.system.AugmentedFileContentInfoFilenameFactory" />
				<event-listener service-id="builtin.shutdown" />
			</construct>
		</invoke-factory>
	</service-point>
    
	
		<!-- ikkle services that vfs depends upon.	-->
		
    <service-point id="vfsCache" visibility="private" interface="org.apache.commons.vfs.FilesCache" >
        <invoke-factory model="primitive">
            <construct class="org.astrogrid.desktop.modules.ag.vfs.DesktopFilesCache">
            </construct>
        </invoke-factory>
    </service-point>
            
        
	<service-point id="replicator" visibility="private"
		interface="org.apache.commons.vfs.provider.FileReplicator">
		<invoke-factory model="primitive">
			<construct class="org.apache.commons.vfs.impl.PrivilegedFileReplicator">
				<service>tmpFileStore</service>
			</construct>
		</invoke-factory>	
	</service-point>		
	<service-point id="tmpFileStore" visibility="private"
		interface="org.apache.commons.vfs.impl.DefaultFileReplicator">
		<create-instance model="primitive" 
			class="org.apache.commons.vfs.impl.DefaultFileReplicator" />
	</service-point>
	
	<configuration-point id="vfsProviders">
		List of file system types that vfs knows how to access.
	  <schema>
    	<element name="provider" key-attribute="scheme">
      		<attribute name="scheme"/>
      		<attribute name="implementation" required="true" translator="object"/>
	      <rules>
    	    <push-attribute attribute="implementation"/>
        	<invoke-parent method="addElement"/>
	      </rules>
   	 </element>
	  </schema>	
	</configuration-point>
	
		<configuration-point id="vfsOperations">
		List of objects that provide additional vfs operations
	  <schema>
    	<element name="operation" key-attribute="scheme">
      		<attribute name="scheme"/>
      		<attribute name="implementation" required="true" translator="object"/>
	      <rules>
    	    <push-attribute attribute="implementation"/>
        	<invoke-parent method="addElement"/>
	      </rules>
   	 </element>
	  </schema>	
	</configuration-point>
		
	<configuration-point id="vfsExtensions">
	List of mappings between file extension and scheme
	  <schema>
    	<element name="extension" key-attribute="name">
      		<attribute name="name"/>
      		<attribute name="scheme" required="true"/>
	      <rules>
    	    <push-attribute attribute="scheme"/>
        	<invoke-parent method="addElement"/>
	      </rules>
   	 </element>
	  </schema>
	</configuration-point>	
	
	<configuration-point id="vfsMimes">
	List of mappings between mimetype and scheme.
	  <schema>
    	<element name="mime" key-attribute="name">
      		<attribute name="name"/>
      		<attribute name="scheme" required="true"/>
	      <rules>
    	    <push-attribute attribute="scheme"/>
        	<invoke-parent method="addElement"/>
	      </rules>
   	 </element>
	  </schema>
	</configuration-point>	
	
	<!--  and now some default contributions. -->	
	<contribution configuration-id="vfsProviders">
		<provider scheme="file" 
			implementation="instance:org.apache.commons.vfs.provider.local.DefaultLocalFileProvider" />
            <!--  don't want these for now - not sure if my ui could support it 
            re-examine these later
		<provider scheme="zip"
			implementation="instance:org.apache.commons.vfs.provider.zip.ZipFileProvider" />
		<provider scheme="gz"
			implementation="instance:org.apache.commons.vfs.provider.gzip.GzipFileProvider" />
            -->
			<!--  required external libs 
		<provider scheme="tar"
			implementation="instance:org.apache.commons.vfs.provider.tar.TarFileProvider" />
		<provider scheme="bz2"
			implementation="instance:org.apache.commons.vfs.provider.bzip2.Bzip2FileProvider" />
		<provider scheme="tgz"
			implementation="instance:org.apache.commons.vfs.provider.tar.TarFileProvider" />
		<provider scheme="tbz2"
			implementation="instance:org.apache.commons.vfs.provider.tar.TarFileProvider" />			
		-->
		<provider scheme="tmp"
			implementation="instance:org.apache.commons.vfs.provider.temp.TemporaryFileProvider" />
		<provider scheme="ftp"
			implementation="instance:org.apache.commons.vfs.provider.ftp.FtpFileProvider" />
            <!--  removed for now - as latest vfs has a version class with httpclient.
            removing this providers means that the native java lib's HTTP access is used - which is not a problem.
		<provider scheme="http"
			implementation="instance:org.apache.commons.vfs.provider.http.HttpFileProvider" />
		<provider scheme="https"
			implementation="instance:org.apache.commons.vfs.provider.https.HttpsFileProvider" />
            -->
		<provider scheme="sftp"
			implementation="instance:org.apache.commons.vfs.provider.sftp.SftpFileProvider" />
            <!-- unneeded 
		<provider scheme="res"
			implementation="instance:org.apache.commons.vfs.provider.res.ResourceFileProvider" />
            -->
		<provider scheme="ram"
			implementation="instance:org.apache.commons.vfs.provider.ram.RamFileProvider" />
	</contribution>
	
	<contribution configuration-id="vfsExtensions">
		<extension name="zip" scheme="zip"/>
		<extension name="gz" scheme="gz"/>
<!-- 		<extension name="tar" scheme="tar"/>
		<extension name="bz2" scheme="bz2"/>
		<extension name="tgz" scheme="tar"/>
		<extension name="tbz2" scheme="tar"/> -->		
	</contribution>
	
	<contribution configuration-id="vfsMimes">
		<mime name="application/zip" scheme="zip" />
		<mime name="application/x-gzip" scheme="gz" />
		<mime name="application/x-tar" scheme="tar" />
	</contribution>
		
	<contribution configuration-id="hivemind.FactoryDefaults">			
	    <default symbol="vfs.basefile" value="${user.home}" />
	</contribution>


	
	<!--  ===================
	SCHEDULER
	 -->
	<service-point id="scheduler" interface="org.astrogrid.desktop.modules.system.SchedulerInternal">
		Runs scheduled tasks. consumes the scheduledTasks configuration
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.ClockDaemonScheduler">
				<configuration>scheduledTasks</configuration>
				<service>ui</service>
				<service>builtin.sessionManager</service>
				<event-listener service-id="builtin.shutdown" />
			</construct>
		</invoke-factory>
	</service-point>		

	<implementation service-id="scheduler"  if="property system.scheduler.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>		
	
		<configuration-point id="scheduledTasks" schema-id="objects">
		List of task objects to add to the scheduler.
	</configuration-point>

	<!--  ===========================
	EXECUTOR
	 -->
	<service-point id="executor" interface="org.astrogrid.desktop.modules.system.BackgroundExecutor">
		Runs background tasks on a pool of threads.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.BackgroundExecutorImpl"
				initialize-method="init">
				<service>ui</service>
				<service>builtin.sessionManager</service>
				<set property="queueSize" value="${system.executor.queueSize}" />
				<set property="startThreads" value="${system.executor.startThreads}" />
				<set property="maxThreads" value="${system.executor.maxThreads}" />
				<event-listener service-id="builtin.shutdown" />				
			</construct>		
		</invoke-factory>
	</service-point>		

	<implementation service-id="executor"  if="property system.executor.disabled">
		<create-instance class="org.astrogrid.desktop.alternatives.InThreadExecutor" />
	</implementation>		
	
	<contribution configuration-id="hivemind.FactoryDefaults">			
	    <default symbol="system.executor.queueSize" value="10000" />
		<default symbol="system.executor.startThreads" value="15" />
		<default symbol="system.executor.maxThreads" value="30" />
	</contribution>		
	

<!-- ==========================
SINGLE INSTANCE LISTENER
 -->
	<service-point id="singleInstanceListener" visibility="private" interface="java.lang.reflect.InvocationHandler">
	Hook into webstart system, and will display ui if app is webstarted repeatedly.
	</service-point>		
	
	<implementation service-id="singleInstanceListener" if="class javax.jnlp.ServiceManager">
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.SingleInstanceListener">
				<service>ui</service>
			</construct>
		</invoke-factory>		
	</implementation>
	
	<implementation service-id="singleInstanceListener"  if="not (class javax.jnlp.ServiceManager)">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>		
	
	<!-- start this eager if running under webstart -->
	<contribution configuration-id="hivemind.EagerLoad" if="class javax.jnlp.ServiceManager">
		<load service-id="singleInstanceListener" />
	</contribution>
<!--  =============================
MAC SETUP
 -->
	<service-point id="macSetup" visibility="private" interface="java.lang.reflect.InvocationHandler">
	Hook into OSX UI.
	</service-point>
	
	<implementation service-id="macSetup" if="class com.apple.eawt.Application">
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.MacSetup">
				<service>ui</service>
				<service>builtin.shutdown</service>
				<service>configDialogue</service>
			</construct>
		</invoke-factory>		
	</implementation>
	
	<implementation service-id="macSetup"  if="not (class com.apple.eawt.Application)">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>		
	
	<!-- start this eager if running on a mac -->
	<contribution configuration-id="hivemind.EagerLoad" if="class com.apple.eawt.Application" >
		<load service-id="macSetup" />
	</contribution>
	
		
	<!-- RELATED - when running in workbench mode, tweak the ui up -->
	<contribution configuration-id="hivemind.Startup" if="property workbench.mode">
		<startup object="instance:org.astrogrid.desktop.modules.system.SwingSetup" />
	</contribution>
		
	
	<!--  ====================================
	THROBBER
	 -->
	<service-point id="throbber" interface="org.apache.hivemind.ServiceInterceptorFactory">
		Causes UI to throb to indicate calls to remote services.
	</service-point>
	<implementation service-id="throbber"  if="not ((property system.ui.disabled) and (property system.systray.disabled))" >
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.ThrobberInterceptorFactory">
				<service>ui</service>
				<service>systray</service>
				<service>hivemind.ClassFactory</service>
			</construct>
		</invoke-factory>		
	</implementation>
	
	<implementation service-id="throbber"  if="(property system.ui.disabled) and (property system.systray.disabled)" >
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>	
	<!--  ============================
    EDT invoker 
    -->
    <service-point id="edtInvoke"
     interface="org.apache.hivemind.ServiceInterceptorFactory"
        parameters-schema-id="hivemind.MethodFilter"      >
        Causes all service methods to be invoked on the EDT thread.
       <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.system.EdtInvocationInterceptorFactory">
                <service>hivemind.ClassFactory</service>
            </construct>
        </invoke-factory>   
    </service-point>
    
    <implementation service-id="throbber"  if="(property system.ui.disabled) and (property system.systray.disabled)" >
        <invoke-factory service-id="hivemind.lib.PlaceholderFactory" />                 
    </implementation>       
    
	<!--  ===========================
	SNITCH
	 -->
	<service-point id="snitch" interface="org.astrogrid.desktop.modules.system.SnitchInternal">
		Reporting Service
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.SnitchImpl">
				<service>ui</service>
				<string>${astrogrid.desktop.version}</string>
				<string>${app.mode}</string>
				<service>plasticList</service>
				<object>preference:system.doSnitch</object>
			</construct>
		</invoke-factory>
	</service-point>
	
	<contribution configuration-id="framework.preferences"> 
		<preference name="system.doSnitch" default-value="true" 
		advanced="true" requires-restart="true">
			<ui-name>Track usage</ui-name>
			<description></description>
			<units>boolean</units>
		</preference>		
	</contribution>		
	
	<implementation service-id="snitch" if="property system.snitch.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>		
	
	<service-point id="snitchInterceptor" 
		interface="org.apache.hivemind.ServiceInterceptorFactory"
		parameters-schema-id="hivemind.MethodFilter">
	  Snitch on usage of AR
	  <invoke-factory model="primitive">
	  	<construct class="org.astrogrid.desktop.modules.system.SnitchInterceptorFactory">
	  		<service>snitch</service>	  	
			<service>hivemind.ClassFactory</service>	  		
	  	</construct>
	  </invoke-factory>
	</service-point>
	
	<!--  ==================================
	DEPRECATION
	 -->
	<service-point id="deprecation"
		interface="org.apache.hivemind.ServiceInterceptorFactory"
		parameters-schema-id="hivemind.MethodFilter">
		Warn on using deprecated methods
		<invoke-factory model="primitive">
			<construct class="org.astrogrid.desktop.modules.system.DeprecationInterceptorFactory">
				<service>hivemind.ClassFactory</service>
			</construct>
		</invoke-factory>
		</service-point>

    <!--  ==================================
    EDT enforcement
     -->
    <service-point id="edt"
        interface="org.apache.hivemind.ServiceInterceptorFactory"
        parameters-schema-id="hivemind.MethodFilter">
        Warn on calling long-running methods on the EDT thread.
        <invoke-factory model="primitive">
            <construct class="org.astrogrid.desktop.modules.system.ExpensiveMethodInterceptorFactory">
                <service>hivemind.ClassFactory</service>
            </construct>
        </invoke-factory>
    </service-point>

  
<!--  ================================
	TUPPERWARE
	 -->
	<service-point id="tupperware"
		interface="org.astrogrid.desktop.modules.system.TupperwareInternal">
		Plastic container for rest of workbench.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.system.TupperwareImpl">
				<service>ui</service>
				<service>plastic.hub</service>
				<string>${system.ui.title}</string>
				<string>http://www.astrogrid.org/desktop</string>
				<configuration>plasticMessageHandlers</configuration>
				<service>plasticList</service>
			</construct>
		</invoke-factory>
	</service-point>
		
	<implementation service-id="tupperware"  if="property system.tupperware.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>
	
		<configuration-point id="plasticMessageHandlers" schema-id="objects">
	List of handlers to register as processors of plastic messages.
	Should all be instances of org.votech.plastic.incoming.handlers.MessageHandler
	</configuration-point>

<!-- ========================================
XML Persistence --> 
    <service-point id="xmlPersist" interface="org.astrogrid.desktop.modules.system.XmlPersist">
        <create-instance class="org.astrogrid.desktop.modules.system.XStreamXmlPersist" />
    </service-point>

<!-- ================================
	CONFIGURATION DIALOGUE
 -->
 	<service-point id="configDialogue"  interface="java.lang.Runnable">
 		A configuration dialogue
        <interceptor service-id="system.edtInvoke" />
 		<invoke-factory>
 			<construct class="org.astrogrid.desktop.modules.system.pref.PreferenceEditor">
 				<service>preferencesArranger</service>
 				<object>preference:acr.advanced</object>
 				<service>system.ui</service>
 			</construct>
 		</invoke-factory>
 	</service-point>
 	
 	<service-point id="preferencesArranger" interface="org.astrogrid.desktop.modules.system.pref.PreferencesArranger">
 		Helper component that sorts preferences into structures for ui work.
 		<invoke-factory>
 			<construct class="org.astrogrid.desktop.modules.system.pref.PreferencesArrangerImpl">
 				<configuration>framework.preferences</configuration>
 			</construct>
 		</invoke-factory>
 	</service-point>
 	
 
 <!--  ===================
 ABOUT Dialogue - TODO -->
 		

<!--  ======================
PLASTIC LIST MODEL -->

	<service-point id="plasticList"
		interface="ca.odell.glazedlists.EventList">
		<create-instance class="ca.odell.glazedlists.BasicEventList" />
	</service-point>

    <!--  plastic filesystem
    interresting idea, but incomplete.
    <service-point id="plasticVfs" visibility="private" interface="org.astrogrid.desktop.modules.ag.vfs.VfsFileProvider" >
        <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.ag.vfs.plastic.PlasticProvider">
                <service>plasticList</service>
            </construct>
        </invoke-factory>
    </service-point>
        
    <contribution configuration-id="system.vfsProviders">
        <provider scheme="plastic"
            implementation="service:plasticVfs" />
    </contribution>
     -->
<!-- 
================================
UPDATE CHECKER
 -->
<service-point id="update" visibility="private" interface="java.lang.Runnable">
 version checker
</service-point>

	<implementation service-id="update" if="not ((class javax.jnlp.ServiceManager) or (property system.update.disabled) or (property asr.mode))">
		<invoke-factory model="primitive">
			<construct class="org.astrogrid.desktop.modules.system.UpdateChecker">
				<service>ui</service>
				<service>browser</service>
				<string>${astrogrid.desktop.version}</string>
				<object>preference:system.checkForUpdates</object>
			</construct>
		</invoke-factory>		
	</implementation>
	
	<contribution configuration-id="framework.preferences" if="not(class javax.jnlp.ServiceManager)"> 
		<preference name="system.checkForUpdates" default-value="true">
			<ui-name>Check for updates on startup</ui-name>
			<description></description>
			<units>boolean</units>
		</preference>		
	</contribution>	
	
	
	<implementation service-id="update"  if="(class javax.jnlp.ServiceManager) or (property system.update.disabled) or (property asr.mode)">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />					
	</implementation>		

	<contribution configuration-id="hivemind.Startup" if="not (property asr.mode)">
		<startup object="service:update" />
	</contribution>

<!--  upgrade -->
	<service-point id="upgrade" visibility="private" interface="java.lang.Runnable">
		upgrade code - runs once for each new version, to fix bugs introduced in previous versions
		<invoke-factory model="primitive">
			<construct class="org.astrogrid.desktop.modules.system.Upgrade">
				<string>${astrogrid.desktop.version}</string>
				<service>configuration</service>
			</construct>
		</invoke-factory>
	</service-point>

	<contribution configuration-id="hivemind.Startup">
		<startup object="service:upgrade" />
	</contribution>
 </module> 
 
 