<?xml version="1.0"?>
<!DOCTYPE module  [
	<!ENTITY descriptors SYSTEM "classpath:/org/astrogrid/desktop/hivemind/ui-descriptors.xml">
	
	]>
<module id="ui" version="1.0.0" package="org.astrogrid.acr.ui">
<!--  PREAMBLE -->
	<dependency module-id="system"/>
	<dependency module-id="framework" />
	<dependency module-id="astrogrid" />
	<dependency module-id="dialogs" />
	<dependency module-id="ivoa" />
	<dependency module-id="cds" />
	<dependency module-id="plastic" />				
			
	<contribution configuration-id="framework.descriptors">
		<acr-module name="ui" description="Applications for working with the VO">
		&descriptors;
		</acr-module>
	</contribution>	
		
	<contribution configuration-id="framework.acrServices">
			<acrService id="astroscope" interface="AstroScope"/>
			<acrService id="applicationLauncher" interface="ApplicationLauncher" />
			<acrService id="registryBrowser" interface="RegistryBrowser" />
			<acrService id="fileManager" interface="FileManager" />
			<acrService id="queryBuilder" interface="QueryBuilder" />
	</contribution>

	
<!--  
==============================
UI STRUCTURES
 -->

<!-- assume that if this module is loaded, we're running as workbench -->
	<contribution configuration-id="system.uiStructure">
			<action parentName="help" name="about" text="About Astro Runtime.." onEventDispatchThread="true"
			object="instance:java.lang.String" methodName="concat" iconName="AGlogo16x16.png"
			after="*" > 
			<parameter><![CDATA[
			<html>
			<h1>VO Explorer v${astrogrid.desktop.version}</h1>		
			<b>http://www.astrogrid.org/desktop</b><br>
			<h2>Contributors</h2>
			<ul>
			 <li>Alasdair Allan</li>
			<li>Elizabeth Auden</li>
			<li>Kona Andrews</li>
			<li>Kevin Benson</li>
			<li>Silvia Dalla</li>
			<li>Gary Gilchrist</li>
			<li>Eduardo Gonzalez</li>
			<li>Norman Gray</li>
			<li>Paul Harrison</li>
			<li>Tony Linde</li>
			<li>Jeff Lusted</li>
			<li>Phil Nicholson</li>
			<li>Keith Noddle</li>
			<li>Jonathan Tedds</li>
			<li>Dave Morris</li>
			<li>Catherine Qin</li>
			<li>Anita Richards</li>
			<li>Guy Rixon</li>
			<li>John Taylor</li>
			<li>Mark Taylor</li>
			<li>Nicholas Walton</li>
			<li>Noel Winstanley</li>
			</ul>			
			<h2>Acknowledgements</h2>
			Contains code and/or integrates with services provided by CADC, CDS, ESA-VO, NVO, Starlink, Plastic, VOTech

			<hr>
			<h2>Build Information</h2>
			Built: ${astrogrid.build.date}<br>
			At: ${astrogrid.build.location}<br>
			With ${astrogrid.build.jdk}<br>
			By: ${astrogrid.build.by}
			</html>
			]]></parameter>
		</action>	
	</contribution>
	
	
<!--  
===============================
ASTROSCOPE
 -->
	<service-point id="astroscope" interface="org.astrogrid.desktop.modules.ui.AstroScopeInternal">
			<interceptor service-id="system.snitchInterceptor" />
            <interceptor service-id="system.edtInvoke" />
		<invoke-factory> 
		<construct class="org.astrogrid.desktop.modules.ui.AstroScopeFactory" >
						<service>UiBuilder</service>
		</construct>
		</invoke-factory>	
	</service-point>

	<contribution configuration-id="system.windowFactories">
		<window name="All-VO Scope">service:astroscope</window>
	</contribution>
		
										
	<contribution configuration-id="UiBuilderObjects">
		<object name="astroscope" class="org.astrogrid.desktop.modules.ui.AstroScopeLauncherImpl" >
		Describes how to build a new astroscope window.
			<inject object="service:system.ui"/>			
			<inject object="service:protocolsBuilder" />
			<inject object="service:actionsBuilder" />	
            <inject object="service:system.uiBuilder" />            		
			<inject object="service-property:scopeHistory:list" />
			<inject object="ui:scopeServiceList" />
			<inject object="service:system.vfs" />
			<inject object="service:cds.sesame" />
			<inject object="service:system.snitch" />
		</object>
		<object name="scopeServiceList" 
		class="org.astrogrid.desktop.modules.ui.scope.ScopeServicesList">
		Describes how to builld a subclass of registry google, specialized for
		displaying summaries in astroscope.
			<inject object="service:ivoa.registry" />
			<inject object="cache:resources" />
			<inject object="cache:bulk" />
			<inject object="service:dialogs.resourceViewersFactory" />			
			<inject object="service:votech.vomon" />
			<inject object="service:dialogs.capabilityIconFactory" />	
			<inject object="service:votech.annotate" />
            <inject object="preference:acr.advanced" />
		</object>
	</contribution>
	
	<service-point id="scopeHistory" visibility="private" interface="org.astrogrid.desktop.modules.ui.folders.ListProvider">
		Loads / saves the astroscope search history.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.ui.scope.ScopeHistoryProvider">
				<service>system.ui</service>
				<object>preference:astrogrid.workdir</object>
                <service>system.xmlPersist</service>
			</construct>
		</invoke-factory>
	</service-point>	
		
	<service-point id="protocolsBuilder" interface="org.astrogrid.desktop.hivemind.IterableObjectBuilder"
		visibility="private">
		Object builder for astroscope protocols
		<invoke-factory model="singleton">
			<construct class="org.astrogrid.desktop.hivemind.IterableObjectBuilderImpl">
				<log />
				<configuration>protocols</configuration>
				<service>hiveutils.ObjectTranslator</service>
				<service>hiveutils.EventLinker</service>
			</construct>
		</invoke-factory>
	</service-point>	
		
	<configuration-point id="protocols" schema-id="hiveutils.ObjectBuilderSchema">
		Configuration point for the list of 'protocols' - kinds of service that astroscope knows how to invoke.
		All should be an instance of DalProtocol
	</configuration-point>
		
	<!--  lists of protocols  -->
	<contribution configuration-id="protocols">
		<object name="siap" class="org.astrogrid.desktop.modules.ui.scope.SiapProtocol">
			<inject object="service:ivoa.registry" />
			<inject object="service:ivoa.siap" />
		</object>
		<object name="ssap" class="org.astrogrid.desktop.modules.ui.scope.SsapProtocol">
			<inject object="service:ivoa.registry" />
			<inject object="service:ivoa.ssap" />
		</object>
		<object name="cone" class="org.astrogrid.desktop.modules.ui.scope.ConeProtocol">
			<inject object="service:ivoa.registry" />
			<inject object="service:ivoa.cone" />
		</object>
		<object name="vizier" class="org.astrogrid.desktop.modules.ui.scope.AllVizierProtocol">
			<inject object="service:ivoa.cone" />
		</object>
		<object name="stap" class="org.astrogrid.desktop.modules.ui.scope.StapProtocol">
			<inject object="service:ivoa.registry" />
			<inject object="service:astrogrid.stap" />
		</object>		
	</contribution>

		<contribution configuration-id="system.helpmap">
		<item id="userInterface.astroscopeLauncher" url="http://www2.astrogrid.org/science/documentation/data-explore/astroscope" />
		<item id="astroscope.menu.science" url="http://www2.astrogrid.org/science/documentation/data-explore/astroscope" />
		<item id="astroscope.menu.reference" url="http://www2.astrogrid.org/science" />

	</contribution>

	<!-- -
	====================================
	TASK RUNNER
	 -->
	<service-point id="applicationLauncher" interface="org.astrogrid.desktop.modules.ui.TaskRunnerInternal">
		<interceptor service-id="system.snitchInterceptor" >
            <exclude method="hide" />
        </interceptor>  
            <interceptor service-id="system.edtInvoke" />        
		<invoke-factory>   
			<construct class="org.astrogrid.desktop.modules.ui.TaskRunnerFactory">
						<service>UiBuilder</service>
			</construct>
		</invoke-factory>	
	</service-point>
	
	<contribution configuration-id="system.windowFactories">
		<window name="Task Runner">service:applicationLauncher</window>
	</contribution>
	
		<contribution configuration-id="UiBuilderObjects">
		<object name="taskrunner" class="org.astrogrid.desktop.modules.ui.taskrunner.TaskRunnerImpl" >
		  Describes how to build a new task runner window.
			<inject object="service:system.ui"/>		
			<inject object="service:astrogrid.applications"/>	
            <inject object="service:astrogrid.processManager" />	
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:dialogs.registryGoogle" />	
            <inject object="service:system.uiBuilder" />
            <inject object="service:ui.UiBuilder" />   
            <inject object="service:system.vfs" />         	
            <inject object="service:votech.vomon" />
		</object>
        
		<object name="executionTracker" class="org.astrogrid.desktop.modules.ui.execution.ExecutionTracker">
            <inject-arg />
			<inject object="service:astrogrid.processManager" />
            <inject object="service:ui.UiBuilder" />
            <inject object="service:actionsBuilder" />
		</object>
        
        <object name="fileNavigator" class="org.astrogrid.desktop.modules.ui.fileexplorer.FileNavigator">
            <inject-arg />
            <inject object="service:system.vfs" />
            <inject-arg />
            <inject-arg />
            <inject object="service:ui.iconFinder" />
        </object>
        
        
        <object name="taskParametersForm" class="org.astrogrid.desktop.modules.ui.taskrunner.TaskParametersForm">
            <inject-arg />
            <inject object="service:astrogrid.applications" />
            <inject object="service:ui.UiBuilder" />
            <inject object="service:system.vfs" />
        </object>
        
        <object name="parametersInfoPane" class="org.astrogrid.desktop.modules.ui.taskrunner.ParametersInfoPane">
            <inject-arg />
            <inject-arg />
            <inject object="service:system.browser" />
            <inject object="service:ui.registryBrowser" />
        </object>
        
        <!--  full adql editor panel -->
        <object name="adqlPanel" class="org.astrogrid.desktop.modules.adqlEditor.ADQLEditorPanel">
            <inject-arg />
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.registryGoogle" />
            <inject object="service:ivoa.registry" />
            <inject object="preference:acr.debug" />
        </object>
        
        
        <!--  task parameter editors -->
        <object name="textFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.TextFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="looseFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.LooselyFormattedFormElement">
            <inject-arg />
            <inject-arg />
            <inject-arg />            
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="largeFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.LargeTextFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="binaryFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.BinaryFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="enumerationFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.EnumerationFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="booleanFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.BooleanFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="outputFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.OutputFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="positionFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.PositionFormElement">
            <inject-arg />
            <inject-arg />
            <inject-arg />
            <inject-arg />                        
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
            <inject object="service:cds.sesame" />
        </object>
        <object name="radiusFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.RadiusFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
        </object>
        <object name="radiusFormElementExternal" class="org.astrogrid.desktop.modules.ui.taskrunner.RadiusFormElement">
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
            <inject-arg />
        </object>
        <object name="adqlFormElement" class="org.astrogrid.desktop.modules.ui.taskrunner.AdqlTextFormElement">
            <inject-arg />
            <inject-arg />
            <inject-arg />
            <inject-arg />
            <inject object="service:dialogs.resourceChooser" />
            <inject object="service:ui.UiBuilder" />
        </object>                                                                
	</contribution>


<!--  
===========================================
Query Builder
 -->
 	<service-point id="queryBuilder" 
	interface="org.astrogrid.desktop.modules.ui.QueryBuilderInternal">
        <interceptor service-id="system.snitchInterceptor" />
            <interceptor service-id="system.edtInvoke" />        
        <invoke-factory>   
            <construct class="org.astrogrid.desktop.modules.ui.QueryBuilderFactory">
                        <service>UiBuilder</service>
            </construct>
        </invoke-factory>   
    </service-point>


        <contribution configuration-id="UiBuilderObjects">
        <object name="querybuilder" class="org.astrogrid.desktop.modules.ui.QueryBuilderImpl" >
          Describes how to builld a new queryrunner window.
            <inject object="service:system.ui"/>        
            <inject object="service:astrogrid.applications"/>   
            <inject object="service:astrogrid.processManager" />    
            <inject object="service:dialogs.resourceChooser" />
            <inject object="service:dialogs.registryGoogle" />  
            <inject object="service:system.uiBuilder" />
            <inject object="service:ui.UiBuilder" />   
            <inject object="service:system.vfs" />  
             <inject object="service:votech.vomon" />                                  
            <inject object="service:ivoa.registry" />                
        </object>
       </contribution>
	
    <!--  doesn't do anything at the moment
	<contribution configuration-id="system.windowFactories">
		<window name="Query Builder">service:queryBuilder</window>
	</contribution>
		-->
		<contribution configuration-id="system.helpmap">
		<!-- TODO: fix these urls. -->
		<item id="userInterface.queryBuilder" url="http://www2.astrogrid.org/science/documentation/workbench-system-services/resources/resources/" />
		<item id="queryBuilder.menu.science" url="http://www2.astrogrid.org/science/documentation/workbench-system-services/resources/resources/" />
	</contribution>	
	
	<!-- 
	==================================
	VOEXPLORER
	 -->
	<service-point id="registryBrowser" interface="org.astrogrid.desktop.modules.ui.VOExplorerFactoryInternal">
			<interceptor service-id="system.snitchInterceptor" >
                <!--  including things seems to mean we get 'all'. excluding what we dont' want seems to work. -->
                <exclude method="appendHandler" />
                <exclude method="getHandledMessages" />
                <exclude method="perform" />
                <exclude method="setNextHandler" />
            </interceptor>
            <interceptor service-id="system.edtInvoke"> 
                 <exclude method="appendHandler" />
                <exclude method="getHandledMessages" />
                <exclude method="perform" />
                <exclude method="setNextHandler" />
             </interceptor>        
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.ui.VOExplorerFactoryImpl" >
                <service>system.plasticList</service>
				<service>UiBuilder</service>
			</construct>
		</invoke-factory>	
	</service-point>
	
	<contribution configuration-id="system.windowFactories">
		<window name="VO Explorer">service:registryBrowser</window>
	</contribution>
	
	<contribution configuration-id="system.plasticMessageHandlers">
		<object>service:registryBrowser</object>
	</contribution>
	
	<contribution configuration-id="UiBuilderObjects">
		Describes how to build a new voexplorer window.
		<object name="voexplorer" class="org.astrogrid.desktop.modules.ui.voexplorer.VOExplorerImpl">
			<inject object="service:system.ui"/>
			<inject object="service:actionsBuilder" />
			<inject object="service:system.uiBuilder" />
			<inject object="service-property:resourceFolders:list" />
			<inject object="ui:registryGooglePanel" />
			<inject object="service:querySize" /> 
		</object>
	</contribution>

	<service-point id="resourceFolders" visibility="private" interface="org.astrogrid.desktop.modules.ui.folders.ListProvider">
		Loads / saves the list of resource folders. shared between multiple instances of voexplorer.
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.ui.folders.ResourceListsProvider">
				<service>system.ui</service>
				<object>preference:astrogrid.workdir</object>
                <service>system.xmlPersist</service>
			</construct>
		</invoke-factory>
	</service-point>
	
	<!--  makes the registryBrowser dsplay on startup if we've not got a system tray -->
    <!-- 
	<contribution configuration-id="hivemind.Startup" if="not (class java.awt.SystemTray)">
		<startup object="service:registryBrowser" />
	</contribution>
    -->

<!-- 
=====================================
FILE EXPLORER
 -->
 	<service-point id="fileManager" interface="org.astrogrid.desktop.modules.ui.FileManagerFactory">
 		<interceptor service-id="system.snitchInterceptor" >
                <!--  including things seems to mean we get 'all'. excluding what we dont' want seems to work. -->
                <exclude method="appendHandler" />
                <exclude method="getHandledMessages" />
                <exclude method="perform" />
                <exclude method="setNextHandler" />
        </interceptor>
            <interceptor service-id="system.edtInvoke" >
                <exclude method="appendHandler" />
                <exclude method="getHandledMessages" />
                <exclude method="perform" />
                <exclude method="setNextHandler" />
            </interceptor>                    
 		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.ui.FileExplorerFactoryImpl" >
				<service>UiBuilder</service>
			</construct>
		</invoke-factory>	
 	</service-point>
 	
	<contribution configuration-id="system.windowFactories">
		<window name="File Explorer">service:fileManager</window>
	</contribution>
	
	<contribution configuration-id="system.plasticMessageHandlers">
		<object>service:fileManager</object>
	</contribution>	
	
	<contribution configuration-id="UiBuilderObjects">
		Describes how to build a new fileexplorer window.
		<object name="fileExplorer" class="org.astrogrid.desktop.modules.ui.fileexplorer.FileExplorerImpl">
			<inject object="service:system.ui"/>
			<inject object="service:actionsBuilder" />
			<inject object="service:system.uiBuilder" />
            <inject object="service:ui.UiBuilder" />
		</object>
        </contribution>
    <contribution configuration-id="UiBuilderObjects">
        describes how to build just a storage view.
        <object name="storageView" class="org.astrogrid.desktop.modules.ui.fileexplorer.StorageView">
            <inject-arg />
            <inject-arg />
            <inject object="service-property:storageFolders:list"/>
            <inject object="service:system.vfs" />
            <inject object="service:iconFinder" />
            <inject object="service:astrogrid.community" />            
        </object>
	</contribution>
    
   

	<service-point id="storageFolders" visibility="private" interface="org.astrogrid.desktop.modules.ui.folders.ListProvider">
		Loads / saves the list of resource folders.
		<invoke-factory><!-- to think about - does this need to be sessioned too? -->
			<construct class="org.astrogrid.desktop.modules.ui.folders.StorageFoldersProvider">
				<service>system.ui</service>
				<object>preference:astrogrid.workdir</object>
                <service>system.xmlPersist</service>
                <event-listener service-id="astrogrid.community" />                
			</construct>
		</invoke-factory>
	</service-point>
    
    <service-point id="iconFinder" visibility="private" interface="org.astrogrid.desktop.modules.ui.fileexplorer.IconFinder">
    Helper service that finds icons for file objects. later will use hivemind contribtion
    to add icon rules / locations.
        <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.ui.fileexplorer.IconFinderImpl" />
        </invoke-factory>
    </service-point>


<!--  
********************************************
ACTIONS
-->
	
	<service-point id="actionsBuilder" interface="org.astrogrid.desktop.modules.system.ui.ActivityFactory">
		Assembles actions menus from the contributed actions.
		<invoke-factory model="singleton">
			<construct class="org.astrogrid.desktop.modules.system.ui.ActivityFactoryImpl">
				<service>actionsFactory</service>
                <object>preference:acr.advanced</object>
			</construct>
		</invoke-factory>
	</service-point>
	
	<service-point id="actionsFactory" interface="org.astrogrid.desktop.hivemind.IterableObjectBuilder"
		visibility="private">
		Object builder for actions
		<invoke-factory model="singleton">
			<construct class="org.astrogrid.desktop.hivemind.IterableObjectBuilderImpl">
				<log />
				<configuration>actions</configuration>
				<service>hiveutils.ObjectTranslator</service>
				<service>hiveutils.EventLinker</service>
			</construct>
		</invoke-factory>
	</service-point>	
		
	<configuration-point id="actions" schema-id="hiveutils.ObjectBuilderSchema">
		Configuration point for the list of 'invoke' tasks.
	</configuration-point>
		
	<!--  lists of Actions  -->
	<contribution configuration-id="actions">
		<object name="0queryscope" class="org.astrogrid.desktop.modules.ui.actions.QueryScopeActivity">
			<inject object="service:astroscope" />
			<inject name="section" object="literal:string:use" />
		</object>		
		<object name="0query" class="org.astrogrid.desktop.modules.ui.actions.BuildQueryActivity">
			<inject object="service:queryBuilder"/>
			<inject name="section" object="literal:string:use" />			
		</object>		
		<object name="0cea" class="org.astrogrid.desktop.modules.ui.actions.TaskRunnerActivity">
			<inject object="service:applicationLauncher"/>
			<inject name="section" object="literal:string:use" />			
		</object>
		<object name="1viewBrowser" class="org.astrogrid.desktop.modules.ui.actions.ViewInBrowserActivity">
			<inject object="service:system.browser"/>
            <inject object="service:system.vfs" />
			<inject name="section" object="literal:string:use" />
		</object>
        <object name="2reveal" class="org.astrogrid.desktop.modules.ui.actions.RevealFileActivity">
            <inject object="service:system.vfs" />
            <inject object="service:ui.fileManager" />
            <inject name="section" object="literal:string:use" />
        </object>
        <!--  not implemented	
		<object name="1saveFile" class="org.astrogrid.desktop.modules.ui.actions.SaveActivity">
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:system.vfs" />
			<inject name="section" object="literal:string:use" />
		</object>
        		-->
                
        <object name="1download" class="org.astrogrid.desktop.modules.ui.actions.SimpleDownloadActivity">
            <inject object="service:system.vfs" />
            <inject object="service:dialogs.resourceChooser" />
            <inject name="section" object="literal:string:use" />
        </object>

        <object name="2rename" class="org.astrogrid.desktop.modules.ui.actions.RenameActivity">
            <inject object="service:system.vfs" />
            <inject name="section" object="literal:string:use" />
        </object>      
        <object name="2delete" class="org.astrogrid.desktop.modules.ui.actions.DeleteFilesActivity">
            <inject object="service:system.vfs" />
            <inject name="section" object="literal:string:use" />
        </object> 
		<object name="1web" class="org.astrogrid.desktop.modules.ui.actions.WebInterfaceActivity">
			<inject object="service:system.browser" />
			<inject name="section" object="literal:string:use" />			
		</object>	
		<object name="2plastic" class="org.astrogrid.desktop.modules.ui.actions.PlasticScavenger">
			<inject object="service:system.plasticList" />
			<inject object="service:system.tupperware" />
            <inject object="service:system.systray" />
			<inject name="section" object="literal:string:plastic" />
		</object>
		<!--  removed - too inefficient at the moment - causes oout of memory exceptions
		re-enable when I've got time to look at optimizing the GenerateScriptActivity.invokable()
        possibly replace groovy with a less ambitious scripting language. 
		<object name="3script" class="org.astrogrid.desktop.modules.ui.actions.GenerateScriptScavenger">
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:system.vfs" />
			<inject name="section" object="literal:string:script" />		
		</object>
		-->
		<object name="0selection" class="org.astrogrid.desktop.modules.ui.actions.InfoActivity">
			<inject name="section" object="literal:string:info" />	
		</object>
		<object name="1further" class="org.astrogrid.desktop.modules.ui.actions.FurtherInfoActivity">
			<inject object="service:system.browser"/>
			<inject name="section" object="literal:string:info" />			
		</object>
		<object name="2contact" class="org.astrogrid.desktop.modules.ui.actions.ContactActivity">
			<inject object="service:system.browser"/>
			<inject name="section" object="literal:string:info" />			
		</object>	
		
		<object name="saveResource" class="org.astrogrid.desktop.modules.ui.actions.SaveResourceActivity" >
			<inject object="service:system.ui" />
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:ivoa.registry" />
			<inject object="service:system.vfs" />
			<inject name="section" object="literal:string:export" />			
		</object>
		<object name="saveIds" class="org.astrogrid.desktop.modules.ui.actions.SaveIdListActivity" >
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:system.vfs" />
			<inject name="section" object="literal:string:export" />			
		</object>
		<object name="saveXoXo" class="org.astrogrid.desktop.modules.ui.actions.SaveXoXoListActivity" >
			<inject object="service:dialogs.resourceChooser" />
			<inject object="service:system.vfs" />
			<inject name="section" object="literal:string:export" />			
		</object>	
		<!--  possibly - add 'broadcast' operations - see code in PlasticVotableActivity -->
	</contribution>
		
	<!--  help links -->
		<contribution configuration-id="system.helpmap">
		<item id="voexplorer.intro" url="http://wiki.astrogrid.org/pub/Astrogrid/VOExpDesignMeeting/registry-intro.pdf" />
		<item id="userInterface.voexplorer" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Overview" />
		<item id="voexplorer.hierarchies" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Folders"/>

		<item id="voexplorer.actions" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Actions"/>
		<item id="resourceActions.invoke" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Invoke_Actions" />
		<item id="resourceActions.info" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Info_Actions" />
		<item id="resourceActions.seeAlso" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#See_Also_Actions" />
		<item id="resourceActions.metadata" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Metadata_Actions" />
		
		<item id="resourceTask.astroscope" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Astroscope" />
		<item id="resourceTask.buildQuery" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#BuildQuery" />
		<item id="resourceTask.cea" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Invoke_Task"/>
		<item id="resourceTask.cone" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Catalogue_Search"/>
		<item id="resourceTask.script" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Generate_Script" />
		<item id="resourceTask.siap" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Image_Search" />		
		<item id="resourceTask.ssap" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Spectrum_Search"/>		
		<item id="resourceTask.web" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Open_Web_Interface"/>		
		
		<item id="resouceFolders" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Registry_View"/>
		<item id="resouceFolders.buttons" url="http://wiki.astrogrid.org/bin/view/Astrogrid/VoExplorer#Buttons" />
	</contribution>	


	
	<!--  =====================================
	Query size estimation
	 -->
	 <service-point id="querySize" visibility="private" interface="org.astrogrid.desktop.modules.ui.voexplorer.QuerySizer">
	 	Computes sizes of queries.
	 	<interceptor service-id="system.throbber" />
	 	<invoke-factory>
	 		<construct class="org.astrogrid.desktop.modules.ui.voexplorer.QuerySizerImpl">
	 			<service>ivoa.registry</service>
	 			<object>cache:querySizes</object>
	 		</construct>
	 	</invoke-factory>
	 </service-point>
	 
	 <contribution configuration-id="ivoa.caches">
	 	Cache for query sizes
	 	<cache name="querySizes"
	 		maxElementsInMemory="3"
	 		maxElementsOnDisk="300"
	 		overflowToDisk="true"
	 		diskPersistent="true"
	 		timeToLiveSeconds="${ivo.registry.cacheLife}"
	 		timeToIdleSeconds="${ivo.registry.cacheLife}"
	 		/>
	 	</contribution>


<!-- ============================
Building components on the EDT
 based on hiveutils.ObjectBuilder
 -->
 	<service-point	id="UiBuilder"
					interface="org.astrogrid.desktop.modules.ui.TypesafeObjectBuilder">
	Based on hiveUtils.ObjectBuilder, but guarantees object construction 
	will always occur on the EDT - no matter what the calling thread.
		<invoke-factory model="singleton">
			<construct class="org.astrogrid.desktop.modules.ui.TypesafeObjectBuilderImpl">
				<log/>
				<configuration>UiBuilderObjects</configuration>
				<service>hiveutils.ObjectTranslator</service>
				<service>hiveutils.EventLinker</service>
			</construct>
		</invoke-factory>
	</service-point>
	
		<configuration-point id="UiBuilderObjects"  schema-id="hiveutils.ObjectBuilderSchema">
		Extension point that defines "objects" to be created by the UiBuilder
		service. Each object can be injected with various dependencies (almost
		the same as for a HiveMind service).
		Each contribution defines exactly one such kind of object.
	
	</configuration-point>

	<service-point	id="UiBuilderObjectProvider"
					interface="org.apache.hivemind.service.ObjectProvider"
					visibility="private">
		ObjectProvider that can find (or create) POJOs instances (built by the ObjectBuilder service).
		Mapped to the object: prefix ("ui:&lt;name&gt;").
		<invoke-factory model="singleton">
			<construct class="net.sourceforge.hiveutils.service.impl.ObjectBuilderObjectProvider">
				<object>service-property:UiBuilder:objectBuilder</object>
			</construct>
		</invoke-factory>
	</service-point>
	
	<contribution configuration-id="hivemind.ObjectProviders">
		<provider prefix="ui" service-id="UiBuilderObjectProvider"/>
	</contribution>
 </module>
 