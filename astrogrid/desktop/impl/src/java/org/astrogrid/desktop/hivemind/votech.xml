<?xml version="1.0"?>
<!DOCTYPE module  [
	<!ENTITY descriptors SYSTEM "classpath:/org/astrogrid/desktop/hivemind/votech-descriptors.xml">
	]>
<module id="votech" version="1.0.0" package="org.votech">
<!--  PREAMBLE -->
	<contribution configuration-id="framework.descriptors">
		<acr-module name="votech" description="Services and infrastructure developed as part of the VOTech project">
		&descriptors;
		</acr-module>
	</contribution>	
		
	<contribution configuration-id="framework.acrServices">
			<acrService id="vomon" interface="VoMon" />
	</contribution>
	
	
	<!-- services and implementations -->
	
<!-- 
=============================================
ANNOTATION SERVICE
 -->	
	<service-point id="annotate" interface="org.astrogrid.desktop.modules.votech.AnnotationService">
	Annotation Service  
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.votech.AnnotationServiceImpl">
				<object>cache:annotate</object>
                <service>system.ui</service>                   
                <service>annotateIO</service>                    
			</construct>
		</invoke-factory>
	</service-point>	
    
    <service-point id="annotateIO" visibility="private" 
        interface="org.astrogrid.desktop.modules.votech.AnnotationIO">
        Supporting component that takes care of persisting and reading anotations.
        <invoke-factory>
            <construct class="org.astrogrid.desktop.modules.votech.AnnotationIOImpl">
                <object>preference:astrogrid.workdir</object>
                <service>annotationSourcesFactory</service>                
                <service>system.xmlPersist</service>  
                <service>annotate</service>  
                <service>system.ui</service>                              
            </construct>
        </invoke-factory>
    </service-point>
	
	<contribution configuration-id="ivoa.caches">
		cache of annotations
		'unlimited' disk storage, lasts whole session, but is discarded at end of session.
		practically infinite storage - necessary because we're using this for real data.
        NB: shoudl diskPersistent be 'false' here - if discarded at end of session?
		<cache name="annotate"
			maxElementsInMemory="1000"
			maxElementsOnDisk="10000000"
			overflowToDisk="true"
            diskPersistent="true"
            timeToLiveSeconds="${ivo.registry.cacheLife}"
            timeToIdleSeconds="${ivo.registry.cacheLife}"
		/>
	</contribution>

	<implementation service-id="annotate" if="property votech.annotate.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>	
	
		<!--  load on startup -->
	<contribution configuration-id="hivemind.EagerLoad">
		<load service-id="annotate"/><!--  loads and processes the annotation files -->
	</contribution>

     <contribution configuration-id="util.selftest" >
        <object>service-property:annotate:selftest</object>
    </contribution>	
	
	<service-point id="annotationSourcesFactory" interface="org.astrogrid.desktop.hivemind.IterableObjectBuilder">
		Object builder for annotationSources - each should be an instance of AnnotationSource
		<invoke-factory model="singleton">
			<construct class="org.astrogrid.desktop.hivemind.IterableObjectBuilderImpl">
				<log />
				<configuration>annotationSources</configuration>
				<service>hiveutils.ObjectTranslator</service>
				<service>hiveutils.EventLinker</service>
			</construct>
		</invoke-factory>
	</service-point>	

<configuration-point id="annotationSources" schema-id="hiveutils.ObjectBuilderSchema">
	Configuration point for the list of annotation sources
</configuration-point>


<contribution configuration-id="annotationSources">
	<object name="ag" class="org.astrogrid.desktop.modules.votech.AnnotationSource">
		<inject object="literal:string:http://technology.astrogrid.org/raw-attachment/wiki/vodesktopResources/ag-annotations.xml" />
		<inject object="literal:string:AG Science Team" />
	</object>
	
	<object name="vomon" class="org.astrogrid.desktop.modules.votech.VomonAnnotationSource">
		<inject object="service:vomon" />
	</object>
	<object name="jackdaw" class="org.astrogrid.desktop.modules.votech.JackdawAnnotationSource">
        <inject object="preference:experimental.suggestions.services" />
		<inject object="preference:votech.jackdaw.endpoint" />
	</object>
</contribution>

    <contribution configuration-id="framework.preferences">
        <preference name="experimental.suggestions.services" 
            advanced="true"
            default-value="false" >
            <ui-name>Enable experimental suggestion service</ui-name>
            <description>Enable experimental features</description>
            <units>boolean</units>
        </preference>
    </contribution> 
	
	<contribution configuration-id="framework.preferences">
		<preference name="votech.jackdaw.endpoint" 
			requires-restart="true" advanced="true"
			default-value="http://thor.roe.ac.uk/jackdaw/like" >
			<ui-name>Experimental suggestion service endpoint</ui-name>
			<description>The http endpoint of a suggestions service</description>
			<units>url</units>
		</preference>
	</contribution>	


	
<!-- 
=============================================
VOMON
 -->	
	<service-point id="vomon" interface="org.astrogrid.desktop.modules.votech.VoMonInternal">
		Service Monitor		
		<invoke-factory>
			<construct class="org.astrogrid.desktop.modules.votech.VoMonImpl" >
			<string>${votech.vomon.endpoint}</string><!--  endpoint to fetch vomon status.xml from -->
			<int>${votech.vomon.reload}</int><!--  period between refreshes of the status.xml (seconds) -->
			<object>cache:vomon</object>
			</construct>
		</invoke-factory>	
	</service-point>

	<contribution configuration-id="ivoa.caches">
		cache of service status.
		'unlimited' disk storage for entire document
		<cache name="vomon"
			maxElementsInMemory="100"
			maxElementsOnDisk="10000000"
			overflowToDisk="true"
			diskPersistent="true"
            timeToLiveSeconds="${ivo.registry.cacheLife}"
            timeToIdleSeconds="${ivo.registry.cacheLife}"           
		/>
        <!-- 
			timeToLiveSeconds="7200"
			timeToIdleSeconds="7200"
         -->
	</contribution>

	<implementation service-id="vomon" if="property votech.vomon.disabled">
		<invoke-factory service-id="hivemind.lib.PlaceholderFactory" />	
	</implementation>	
	
	<contribution configuration-id="framework.preferences">
		<preference name="votech.vomon.endpoint" 
			requires-restart="true" advanced="true"
			default-value="http://vomon.roe.ac.uk/status.xml" >
			<ui-name>Services monitor endpoint</ui-name>
			<description>A http url that returns a vomon xml document</description>
			<alternative>http://vomon.astrogrid.org/status.xml</alternative>			
			<units>url</units>
		</preference>
		<preference name="votech.vomon.reload" 
			requires-restart="true"
			default-value="3600" > <!--  hourly -->
				<ui-name>Refresh services monitor every</ui-name>
				<units>seconds</units>
				<description>Period between reloading the monitoring information</description>
			</preference>
	</contribution>
    
     <contribution configuration-id="util.selftest" >
        <object>service-property:vomon:selftest</object>
    </contribution>

	<!--  run periodically -->	
	<contribution configuration-id="system.scheduledTasks">
		<object>service:vomon</object><!--  reloads the data periodically - runs first time immediately, so data is fetched at startup -->
	</contribution>

 </module>
 