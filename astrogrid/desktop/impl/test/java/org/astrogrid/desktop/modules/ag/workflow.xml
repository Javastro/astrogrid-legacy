<?xml version="1.0" encoding="UTF-8"?>
<workflow name="TimeMovieMaker" xmlns="http://www.astrogrid.org/schema/AGWorkflow/v1"><sequence><Activity var="instrname" value="eit" xsi:type="set" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><Activity var="tstartmovie" value="2002-07-28T01:00:00.000" xsi:type="set" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><Activity var="tendmovie" value="2002-07-28T06:00:00.000" xsi:type="set" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><Activity var="adqlquery" value="" xsi:type="set" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><Activity xsi:type="script" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><description>Display user-set parameters</description><body>
            jes.info(&quot;Parameter: instrname := '&quot; + instrname +&quot;'&quot;)
            jes.info(&quot;Parameter: tstartmove := '&quot; + tstartmovie + &quot;'&quot;)
            jes.info(&quot;Parameter: tendmovie := '&quot; + tendmovie + &quot;'&quot;)
            jes.info(&quot;Will save results to ${userIvorn}#votable/${instrname}${tstartmovie}.mpg&quot;);
    </body></Activity><Activity test="${instrname == 'eit'}" xsi:type="if" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><then><Activity xsi:type="sequence"><Activity xsi:type="script"><description>puts template EIT query into ${adqlquery}</description><body>
 ev = astrogrid.ioHelper.getExternalValue(&quot;http://wiki.astrogrid.org/pub/Astrogrid/ParameterizedWorkflows/eitquerytmovie.xml&quot;)
 adqlquery = astrogrid.ioHelper.getContents(ev)
</body></Activity><Activity xsi:type="script"><description>write movie start and end time into query</description><body>import groovy.text.Template
 import groovy.text.SimpleTemplateEngine

 binding = [&quot;tstartmovie&quot;:tstartmovie, &quot;tendmovie&quot;:tendmovie]

 engine = new SimpleTemplateEngine()
 template = engine.createTemplate(adqlquery).make(binding)

 adqlquery = template.toString()

 jes.info(adqlquery)

</body></Activity></Activity></then><else><Activity xsi:type="sequence"><Activity test="${instrname == 'trace'}" xsi:type="if"><then><Activity xsi:type="sequence"><Activity var="refstarttime" value="" xsi:type="set"/><Activity var="refendtime" value="" xsi:type="set"/><Activity xsi:type="script"><description>set start and end time for movie to nearest hour</description><body>import java.util.Calendar
 import java.text.SimpleDateFormat
 cal = Calendar.getInstance()
 traceDateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm:ss&quot;)

 cal.setTime(traceDateFormat.parse(tstartmovie))
 cal.set(Calendar.MINUTE,0)
 refstarttime = traceDateFormat.format(cal.time)

 cal.setTime(traceDateFormat.parse(tendmovie))
 cal.set(Calendar.MINUTE,0)
 cal.add(Calendar.HOUR,1)
 refendtime = traceDateFormat.format(cal.time)

 jes.info(refstarttime)
 jes.info(refendtime)
</body></Activity><Activity xsi:type="script"><description>read template query file into ${adqlquery}</description><body>
 ev = astrogrid.ioHelper.getExternalValue(&quot;http://wiki.astrogrid.org/pub/Astrogrid/ParameterizedWorkflows/tracequerytmovie.xml&quot;)
 adqlquery = astrogrid.ioHelper.getContents(ev)

</body></Activity><Activity xsi:type="script"><description>write refstarttime and refendtime into query</description><body>import groovy.text.Template
 import groovy.text.SimpleTemplateEngine

 binding = [&quot;refstarttime&quot;:refstarttime, &quot;refendtime&quot;:refendtime]

 engine = new SimpleTemplateEngine()
 template = engine.createTemplate(adqlquery).make(binding)

 adqlquery = template.toString()

 jes.info(adqlquery)
</body></Activity></Activity></then><else><Activity xsi:type="sequence"><Activity test="${instrname == 'cds'}" xsi:type="if"><then><Activity xsi:type="sequence"><Activity xsi:type="script"><description>error message</description><body>jes.info('CDS movie not available yet')</body></Activity></Activity></then></Activity></Activity></else></Activity></Activity></else></Activity><Activity name="queryfiles" result-var="source" joinCondition="any" xsi:type="step" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><description>...</description><tool name="mssl.ucl.ac.uk/solarimg_dsa/ceaApplication" interface="adql"><input><parameter name="Query" indirect="false"><ns1:value xmlns:ns1="http://www.astrogrid.org/schema/AGParameterDefinition/v1">${adqlquery}</ns1:value></parameter><parameter name="Format" indirect="false"><ns2:value xmlns:ns2="http://www.astrogrid.org/schema/AGParameterDefinition/v1">VOTABLE</ns2:value></parameter></input><output><parameter name="Result" indirect="false"><ns3:value xmlns:ns3="http://www.astrogrid.org/schema/AGParameterDefinition/v1"></ns3:value></parameter></output></tool></Activity><Activity xsi:type="script" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><description>extracts urls from votable</description><body>
 votable = source.Result;
 parser = new XmlParser(false,false);
 nodes = parser.parseText(votable);
 urls = nodes.depthFirst().findAll{it.name() == 'TD'}.collect{it.value()}.flatten();
 jes.info(urls);
 concatStep = jes.getSteps().find {it.getName() == 'CallMakeMPEGFitsImages'};
 inputs = concatStep.getTool().getInput();inputs.clearParameter();
 urls.each { p = jes.newParameter(); p.setName('InputFiles');
 p.setIndirect(true); p.setValue(it); inputs.addParameter(p);
 }
</body></Activity><Activity name="CallMakeMPEGFitsImages" joinCondition="any" xsi:type="step" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><description>...</description><tool name="mssl.ucl.ac.uk/SolarMovieMaker" interface="Simple"><input><parameter name="InputFiles" indirect="false"><ns4:value xmlns:ns4="http://www.astrogrid.org/schema/AGParameterDefinition/v1">InputFiles</ns4:value></parameter></input><output><parameter name="OutputFile" indirect="true"><ns5:value xmlns:ns5="http://www.astrogrid.org/schema/AGParameterDefinition/v1">${userIvorn}#votable/${instrname}${tstartmovie}.mpg</ns5:value></parameter></output></tool></Activity></sequence><description>Time based movie maker</description><Credentials><ns6:Account xmlns:ns6="http://www.astrogrid.org/schema/Credentials/v1"><ns6:Name>noelwinstanley</ns6:Name><ns6:Community>uk.ac.le.star</ns6:Community></ns6:Account><ns7:Group xmlns:ns7="http://www.astrogrid.org/schema/Credentials/v1"><ns7:Name>guest04</ns7:Name><ns7:Community>uk.ac.le.star</ns7:Community></ns7:Group><ns8:SecurityToken xmlns:ns8="http://www.astrogrid.org/schema/Credentials/v1">dummy</ns8:SecurityToken></Credentials></workflow>