<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

    <extend>${basedir}/../maven-base/project.xml</extend>
        <artifactId>astrogrid-desktop-root</artifactId>
        <currentVersion>${astrogrid.desktop.version}</currentVersion>
        <name>Top Level Project for AR / Workbenchs</name>
        <description>
        Workbench and AR requires the astrogrid/maven-base projects to be checked out adjacent to this folder.
        (NB: previous versions also required the aggregate project - this is no longer necessary)
      	---
        You may wish to increase the memory maven runs with. create a '~/.mavenrc' which contains the line 
        	MAVEN_OPTS="-Xmx1024m"
        ---
		Publisher should just run the goals listed in this project - no need to run goals in individual sub-projects.
		E.g. to build and publish new suite of AR:
		1. % maven astrogrid-clean
		2. Edit astrogrid.destop.version in impl/build/project.properties
		3. % maven astrogrid-build-artifact
		---
		Build products are then left in ${basedir}/target/artifacts directory, from where they 
		(for now) have to be uploaded to the plone site by hand.
		---
		To setup workbench for development in eclipse:
		run steps 1-2 above.
		3. % maven install-materials
		4. % cd impl; maven eclipse
		5. In Eclipse select 'File > Import > Existing Projects into Workspace', and navigate to the impl directory.
		This works best in Eclipse >= 3.2 and above.
		---
		If you need to edit the public api, repeast steps 5,6 for the 'api' directory
		---
		For instructions on testing and building project documentation, run 
		% cd impl; maven -u
		---
        (see also http://www.astrogrid.org/desktop/contributing/using-eclipe )		
		 </description>
        <shortDescription>Astro Runtimes</shortDescription>

   
        <build>
                <sourceDirectory/>
                <unitTestSourceDirectory/>        
        </build>

</project>
