<?xml version="1.0" encoding="UTF-8"?>
<!--+
    |
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/filestore/common/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: jdt $</cvs:author>
    | <cvs:date>$Date: 2004/11/25 00:19:27 $</cvs:date>
    | <cvs:version>$Revision: 1.5 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.5  2004/11/25 00:19:27  jdt
    |   Merge from dave-dev-200410061224-200411221626
    |
    |   Revision 1.4.46.1  2004/10/21 21:00:13  dave
    |   Added mock://xyz URL handler to enable testing of transfer.
    |   Implemented importInit to the mock service and created transfer tests.
    |
    |   Revision 1.4  2004/08/18 19:00:01  dave
    |   Myspace manager modified to use remote filestore.
    |   Tested before checkin - integration tests at 91%.
    |
    |   Revision 1.3.20.1  2004/08/02 14:54:15  dave
    |   Trying to get integration tests to run
    |
    |   Revision 1.3  2004/07/15 13:24:28  dave
    |   Merged development branch, dave-dev-200407141515, into HEAD
    |
    |   Revision 1.2.2.1  2004/07/15 11:13:19  dave
    |   Refactored Filestore build scripts to use the artifact:deploy plugin
    |
    |   Revision 1.2  2004/07/14 13:50:29  dave
    |   Merged development branch, dave-dev-200406301228, into HEAD
    |
    |   Revision 1.1.2.2  2004/07/06 09:16:12  dave
    |   Added delegate interface and mock implementation
    |
    | </cvs:log>
    |
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:artifact="artifact"
    default="astrogrid-rebuild-snapshot"
    >

    <!--+
        | Import the goals from our parent project.
        | Looks like this gets included anyway, possibly because our project inherits from ../maven.project.xml ?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!-- ================ Reactor goals ================ -->

    <!--+
        | Clean, build and install our snapshot jar.
        +-->
    <goal name="astrogrid-rebuild-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <attainGoal name="clean"/>
        <attainGoal name="astrogrid-install-snapshot"/>
    </goal>

    <!--+
        | Clean our build target.
        +-->
    <goal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <attainGoal name="clean:clean"/>
    </goal>

    <!--+
        | Build and install our artifact jar.
        +-->
    <goal name="astrogrid-install-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Build our artifact jar.
            +-->
        <attainGoal name="jar:jar"/>
        <!--+
            | Install our artifact jar.
            +-->
		<artifact:install
			artifact="${maven.build.dir}/${maven.final.name}.jar"
			project="${pom}"
			type="jar"
			/>
    </goal>

    <!--+
        | Build and install our snapshot jar(s).
        +-->
    <goal name="astrogrid-install-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our snapshot name.
            +-->
        <maven:snapshot project="${pom}"/>
        <core:set var="maven.final.name" value="${snapshotSignature}"/>
        <!--+
            | Build our snapshot jar.
            +-->
        <attainGoal name="jar:jar"/>
        <!--+
            | Install our snapshot jar(s).
            +-->
		<artifact:install-snapshot
			artifact="${maven.build.dir}/${maven.final.name}.jar"
			project="${pom}"
			type="jar"
			/>
    </goal>

    <!--+
        | Build and deploy our artifact jar.
        +-->
    <goal name="astrogrid-deploy-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our artifact jar.
            +-->
        <attainGoal name="astrogrid-install-artifact"/>
        <!--+
            | Deploy our artifact jar.
            +-->
		<artifact:deploy
			artifact="${maven.build.dir}/${maven.final.name}.jar"
			project="${pom}"
			type="jar"
			/>
    </goal>

    <!--+
        | Build and deploy our snapshot jar(s).
        +-->
    <goal name="astrogrid-deploy-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our artifact jar.
            +-->
        <attainGoal name="astrogrid-install-snapshot"/>
        <!--+
            | Deploy our snapshot jar(s).
            +-->
		<artifact:deploy-snapshot
			artifact="${maven.build.dir}/${maven.final.name}.jar"
			project="${pom}"
			type="jar"
			/>
    </goal>

    <!-- ================ Component goals ================ -->

    <!--+
        | Prepare for the java:compile task.
        | Unpack the Axis webapp and add the classes to our path(s).
        +-->
    <preGoal name="java:compile">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing for java:compile ...."/>
        <!--+
            | Initialise our Axis tools
            +-->
        <attainGoal name="init.tools"/>
    </preGoal>

    <!--+
        | Setup our JUnit tests.
        +-->
    <preGoal name="test:test">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing services for tests"/>
        <!--+
            | Initialise our classpaths.
            +-->
        <attainGoal name="init.classpath"/>
        <!--+
            | Check the JUnit test settings.
            +-->
        <ant:echo message=""/>
        <ant:echo message="JUnit fork VM - ${maven.junit.fork}"/>
        <ant:echo message="JUnit test directory : ${maven.junit.dir}"/>
        <ant:echo message=""/>
    </preGoal>


    <goal name="frog">
        <core:set var="base" value="${basedir}"/>
        <core:set var="frog" value="${maven.junit.dir}"/>
        <core:set var="toad" value="${base.length()}"/>
        <core:set var="newt" value="example/${frog.substring(base.length())}"/>
        <ant:echo message="Frog : ${frog}"/>
        <ant:echo message="Toad : ${toad}"/>
        <ant:echo message="Newt : ${newt}"/>
        <ant:echo message="Conf : ${maven.conf.dir}"/>
    </goal>

</project>
