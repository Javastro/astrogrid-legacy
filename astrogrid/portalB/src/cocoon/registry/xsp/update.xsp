<?xml version="1.0"?>

<xsp:page language="java"
   xmlns:xsp="http://apache.org/xsp"
   xmlns:xsp-request="http://apache.org/xsp/request/2.0"
   xmlns:util="http://apache.org/xsp/util/2.0">
     
   <xsp:comment>

       Astrogrid Registry Update Portal using Cocoon.
       Author: Roy Platon, Astrogrid, RAL.
       Author: Elizabeth Auden, Astrogrid, MSSL

   </xsp:comment>

   <xsp:structure>

   <xsp:comment>Axis SOAP stuff</xsp:comment>
      <xsp:include>org.apache.axis.client.Call</xsp:include>
      <xsp:include>org.apache.axis.client.Service</xsp:include>
      <xsp:include>org.apache.axis.encoding.XMLType</xsp:include>
      <xsp:include>javax.xml.namespace.QName</xsp:include>
      <xsp:include>javax.xml.rpc.ParameterMode</xsp:include>
      <xsp:include>java.util.regex.Pattern</xsp:include>

   <xsp:comment>Cocoon stuff</xsp:comment>
      <xsp:include>org.apache.cocoon.components.url.URLFactory</xsp:include>      
      <xsp:include>org.apache.cocoon.components.language.markup.xsp.XSPUtil</xsp:include>

   <xsp:comment>Java IO stuff</xsp:comment>
      <xsp:include>java.net.URL</xsp:include>
      <xsp:include>java.net.URLConnection</xsp:include>
      <xsp:include>java.net.MalformedURLException</xsp:include>
      <xsp:include>java.io.IOException</xsp:include>
      <xsp:include>java.io.InputStream</xsp:include>

   </xsp:structure>

   <xsp:logic>

   // Web service stuff

   // Global variables
      String querytype = null;
      String webserver = null;
      String username = null;
      String certificate = null;

   // Query parameters
      String element1 = null;
      String op1 = null;
      String value1 = null;
      String seperator = null;
      String element2 = null;
      String op2 = null;
      String value2 = null;

      String site = null;
      String service = null;
      String webservice = "RegistryInterface3_0";
      String soapservice = null;
      String actiontype = null;
      final String METHOD = "fullNodeQuery";

      String query = null;   
      String adminQuery = null;   
      String results = null;

      String template = null;   

   </xsp:logic>

<agtemplate title="Registry Administration Service" help="agregistryhelp.html">

   <xsp:logic>
      webserver = <xsp-request:get-parameter name='WebServer' as='string'/>;
      username = <xsp-request:get-parameter name='User' as='string'/>;
      certificate = <xsp-request:get-parameter name='Certificate' as='string'/>;
      String add = <xsp-request:get-parameter name='Add' as='string'/>;
      if ( add != null ) actiontype = add;
      String edit = <xsp-request:get-parameter name='Edit' as='string'/>;
      if ( edit != null ) actiontype = edit;
      String delete = <xsp-request:get-parameter name='Delete' as='string'/>;
      if ( delete != null ) actiontype = delete;
      

   int approved = 0;
   if (username.equals("guest")) approved = approved + 1;
   if (certificate.equals("guest")) approved = approved + 1;

   if (approved == 2 ){

      site = webserver;
      soapservice = null;

      if ( site.substring(0,5).equals( "soap:" ) ) {
        service = "http:" + site.substring(5) + "/soap/servlet/rpcrouter";
        soapservice = "urn:org.astrogrid.registry." + webservice;
      } else {
        service = "http:" + site.substring(5) + "/axis/services/"+ webservice;
      }

      site = site.substring(7);

      <p>Web Server: <strong><xsp:expr>site</xsp:expr> </strong></p>

            XSPUtil util2 =  new XSPUtil();
 
            String address = "http://msslxy.mssl.ucl.ac.uk:8080/cocoon/astrogrid/registry/registry_template.xml";
            String contents = null;

            if ( actiontype.equals( "Add" ) ) {

            try {
                URL url = new URL(address);
                URLConnection connection = url.openConnection();
                connection.connect();
                InputStream in = connection.getInputStream();
                contents = XSPUtil.getContents(in);
                
                <![CDATA[
                String contents2 = contents.replaceAll("<service>", "<add><webserver>" + site + "</webserver><service>");
                String contents3 = contents2.replaceAll("</service>", "</service></add>");
                ]]>                

                util2.includeString( contents3, manager, contentHandler );
            }catch (MalformedURLException e){
                <p>ERROR: <xsp:expr>e</xsp:expr></p>
            }
            catch (IOException e){
                <p>ERROR: <xsp:expr>e</xsp:expr></p>
            }

      } else {
// Get parameters from form
         querytype = <xsp-request:get-parameter name="QueryType"/>;
         if ( querytype == null ) querytype = "identity";
         webserver = <xsp-request:get-parameter name="WebServer"/>;
//         webservice = <xsp-request:get-parameter name="Service"/>;
//         if ( webservice == null ) webservice = "RegistryInterface";
         element1 = <xsp-request:get-parameter name="Element1"/>;
         op1 = <xsp-request:get-parameter name="Operator1"/>;
         value1 = <xsp-request:get-parameter name="Value1"/>;
         seperator = <xsp-request:get-parameter name="Seperator1"/>;
         element2 = <xsp-request:get-parameter name="Element2"/>;
         op2 = <xsp-request:get-parameter name="Operator2"/>;
         value2 = <xsp-request:get-parameter name="Value2"/>;

// Construct the Query
         query = constructQuery( querytype, element1, op1, value1,
                                 seperator, element2, op2, value2 );   
         adminQuery = constructAdminQuery(certificate, actiontype, query);

// Call the Webserver

         try {
           Service axis = new Service();
           Call call = (Call) axis.createCall();
           call.setTargetEndpointAddress( new java.net.URL( service ) );
           if ( soapservice == null ) {
              call.setOperationName( METHOD );
           }
           else {
              call.setOperationName( new QName( soapservice, METHOD ) );
           }

           call.removeAllParameters( );
           call.addParameter( "usecase", XMLType.XSD_STRING, ParameterMode.IN );
           call.setReturnType( XMLType.XSD_STRING );
           results = (String) call.invoke( new Object [] { query } );
         }
         catch ( Exception e ) {
           <queryException>
           <xsp:expr> e </xsp:expr>
           </queryException>
         }
   
         if ( actiontype.equals( "Edit" ) ) {
            <![CDATA[
            String results2 = results.replaceAll("<service>", "<edit><webserver>" + site + "</webserver><service>");
            String results3 = results2.replaceAll("</service>", "</service></edit>");
            ]]>
// Now print thte results to the output
            XSPUtil util =  new XSPUtil();
            util.includeString( results3, manager, contentHandler );

         } else if ( actiontype.equals( "Delete" ) ) {
            <![CDATA[
            String results2 = results.replaceAll("<service>", "<delete><webserver>" + site + "</webserver><service>");
            String results3 = results2.replaceAll("</service>", "</service></delete>");
            ]]> 
// Now print the results to the output
            XSPUtil util =  new XSPUtil();
            util.includeString( results3, manager, contentHandler );
         } else {
            <p>Invalid Function</p>
         }
       }
    } else {
         <p><b>Warning: </b> You have not been authorized to update this registry.  Please
         return to the registry administration page and log in.</p>
    }


   </xsp:logic>

</agtemplate>

   <xsp:logic>
   private String constructQuery( String query,
                                  String e1, String op1, String v1,
                                  String sep,
                                  String e2, String op2, String v2) {

     <![CDATA[
     if ( query == null || query.equals( "" ) ) return null;
     String out = "<query> <selectionSequence>";
     out = out + "<selection item='searchElements'"
               + " itemOp='EQ' value='" + query + "'/>";
     if ( op1 != null && !op1.equals( "" ) ) {
       out = out + "<selectionOp op='$and$'/>"
                 + "<selection item='" + e1 + "'"
                 + " itemOp='" + op1 + "'"
                 + " value='" + v1 + "'/>";
       if ( sep != null && !sep.equals( "" ) ) {
         out = out + "<selectionOp op='"+ sep +"'/>"
                   + "<selection item='"+ e2 + "'"
                   + " itemOp='" + op2 + "'"
                   + " value='"+ v2 + "'/>";
       }
     }
     out = out + "</selectionSequence> </query>";
     ]]>
// Uncomment this to print the Query to the Screen
//     XSPUtil util =  new XSPUtil();
//     util.includeString( out, manager, contentHandler );
     return out;
   }

   private String constructAdminQuery( String certificate,
                 String actiontype, String query) {

     <![CDATA[
     if ( query == null || query.equals( "" ) ) return null;
     if ( certificate == null || certificate.equals( "" ) ) return null;
     if ( actiontype == null || actiontype.equals( "" ) ) return null;

     String out = "<registryAdminQuery><certificate>";
     out = out + certificate + "</certificate>";
     out = out + "<adminAction>" + actiontype + "</adminAction>";
     out = out + query + "</registryAdminQuery>";
     ]]>
// Uncomment this to print the Query to the Screen
//     XSPUtil util =  new XSPUtil();
//     util.includeString( out, manager, contentHandler );
     return out;
   }

   </xsp:logic>
</xsp:page>
