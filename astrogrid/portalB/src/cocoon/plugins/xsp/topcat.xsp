<?xml version="1.0" encoding="ISO-8859-1"?>

<xsp:page language="java"
		create-session="true"
		xmlns:xsp="http://apache.org/xsp"
		xmlns:xsp-session="http://apache.org/xsp/session/2.0"
		xmlns:xsp-request="http://apache.org/xsp/request/2.0"
		>
		
	<!--+
	    | Import any java classes here.
	    +-->
	<xsp:structure>
		<xsp:include>uk.ac.starlink.votable.VOTableBuilder</xsp:include>
		<xsp:include>java.net.URL</xsp:include>
		<xsp:include>uk.ac.starlink.util.URLDataSource</xsp:include>
		<xsp:include>uk.ac.starlink.topcat.TableViewer</xsp:include>
		<xsp:include>uk.ac.starlink.table.*</xsp:include>
	</xsp:structure>
		
		
	<!--+
	    | The XSP page needs one non-xsp tag.
	    | Anything in here gets added inside the Generator generate() method.
	    +-->
	<topcat>
		<xsp:element name="img">
			<xsp:attribute name="src">votable</xsp:attribute>
		</xsp:element>
		<xsp:logic>
			<![CDATA[
				String url = null;
				String xaxis = null;
				String yaxis = null;
				if ((url = (String)request.getParameter("url")) != null  && ((String)request.getParameter("url")).length() > 0) {
					url = url.trim();
			]]>
					<xsp:element name="url">
						<xsp:attribute name="val"><xsp:expr>url</xsp:expr></xsp:attribute>
					</xsp:element>
			<![CDATA[
				} else {
			]]>
					<xsp:element name="errormessage">
						<xsp:attribute name="val">No url was given for the VOTable.</xsp:attribute>
					</xsp:element>
			<![CDATA[
					return;
				}
				if ((xaxis = (String)request.getParameter("xaxis")) != null && ((String)request.getParameter("xaxis")).length() > 0) {
					xaxis = xaxis.trim();
			]]>
					<xsp:element name="xaxis">
						<xsp:attribute name="val"><xsp:expr>xaxis</xsp:expr></xsp:attribute>
					</xsp:element>
			<![CDATA[
				}
				if ((yaxis = (String)request.getParameter("yaxis")) != null && ((String)request.getParameter("yaxis")).length() > 0) {
					yaxis = yaxis.trim();
			]]>
					<xsp:element name="yaxis">
						<xsp:attribute name="val"><xsp:expr>yaxis</xsp:expr></xsp:attribute>
					</xsp:element>
			<![CDATA[
				}				
			]]>
		</xsp:logic>
		
			<xsp:logic>
				<![CDATA[
					StarTable st = null;
					try {
						VOTableBuilder vot = new VOTableBuilder();
				    	URLDataSource urlds = new URLDataSource(new URL(url));
						st = vot.makeStarTable(urlds);
					}catch(Exception e) {
				]]>
					<xsp:element name="errormessage">
						<xsp:attribute name="val"><xsp:expr>e.toString()</xsp:expr></xsp:attribute>
					</xsp:element>
				<![CDATA[
						return;
					}
			   		ColumnRandomWrapperStarTable wst = new ColumnRandomWrapperStarTable(st);
			   		ColumnInfo cinfo = null;
			   		boolean xaxismatch = false;
			   		boolean yaxismatch = false;
			   		int iCount = 0;
				   	for(int i = 0;i < wst.getColumnCount();i++) {
						cinfo = wst.getColumnInfo( i );
						if(Number.class.isAssignableFrom(cinfo.getContentClass()) || 
						   Date.class.isAssignableFrom(cinfo.getContentClass()) ) {
						    iCount ++;
							if(xaxis == null || xaxis.length() <= 0 ) {
							   	xaxis = cinfo.getName().trim();
							}//if
							if(!cinfo.getName().trim().equals(xaxis) && (yaxis == null || yaxis.length() <= 0)) {
								yaxis = cinfo.getName().trim();
							}//if
							if(cinfo.getName().trim().equals(xaxis)) {
								xaxismatch = true;
							}//if
							if(cinfo.getName().trim().equals(yaxis)) {
								yaxismatch = true;
							}//if
							if(xaxismatch && yaxismatch) {
								i = wst.getColumnCount();
							}//if
						}//if
					}//for
					if(!xaxismatch && !yaxismatch && iCount >= 2) {
					   	for(int i = 0;i < wst.getColumnCount();i++) {
							cinfo = wst.getColumnInfo( i );
							if(Number.class.isAssignableFrom(cinfo.getContentClass()) || 
							   Date.class.isAssignableFrom(cinfo.getContentClass()) ) {
								if(xaxismatch && !yaxismatch) {
								   yaxis = cinfo.getName();
								   yaxismatch = true;
								}
							    if(!xaxismatch) {
									xaxis = cinfo.getName();
									xaxismatch = true;
								}
							}//if
							if(xaxismatch && yaxismatch) {
								i = wst.getColumnCount();
							}//if
						}//for
				]]>
					<xsp:element name="warningmessage">
						<xsp:attribute name="val">Your and x and y axis has been reset to the first 2 plottable columns, the original x and y axis did not match any columns specefied in the votable.</xsp:attribute>
					</xsp:element>
				<![CDATA[
					}//if
					if(iCount < 2) {
				]]>
					<xsp:element name="errormessage">
						<xsp:attribute name="val">You must have at least 2 columns defined in the Number or Date area.</xsp:attribute>
					</xsp:element>
				<![CDATA[
					}
					if(xaxismatch && yaxismatch && iCount >= 2) {
				]]>
						<xsp:element name="xaxis">
							<xsp:attribute name="val"><xsp:expr>xaxis</xsp:expr></xsp:attribute>
						</xsp:element>
						<xsp:element name="yaxis">
							<xsp:attribute name="val"><xsp:expr>yaxis</xsp:expr></xsp:attribute>
						</xsp:element>
				<![CDATA[
					}
				]]>
				</xsp:logic>
			<axislist>
				<xsp:logic>
			   	<![CDATA[
					   	for(int j = 0;j < wst.getColumnCount();j++) {
							cinfo = wst.getColumnInfo( j );
							if(Number.class.isAssignableFrom(cinfo.getContentClass()) || 
							   Date.class.isAssignableFrom(cinfo.getContentClass()) ) {
				]]>
								<xsp:element name="axisitem">
									<xsp:attribute name="val">
										<xsp:expr>cinfo.getName()</xsp:expr>
									</xsp:attribute>
				<![CDATA[
									if(cinfo.getName().trim().equals(xaxis)) {
				]]>
									<xsp:attribute name="defaultx">default</xsp:attribute>
				<![CDATA[
									}
									if(cinfo.getName().trim().equals(yaxis)) {
				]]>
									<xsp:attribute name="defaulty">default</xsp:attribute>
				<![CDATA[
									}
				]]>								
								</xsp:element>
				<![CDATA[
						   }//if
					   	}//for
			   	]]>
			</xsp:logic>
		</axislist>
	</topcat>
</xsp:page>