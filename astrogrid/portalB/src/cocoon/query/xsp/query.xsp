<?xml version="1.0" encoding="ISO-8859-1"?>

<xsp:page language="java"
		create-session="true"
		xmlns:xsp="http://apache.org/xsp"
		xmlns:xsp-session="http://apache.org/xsp/session/2.0"
		xmlns:xsp-request="http://apache.org/xsp/request/2.0"
		>
		
			<!--+
	    | Import any java classes here.
	    +-->
	<xsp:structure>
		<xsp:include>java.io.IOException</xsp:include>
		<xsp:include>java.util.Iterator</xsp:include>
		<xsp:include>java.util.ArrayList</xsp:include>
		<xsp:include>java.util.Hashtable</xsp:include>
		<xsp:include>java.util.Enumeration</xsp:include>
		<xsp:include>org.astrogrid.portal.query.DataSetColumn</xsp:include>
		<xsp:include>org.astrogrid.portal.query.DataSetInformation</xsp:include>
		<xsp:include>org.astrogrid.portal.services.myspace.client.data.DataNode</xsp:include>
		<xsp:include>org.astrogrid.portal.services.myspace.client.data.DataNodeWalker</xsp:include>
	</xsp:structure>
	
	<!--+
	    | The XSP page needs one non-xsp tag.
	    | Anything in here gets added inside the Generator generate() method.
	    +-->
	<query>

		<!--+
		    | Any code wrapped in xsp-logic tags will get added to the Generator generate() method.
		    | Enclosing the code in a CDATA block means that you don't have to escape < and > symbols.
		    +-->
		<xsp:logic>
			<![CDATA[
				ArrayList dsInfoArrayList = (ArrayList)request.getAttribute("DataSetArrayList");
				Hashtable dsUrlList = (Hashtable)request.getAttribute("DataSetAgents");
				Integer criteriaNumber = (Integer)request.getAttribute("CriteriaNumber");
				DataSetInformation dsInfo = null;
				DataSetColumn dsCol = null;
				Iterator iter = null;
			]]>
		</xsp:logic>
	
		<options>
			<datasets>
			<xsp:logic>
				<![CDATA[
					iter = dsInfoArrayList.iterator();
					while (iter.hasNext()) {
						dsInfo = (DataSetInformation)iter.next();
						]]>
						<xsp:element name="datasetname">
							<xsp:attribute name="name"><xsp:expr>dsInfo.getName()</xsp:expr></xsp:attribute>
							<xsp:attribute name="val"><xsp:expr>dsInfo.getName()</xsp:expr></xsp:attribute>
						</xsp:element>
						<![CDATA[
					}
				]]>					
			</xsp:logic>
			</datasets>
		</options>
		<options>
			<subofdatasets>
			<xsp:logic>
				<![CDATA[
					if(dsInfoArrayList != null && dsInfoArrayList.size() > 0 ) {
						dsInfo = (DataSetInformation)dsInfoArrayList.get(0);
						iter = dsInfo.getDataSetColumns().iterator();
						while (iter.hasNext()) {
							dsCol = (DataSetColumn)iter.next();
							]]>
							<xsp:element name="returncolumn">
								<xsp:attribute name="name"><xsp:expr>dsCol.getType()</xsp:expr>-<xsp:expr>dsCol.getName()</xsp:expr></xsp:attribute>
								<xsp:attribute name="val"><xsp:expr>dsCol.getType()</xsp:expr>-<xsp:expr>dsCol.getName()</xsp:expr></xsp:attribute>
							</xsp:element>
							<![CDATA[
						}
					}
				]]>					
			</xsp:logic>
			</subofdatasets>
		</options>
		<xsp:logic>
			<![CDATA[
				System.out.println("checking the if of criteria");
				if(criteriaNumber != null && criteriaNumber.intValue() > 0) {
					System.out.println("entered the if of criteria");
					]]>
					<options>
						<joins>
							<xsp:element name="jointype">
								<xsp:attribute name="name">AND</xsp:attribute>
								<xsp:attribute name="val">AND</xsp:attribute>
							</xsp:element>
							<xsp:element name="jointype">
								<xsp:attribute name="name">OR</xsp:attribute>
								<xsp:attribute name="val">OR</xsp:attribute>
							</xsp:element>
						</joins>
					</options>
					<![CDATA[
				}
			]]>					
		</xsp:logic>
		
		<options>
			<operators>
				<xsp:element name="operator">
					<xsp:attribute name="name">EQUALS</xsp:attribute>
					<xsp:attribute name="val">EQUALS</xsp:attribute>
				</xsp:element>
				<xsp:element name="operator">
					<xsp:attribute name="name">LESS_THAN</xsp:attribute>
					<xsp:attribute name="val">LESS_THAN</xsp:attribute>
				</xsp:element>
				<xsp:element name="operator">
					<xsp:attribute name="name">LESS_THAN_OR_EQUALS</xsp:attribute>
					<xsp:attribute name="val">LESS_THAN_OR_EQUALS</xsp:attribute>
				</xsp:element>
				<xsp:element name="operator">
					<xsp:attribute name="name">GREATER_THAN</xsp:attribute>
					<xsp:attribute name="val">GREATER_THAN</xsp:attribute>
				</xsp:element>
				<xsp:element name="operator">
					<xsp:attribute name="name">GREATER_THAN_OR_EQUALS</xsp:attribute>
					<xsp:attribute name="val">GREATER_THAN_OR_EQUALS</xsp:attribute>
				</xsp:element>
				<xsp:element name="operator">
					<xsp:attribute name="name">NONE</xsp:attribute>
					<xsp:attribute name="val">NONE</xsp:attribute>
				</xsp:element>
			</operators>
		</options>
		
		<options>
			<dsagents>
			<xsp:logic>
				<![CDATA[
			    	for (Enumeration e = dsUrlList.keys() ; e.hasMoreElements() ;) {
			    		String keyName = (String)e.nextElement();
			    	]]>
			    			<xsp:element name="dsagent">
								<xsp:attribute name="name"><xsp:expr>keyName</xsp:expr></xsp:attribute>
								<xsp:attribute name="val"><xsp:expr>dsUrlList.get(keyName)</xsp:expr></xsp:attribute>
							</xsp:element>
							<![CDATA[
						}
					]]>					
			</xsp:logic>
			</dsagents>
		</options>
		
	</query>
</xsp:page>