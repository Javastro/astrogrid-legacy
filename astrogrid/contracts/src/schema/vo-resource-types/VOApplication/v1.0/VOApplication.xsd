<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2005 rel. 3 U (http://www.altova.com) by Licensed User (European Southern Observatory) -->
<xs:schema xmlns="http://www.ivoa.net/schema/Application/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vr="http://www.ivoa.net/xml/VOResource/v1.0" targetNamespace="http://www.ivoa.net/schema/Application/v1.0" elementFormDefault="unqualified" attributeFormDefault="unqualified"
version="1.0 $Revision: 1.2 $">
	 <xs:import namespace="http://www.ivoa.net/xml/VOResource/v1.0"
              schemaLocation="../../../vo-resource-types/VOResource/v1.0/VOResource.xsd"/>
	<xs:complexType name="Application">
		<xs:annotation>
			<xs:documentation>Captures the abstract idea of what an application is</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="vr:Resource">
				<xs:sequence>
              <!-- <xs:element name="ApplicationInfo">
                  <xs:complexType>
                     <xs:sequence>   -->
					<xs:element name="cost" minOccurs="0" />
					<xs:element name="licence" type="xs:string" maxOccurs="1" minOccurs="0"></xs:element>
					<xs:element name="openSource" type="xs:boolean" minOccurs="0"></xs:element>
					<xs:element name="inputFormats" type="DataFormat" maxOccurs="unbounded" minOccurs="0">
					   <xs:annotation>
					      <xs:documentation>file formats that this can support
</xs:documentation>
					   </xs:annotation>
					</xs:element>
               <xs:element name="outputFormats" type="DataFormat" maxOccurs="unbounded" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>file formats that this can support
</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="voStandard" type="ApplicationCapability" maxOccurs="unbounded" minOccurs="0">
                        <xs:annotation>
                           <xs:documentation>enumerate which standards this application is compliant with - *Editor note* not really too happy with this, as there is a certain amount of potential duplication here - e.g. a CeaApplication type will support CEA standard so at least one entry would have to be placed here...</xs:documentation>
                        </xs:annotation>
               </xs:element>
               <xs:element name="sourceLanguage" type="ProgrammingLanguage" maxOccurs="unbounded" minOccurs="0">
                  <xs:annotation>
                     <xs:documentation>programming languages that the application is written in...(no versions - gets into tricky waters...)</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element name="sourceCodeURL" type="xs:anyURI" maxOccurs="1" minOccurs="0"></xs:element>
               <!--</xs:sequence>
                  </xs:complexType>
               </xs:element>-->
				</xs:sequence> 
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DesktopApplication">
		<xs:annotation>
			<xs:documentation>An application that can actually be run</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Application">
                 <xs:sequence>
                    <xs:element name="binarySize" type="xs:int"
                       maxOccurs="1" minOccurs="0">
                    </xs:element>
                    <xs:element name="memoryRequirement"
                       type="xs:string" maxOccurs="1" minOccurs="0">
                    </xs:element>
                    <xs:element name="dependsOn" type="vr:IdentifierURI"
                       maxOccurs="unbounded" minOccurs="0">
                       <xs:annotation>
                          <xs:documentation>
                             pointers to libraries that the application
                             might depend on
                          </xs:documentation>
                       </xs:annotation>
                    </xs:element>
                    <xs:element name="executable" type="ExecutionEnvironment" maxOccurs="unbounded" minOccurs="0"></xs:element>
                 </xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="SoftwareLibrary">
		<xs:annotation>
			<xs:documentation>Software the cannot be independently executed, but can be used to build applications</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="Application">
              <xs:sequence>
              <xs:element name="library" type="ExecutionEnvironment" maxOccurs="unbounded" minOccurs="1"></xs:element>
              </xs:sequence>
            </xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="DataFormat">
	   <xs:annotation>
	      <xs:documentation>Data File FormatsAgain - difficult to make this a comprehensive list....perhaps 80% would be useful though...</xs:documentation>
	   </xs:annotation>
	   <xs:restriction base="xs:string">
       <xs:enumeration value="FITS"></xs:enumeration>
       <xs:enumeration value="HDF"></xs:enumeration>
       <xs:enumeration value="VOTable"></xs:enumeration>
      </xs:restriction>
	</xs:simpleType>

	<xs:complexType name="ExecutionEnvironment">
	   <xs:annotation>
	      <xs:documentation>
	         Describe the full execution environment - this is not very easy to do in a machine readable way - much better suited to an ontology
	      </xs:documentation>
	   </xs:annotation>
	   <xs:sequence>
	      <xs:element name="platform" type="Platform">
	         <xs:annotation>
	            <xs:documentation>The major classification of the execution environment</xs:documentation>
	         </xs:annotation>
	      </xs:element>
          <xs:element name="subtype" type="xs:string" maxOccurs="1" minOccurs="0">
             <xs:annotation>
                <xs:documentation>this is used to specify exactly the specific kind of the environment - 
                e.g. in the case of unix/linux it would be nice if the output of uname would suffice here - however the most common</xs:documentation>
             </xs:annotation>
          </xs:element>
          
	      <xs:element name="minVersion" type="xs:string"
	         maxOccurs="1" minOccurs="0">
	         <xs:annotation>
	            <xs:documentation>
	               the minimum version of the environment that the code will run in - 
                  lots of problems here...
                  *  need to be able to compare versions...possibly not so easy e.g. windows XP > windows 2000
                  *  In addition there are lots of "marketing versions" of operating systems that are not the same as the versions that the operating system itself uses..
                  *  Also linux based systems often report version of kernel, which is not necessarily the determining factor as to whether a particular version of an application can run...
                  
	            </xs:documentation>
	         </xs:annotation>
	      </xs:element>
	      <xs:element name="maxVersion" type="xs:string" maxOccurs="1"
	         minOccurs="0">
	         <xs:annotation>
	            <xs:documentation>
	               The highest version of the environment that this
	               applies to.
	            </xs:documentation>
	         </xs:annotation>
	      </xs:element>
	      <xs:element name="download" type="xs:anyURI" maxOccurs="unbounded" minOccurs="1">
	         <xs:annotation>
	            <xs:documentation>
	               The url that can be used to download (and possibly
	               execute) the application
	            </xs:documentation>
	         </xs:annotation>
	      </xs:element>
	      <xs:element name="path" type="xs:string" maxOccurs="1" minOccurs="0">
	         <xs:annotation>
	            <xs:documentation>this is intended to be a path to the location of the executable if the download is some sort of tar/zip archive</xs:documentation>
	         </xs:annotation>
	      </xs:element>
	   </xs:sequence>
	</xs:complexType>

	<xs:simpleType name="ProgrammingLanguage">
        <xs:annotation>
           <xs:documentation>An enumeration of programming languagesThis sort of thing quickly gets out of date....</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
	      <xs:enumeration value="C"></xs:enumeration>
	      <xs:enumeration value="C++"></xs:enumeration>
	      <xs:enumeration value="C#"></xs:enumeration>
	      <xs:enumeration value="FORTRAN"></xs:enumeration>
	      <xs:enumeration value="Java"></xs:enumeration>
	      <xs:enumeration value="Perl"></xs:enumeration>
	      <xs:enumeration value="Python"></xs:enumeration>
        </xs:restriction>
	</xs:simpleType>
   
   <xs:simpleType name="Platform">
        <xs:annotation>
           <xs:documentation>An Enumeration of possible execution environments - this is extremely difficult to be comprehensive with..</xs:documentation>
        </xs:annotation>
        <!-- major OS -->
        <xs:restriction base="xs:string">
         <xs:enumeration value="Unix"></xs:enumeration>
         <xs:enumeration value="Windows"></xs:enumeration>
        
        <!--Java-->
         <xs:enumeration value="Java"></xs:enumeration>
         <xs:enumeration value="JavaWebStart"><xs:annotation><xs:documentation>the dowload url refers specifically to an java webstart jnlp file</xs:documentation></xs:annotation></xs:enumeration>
         <xs:enumeration value="JavaApplet"><xs:annotation><xs:documentation>the dowload url refers specifically to an java applet</xs:documentation></xs:annotation></xs:enumeration>   
         <!-- common general scripting -->      
         <xs:enumeration value="Perl"></xs:enumeration>
         <xs:enumeration value="Python"></xs:enumeration>
         <!-- more specialized scripting -->
         <xs:enumeration value="IRAF"></xs:enumeration>
         <xs:enumeration value="IDL"></xs:enumeration>
         
         
      </xs:restriction>
   </xs:simpleType>

   

   <xs:complexType name="ApplicationCapability">
      <xs:annotation>
         <xs:documentation>
            generic description of a capability of an application - this is different from a service capability because it does not have an interface associated- perhaps should be derived from a common base class though.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element name="property" type="Property"
            maxOccurs="unbounded" minOccurs="0">
            <xs:annotation>
               <xs:documentation>                  a general set of properties that a capability can have                  - editor note - this might be too loose to be useful,                  but does give a generic way of adding arbitrary                  properties to a capability               </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>
      <xs:attribute name="standardID" type="vr:IdentifierURI"></xs:attribute>
   </xs:complexType>

 
   <xs:complexType name="Property">
        <xs:annotation>
           <xs:documentation>a general property key value pair</xs:documentation>
        </xs:annotation>
        <xs:sequence>
         <xs:element name="key" type="xs:string"></xs:element>
         <xs:element name="value" type="xs:string"></xs:element>
      </xs:sequence>
   </xs:complexType>

<!-- plastic should probably be in its own schema file.... -->
  <xs:complexType name="PlasticCapability">
      <xs:annotation>
         <xs:documentation>The application has the ability to communicate with other applications on the desktop with the PLASTIC protocol.
</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension base="ApplicationCapability">
            <xs:sequence>
               <xs:element name="supportedMessage" maxOccurs="unbounded" minOccurs="1" type="PlasticSupportedMessage">
                  <xs:annotation>
                     <xs:documentation>a plastic message that this application supports</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType name="PlasticSupportedMessage">
      <xs:simpleContent>
         <xs:extension base="xs:string">
            <xs:attribute use="required" name="consumes"
               type="xs:boolean">
               <xs:annotation></xs:annotation>
            </xs:attribute>
            <xs:attribute use="required" name="broadcasts"
               type="xs:boolean">
               <xs:annotation></xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
</xs:schema>
