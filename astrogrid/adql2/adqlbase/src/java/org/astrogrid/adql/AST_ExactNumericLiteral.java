/* Generated By: AdqlStoX.jjt,v 1.33.2.4 2006-12-19 14&JJTree: Do not edit this line. AST_ExactNumericLiteral.java */

package org.astrogrid.adql;

import org.astrogrid.adql.beans.AtomType ;
import org.astrogrid.adql.beans.IntegerType ;
import org.astrogrid.adql.beans.RealType ;
import org.apache.xmlbeans.XmlObject ;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory ;


public class AST_ExactNumericLiteral extends SimpleNode {
  
    private static Log log = LogFactory.getLog( AST_ExactNumericLiteral.class ) ;
    private int sign = +1 ;

    public AST_ExactNumericLiteral(AdqlStoX p, int id) {
        super(p, id);
    }

    public void setSign( int signIndication ) {
        if( signIndication >= 0 ) {
            this.sign = +1 ;
        }
        else {
           this.sign = -1 ;
        }
    }
    
    public void buildXmlTree( XmlObject xo ) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_ExactNumericLiteral.buildXmlTree()" ) ; 
        AtomType atomType = (AtomType)xo.changeType( AtomType.type ) ; 

        if( firstToken.image.indexOf( '.' ) == -1 ) {           
            IntegerType intType = IntegerType.Factory.newInstance() ;
            intType.setValue( new Long( firstToken.image ).longValue() * sign ) ;
            atomType.setLiteral( intType ) ;
        }
        else {
            RealType realType = RealType.Factory.newInstance() ;
            realType.setValue( new Double( firstToken.image ).doubleValue() * sign ) ;
            atomType.setLiteral( realType ) ;
        }
        this.generatedObject = atomType ;
        super.buildXmlTree( atomType ) ;
        if( log.isTraceEnabled() ) exitTrace( log, "AST_ExactNumericLiteral.buildXmlTree()" ) ; 
    }
  
}
