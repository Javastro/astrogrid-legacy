/* Generated By: AdqlStoX.jjt,v 1.33.2.4 2006-12-19 14&JJTree: Do not edit this line. AST_Factor.java */

package org.astrogrid.adql;

import org.astrogrid.adql.beans.InverseSearchType;
import org.astrogrid.adql.beans.UnaryExprType;
import org.astrogrid.adql.beans.UnaryOperatorType;
import org.apache.xmlbeans.XmlObject; 
import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;

public class AST_Factor extends SimpleNode {
    
    private static Log log = LogFactory.getLog( AST_Factor.class ) ;
    
    private Token signToken ;

    public AST_Factor(AdqlStoX p, int id) {
        super(p, id);
    }
    
    public void setSign( Token signToken, String elementName ) {
        this.signToken = signToken ;
        pushPosition( elementName, UnaryExprType.type ) ;
//        Tracker t = getTracker() ;
//        //
//        // The sign (UnaryExprType) is replacing a current element, so
//        // we remember the current element, which we will
//        // use to create a sub element below the sign...
//        Tracker.Part p = t.peek() ;
//        String element = p.getElement() ;
//        //
//        // Keep the current element but change its type to sign...
//        t.setType( UnaryExprType.type ) ;
//        //
//        // Create the sub element below it...
//        // (Effectively, the sign has pushed this below)
//        t.push( element ) ;
    }
    
    public boolean isSetSign() {
        return signToken != null ;
    }
    
    public void buildXmlTree( XmlObject xo ) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_Factor.buildXmlTree()" ) ; 
        if( isSetSign() ) {
            UnaryExprType ueType = (UnaryExprType)xo.changeType( UnaryExprType.type) ;
            ueType.setOper( UnaryOperatorType.Enum.forString( signToken.image ) ) ;  
            children[1].buildXmlTree( ueType.addNewArg() ) ;
            this.generatedObject = ueType ;
        }
        else {
            children[0].buildXmlTree( xo ) ;
            this.generatedObject = children[0].getGeneratedObject() ;
        }
        super.buildXmlTree(xo) ;
        if( log.isTraceEnabled() ) exitTrace( log, "AST_Factor.buildXmlTree()" ) ; 
    }
  
}
