/* Generated By: AdqlStoX.jjt,v 1.49.2.18 2008/07/04 09&JJTree: Do not edit this line. AST_BitTerm.java */

package org.astrogrid.adql;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.xmlbeans.XmlObject;
import org.astrogrid.adql.beans.UnaryExprType;
import org.astrogrid.adql.beans.UnaryOperatorType;

public class AST_BitTerm extends SimpleNode {
    
    private static Log log = LogFactory.getLog( AST_BitTerm.class ) ;
    
    private String biOperator = null ;
 
    public void setBitInversion( String biOperator ) {
        this.biOperator = biOperator ;
    }
    
    public AST_BitTerm(AdqlStoX p, int id) {
        super(p, id);
    }
    
    public void buildXmlTree( XmlObject xo ) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_BitTerm.buildXmlTree()" ) ; 
        
        if( biOperator != null ) {
            UnaryExprType ueType = (UnaryExprType)xo.changeType( UnaryExprType.type) ;
            ueType.setOper( UnaryOperatorType.Enum.forString( biOperator ) ) ;  
            children[0].buildXmlTree( ueType.addNewArg() ) ;
            this.generatedObject = ueType ;
        }
        else {
            children[0].buildXmlTree( xo ) ;
            this.generatedObject = children[0].getGeneratedObject() ;
        }
        super.buildXmlTree(xo) ;
        if( log.isTraceEnabled() ) exitTrace( log, "AST_BitTerm.buildXmlTree()" ) ; 
    }

}
