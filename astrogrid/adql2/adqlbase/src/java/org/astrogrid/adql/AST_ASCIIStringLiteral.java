/* Generated By: AdqlStoX.jjt,v 1.33.2.4 2006-12-19 14&JJTree: Do not edit this line. AST_ASCIIStringLiteral.java */

package org.astrogrid.adql;

import org.apache.xmlbeans.XmlObject;
import org.astrogrid.adql.beans.StringType ;
import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;

public class AST_ASCIIStringLiteral extends SimpleNode {
    
    private static Log log = LogFactory.getLog( AST_ASCIIStringLiteral.class ) ;

    public AST_ASCIIStringLiteral(AdqlStoX p, int id) {
        super(p, id);
    }

    public void buildXmlTree( XmlObject xo ) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_ASCIIStringLiteral.buildXmlTree()" ) ;
        int childCount = jjtGetNumChildren() ;
        String value = null ;
        if( childCount == 1 ) {
            value = (String)children[0].getGeneratedObject() ;
        }
        else {
            StringBuffer buffer = new StringBuffer( childCount * 16 ) ;
            for( int i=0; i<childCount; i++ ) {
                buffer.append( (String)children[i].getGeneratedObject() ) ;
            }
            value = buffer.toString() ;
        }
        if( log.isDebugEnabled() ) {
            log.debug( "xo type: " + xo.getClass() ) ;
        }
        
        StringType st = (StringType)xo.changeType( StringType.type ) ;
        st.setValue( value ) ;
        this.generatedObject = st ; 
        super.buildXmlTree(st) ;
        if( log.isTraceEnabled() ) exitTrace( log, "AST_ASCIIStringLiteral.buildXmlTree()" ) ;
    }
    
}
