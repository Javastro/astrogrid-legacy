/* Generated By: AdqlStoX.jjt,v 1.34.2.17 2007/04/24 14&JJTree: Do not edit this line. AST_TableName.java */

package org.astrogrid.adql;

import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;
import org.apache.xmlbeans.XmlObject;
import org.astrogrid.adql.beans.TableType;
import org.astrogrid.adql.AdqlParser.SyntaxOption;


public class AST_TableName extends SimpleNode {

    private static Log log = LogFactory.getLog( AST_TableName.class ) ;

    public AST_TableName(AdqlStoX p, int id) {
        super(p, id);
    }
    
    /* (non-Javadoc)
     * @see org.astrogrid.adql.SimpleNode#buildXmlTree(org.apache.xmlbeans.XmlObject)
     */
    public void buildXmlTree(XmlObject xo) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_TableName.buildXmlTree()" ) ;
        TableType tt = (TableType)xo.changeType( TableType.type ) ;
        
        if( jjtGetNumChildren() == 1 ) {
            tt.setName( (String)children[0].getGeneratedObject() ) ;
        }
        else {
            //
            // Number of children must be 2 ...
            tt.setName( (String)children[1].getGeneratedObject() ) ;
            AST_Ownership ownership = (AST_Ownership)children[0] ;
            if( ownership.getQualifierDepth() == 1 ) {
                tt.setSchema( ownership.getSecondQualifier() ) ;
            }
            else {
                tt.setCatalog( ownership.getFirstQualifier() ) ;
                tt.setSchema( ownership.getSecondQualifier() ) ;
                if( tt.getSchema() == "" ) {
                    if( !adqlstox.parser.isSyntaxSet( SyntaxOption.LAX_SCHEMA ) ) {
                        this.getTracker().setError( "Reference Implementation: Schema names must be fully qualified." ) ;
                    }
                }
            }
        }          
        this.generatedObject = tt ;
        super.buildXmlTree( tt );
        if( log.isTraceEnabled() ) exitTrace( log, "AST_TableName.buildXmlTree()" ) ; 
        
    }

}
