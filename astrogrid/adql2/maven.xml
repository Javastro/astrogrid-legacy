<?xml version="1.0"?>
<!-- extension maven script -->
<project xmlns:j="jelly:core"
         xmlns:maven="jelly:maven"
         xmlns:ant="jelly:ant"
         xmlns:util="jelly:util"
         xmlns:log="jelly:log"
         xmlns:define="jelly:define"
         xmlns:artifact="artifact" >
         
   <!--+
       | Custom astrogrid goals for nightly build
       | Override those in maven folder
       +-->
   <goal name="astrogrid-clean" prereqs="multiproject:clean"/>
   <goal name="astrogrid-deploy-site" prereqs="astrogrid-build-site,site:sshdeploy" />
   <goal name="astrogrid-build-site" prereqs="multiproject:site"/>
   <goal name="astrogrid-deploy-snapshot" prereqs="multiproject:deploy-snapshot"/>
   <goal name="astrogrid-build-snapshot" prereqs="multiproject:artifact"/>
   <goal name="astrogrid-install-snapshot" prereqs="multiproject:install-snapshot"/>
   <goal name="astrogrid-deploy-artifact" prereqs="multiproject:deploy"/>
   <goal name="astrogrid-build-artifact" prereqs="multiproject:artifact"/>
    
   <goal name="astrogrid-install-artifact" prereqs="multiproject:install,parserzip-install"/>      

   <!--+
       | Installs the zip artifact in the maven repository
       +-->
   <goal name="parserzip-install" prereqs="parserzip-build">
        <artifact:install
        	artifact="${basedir}/target/astrogrid-adqlparser-bundle-${astrogrid.adqlparser.bundle.version}.zip"
        	type="zip"
        	project="${pom}"
        /> 
   </goal>
   
   <!--+
       | Builds the zip file which is the overall artifact for this group of projects
       +-->
   <goal name="parserzip-build">
        <ant:echo message=""/>
		<ant:echo message="Building the parser zip artifact ...."/>
		<!--+
		    | Create a temporary directory to hold the zip file contents
		    +-->
		<mkdir dir="${basedir}/ziptmp"/>
		
		<!--+
		    | Copy the four jar files from each of the sub-projects
		    +-->
		<ant:copy todir="${basedir}/ziptmp" 
		       file="${basedir}/adqlbase/target/astrogrid-adqlparser-base-${astrogrid.adqlparser.base.version}.jar"/>
		<ant:copy todir="${basedir}/ziptmp" 
		       file="${basedir}/adqlserver/target/astrogrid-adqlparser-sv-${astrogrid.adqlparser.sv.version}.jar"/>
		<ant:copy todir="${basedir}/ziptmp" 
		       file="${basedir}/adqlutils/target/astrogrid-adqlparser-utils-${astrogrid.adqlparser.utils.version}.jar"/>
		<ant:copy todir="${basedir}/ziptmp" 
		       file="${basedir}/adqlbeans/target/astrogrid-adqlbeans-${astrogrid.adqlbeans.version}.jar"/>
		 
		<!--+
		    | Copy a suitable log4j properties file
		    +-->
		<ant:copy todir="${basedir}/ziptmp" 
		       file="${basedir}/adqlbase/src/config/log4j.properties"/>
		       
		<!--+
		    | Copy other suitable docs
		    | (A README file and a shell script for running the parser from the command line
		    +-->
		<ant:copy todir="${basedir}/ziptmp">
			<ant:fileset dir="${basedir}/zipdoc" />
		</ant:copy>
		
		<!--+
		    | Create the target directory if one does not already exist
		    +-->
		<mkdir dir="${basedir}/target"/>
		
		<!--+
		    | Create the zip file
		    +-->
		<ant:zip
			destfile="${basedir}/target/astrogrid-adqlparser-bundle-${astrogrid.adqlparser.bundle.version}.zip"
			basedir="${basedir}/ziptmp"                          
			compress="false"
		/>	
		
		<!--+
		    | Delete the temporary file
		    +-->
		<ant:delete includeEmptyDirs="true">
			<fileset dir="${basedir}/ziptmp" />
		</ant:delete>
				
   </goal>
     
    <!--+
        | These are just handlers for the top level AstroGrid goals.
        +-->
    <!--goal name="astrogrid-clean">
        <attainGoal name="multiproject:clean"/>
    </goal-->
    
    <postGoal name="multiproject:clean">
		<ant:echo message=""/>
		<ant:echo message="Tidy up after for multiproject:clean ...."/>

		<!--+
	    	| Remove aggregated site...
	    	+-->
	    <ant:available property="top.target.dir.exists" file="${basedir}/target" type="dir"/>
	    <j:if test="${top.target.dir.exists}">
			<j:choose>
				<ant:delete includeEmptyDirs="true">
					<fileset dir="${basedir}/target" />
				</ant:delete>	
			</j:choose>
		</j:if>

		<!--+
	    	| Remove temporary zip directory...
	    	+-->
	    <ant:available property="top.ziptmp.dir.exists" file="${basedir}/ziptmp" type="dir"/>
	    <j:if test="${top.ziptmp.dir.exists}">
			<j:choose>
				<ant:delete includeEmptyDirs="true">
					<fileset dir="${basedir}/ziptmp" />
				</ant:delete>	
			</j:choose>
		</j:if>
		
	</postGoal>
    
</project>
