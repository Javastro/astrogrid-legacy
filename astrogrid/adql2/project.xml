<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="maven-project.xsd">

   <!--+
        | Extend the top level project descriptor.
        +-->	
   <extend>./maven/project.xml</extend>
   
   <!--+
       | The full name of the project.
       | This is used when generating JavaDoc titles.
       +-->
    <name>AstroGrid ADQL Parser</name> 
        
    <!--+
        | A short description of the project.
        | The short description should be limited to a single line.
        +-->
    <shortDescription>A parser for processing ADQL</shortDescription>
    
    <!--+
        | A detailed description of the project.
        | This is used to generate the front page of the projects web site. 
        +-->
    <description>
    	<![CDATA[
    	  <p>
          This project contains a parser which processes queries written in ADQL (Astronomical Data Query Language).
          Various outputs can be produced. The basic though intermediate output is ADQL/x (ie: an XML version of a query).
          This can be processed further into some variant of SQL suitable for submission against an astronomical archive
          held in a relational database. The parser itself is not involved in the actual submission of a query.
          </p>
          <p>
          From the last sentence it is obvious the parser is not a standalone component. It only serves a useful
          function inside an existing software environment. Within Astrogrid, these environments are provided by 
          the VODesktop on the client side, and the DSA on the server side. It is the VODesktop that is involved
          in framing a suitable query and in finding a server which can satisfy that query.
          It is the DSA component within that server that handles submitting the resulting SQL to a relational database.
          </p>
          <p>
          As such a lot of the detail you will find on this site is targetted at developers: those wishing to question
          the further development of ADQL as a language, and those wishing to place the parser within a relevant
          software environment. 
          </p>
          <p>
          There are two (some may say three) levels of code generation in the project. One concerns the use of JavaCC
          to generate the basic parser and its associated syntax tree of modules (nearly 100 of these). 
          Another concerns the generation of XMLBeans that are indispensable for manipulating the intermediate XML
          form of a query.
          </p>
          <p>
          Apart from the base parser, which is not thread safe, there is a server version which handles thread safety.
          Other utility programmes are included that are used as aids within the development environment.
          </p>
        ]]>
    </description>
    
    <artifactId>astrogrid-adqlparser-bundle</artifactId>
    <package>org.astrogrid.adql</package>
    <currentVersion>${astrogrid.adqlparser.bundle.version}</currentVersion>
    
    <siteAddress>terror.star.le.ac.uk</siteAddress>
  	<siteDirectory>/software_docs/adqlparser-${pom.currentVersion}</siteDirectory>
  		
</project>
