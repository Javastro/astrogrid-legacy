<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid registry server.
    |
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:artifact="artifact"    
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
	default="astrogrid-install-snapshot"	
    >

    <!--+
        | Primary goals are :
        |     clean
        |     install-artifact
        |     install-snapshot
        |     site
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build dest directory : ${maven.build.dest}"/>
        <ant:echo message="Build test dest directory : ${maven.test.dest}"/>
        <ant:echo message="JUnit test directory : ${maven.junit.dir}"/>    	
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!--+
        | Import our plugin goals from our parent project.
        | Looks like this gets included anyway ...
        | Possibly because our project inherits from ../maven.project.xml ?
        | Maven : Any more unexpected suprises !?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Reactor goals.
        | These are just placeholder targets for the reactor to call.
        +-->

    <!--+
        | Clean our build target.
        | (required as a target goal for the reactor)
        +-->
    <preGoal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Cleaning build target ...."/>
    </preGoal>

    <!--+
        | Build and install our artifact jar.
        +-->
    <goal name="astrogrid-install-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Build our artifact jar.
            +-->
        <attainGoal name="buildZip"/>
        <!--+
            | Install our artifact jar.
            +-->
		<artifact:install
			artifact="${maven.build.dir}/${maven.final.name}.zip"
			project="${pom}"
			type="zip"
			/>
    </goal>

    <!--+
        | Build and deploy our artifact jar.
        +-->
    <goal name="astrogrid-deploy-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our artifact jar.
            +-->
        <attainGoal name="astrogrid-install-artifact"/>
        <!--+
            | Deploy our artifact jar.
            +-->
		<artifact:deploy
			artifact="${maven.build.dir}/${maven.final.name}.zip"
			project="${pom}"
			type="zip"
			/>
    </goal>

	   <!--+
	        | Build and install our snapshot jar(s).
	        +-->
	    <goal name="astrogrid-install-snapshot">
	        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
	        <ant:echo message="Build version   : ${pom.currentVersion}"/>
	        <ant:echo message="Build directory : ${maven.build.dir}"/>
	        <!--+
	            | Create our snapshot name.
	            +-->
	        <maven:snapshot project="${pom}"/>
	        <core:set var="maven.final.name" value="${snapshotSignature}"/>
	        <!--+
	            | Build our snapshot jar.
	            +-->
	        <attainGoal name="buildZip"/>
	        <!--+
	            | Install our snapshot jar(s).
	            +-->
			<artifact:install-snapshot
				artifact="${maven.build.dir}/${maven.final.name}.zip"
				project="${pom}"
				type="zip"
				/>
	    </goal>

    
    <goal name="astrogrid-deploy-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Deploying snapshot artifact ...."/>
    
        <!--+
            | Create our snapshot jar.
            +-->
        <attainGoal name="astrogrid-install-snapshot"/>
        <!--+
            | Deploy our snapshot jar(s).
            +-->
		<artifact:deploy-snapshot
			artifact="${maven.build.dir}/${maven.final.name}.zip"
			project="${pom}"
			type="zip"
			/>

    </goal>
    

    <!--+
        | Build our project website.
        | (required as a target goal for the reactor)
        +-->
    <preGoal name="site">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building project site ...."/>
    </preGoal>


    
    <goal name="buildZip">
    
        <core:set var="webappJarIdent" value="${pom.groupId}:astrogrid-registry"/>
        <core:set var="tempDir" value="${maven.build.dir}/tmp"/>
        <core:set var="tempDir2" value="${maven.build.dir}/tmp2"/>
        <core:forEach var="artifact" items="${pom.getArtifacts()}">
            <core:if test="${artifact.getDependency().getId().equals(webappJarIdent)}">
                <ant:echo message="Found registry server jar"/>
                <ant:echo message="Name     : ${artifact.getName()}"/>
                <ant:echo message="Path     : ${artifact.getPath()}"/>
                <core:set var="webappJarPath" value="${artifact.getPath()}"/>
            </core:if>
        </core:forEach>   
        
	    <!--+
            | Unpack our service WSDD files.
            +-->
        <ant:unzip
            src="${webappJarPath}"
            dest="${tempDir}">
        </ant:unzip>
        
        <ant:copy toDir="${maven.build.dest}/xmldb_exist" flatten="true">
            <fileset dir="${tempDir}">
                <include name="**/start.jar"/>                
                <include name="**/conf.xml"/>
                <include name="**/WEB-INF/*.sh"/>
                <include name="**/WEB-INF/*.bat"/>
            </fileset>
        </ant:copy>  
        
        
        <ant:copy toDir="${maven.build.dest}/xmldb_exist/lib">
            <fileset dir="${tempDir}/WEB-INF/lib">
                <include name="**"/>
            </fileset>
        </ant:copy>  
        
        <ant:copy toDir="${maven.build.dest}/xmldb_exist/data">
            <fileset dir="${tempDir}/WEB-INF/data">
                <include name="**"/>
            </fileset>
        </ant:copy>  
        
        
  		<zip destfile="${maven.build.dir}/${pom.artifactId}-${pom.currentVersion}.zip"
       		basedir="${maven.build.dest}/xmldb_exist"
       		update="true"
       		includes="**"
  		/>
    </goal>


</project>
