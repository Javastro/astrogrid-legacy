<?xml version="1.0"?>

<xsp:page language="java"
   xmlns:xsp="http://apache.org/xsp"
   xmlns:xsp-request="http://apache.org/xsp/request/2.0">
     
<xsp:comment>

   Astrogrid Registry Portal using Cocoon.

   Author: Roy Platon, Astrogrid, RAL.

</xsp:comment>

   <xsp:structure>

   <xsp:comment>Axis SOAP stuff</xsp:comment>
      <xsp:include>org.apache.axis.client.Call</xsp:include>
      <xsp:include>org.apache.axis.client.Service</xsp:include>
      <xsp:include>org.apache.axis.encoding.XMLType</xsp:include>
      <xsp:include>javax.xml.namespace.QName</xsp:include>
      <xsp:include>javax.xml.rpc.ParameterMode</xsp:include>
      <xsp:include>org.apache.cocoon.components.language.markup.xsp.XSPUtil
      </xsp:include>

   </xsp:structure>

   <xsp:logic>

// Web service stuff

// (ToDo) Make these constants inherit from Cocoon sitemap (trivial!)
   private static String AXIS = "/axis/services/";
   private static String SOAP = "/soap/servlet/rpcrouter/";
   private static final String OLDSERVICE = "RegistryInterface";       
   private static final String NEWSERVICE = "RegistryInterface3_0";       
   private static final String RALSERVICE = "AstrogridRegistryQuery";       

//  Global variables
   String querytype = null;
   String webserver = null;
   String element1 = null;
   String op1 = null;
   String value1 = null;
   String seperator = null;
   String element2 = null;
   String op2 = null;
   String value2 = null;
   String site = null;
   String service = null;
   String soapservice = null;

   String query = null;   
   String results = null;   
   </xsp:logic>

   <agtemplate title="Registry Results">

   <xsp:logic>

// Get parameters from form
   querytype = <xsp-request:get-parameter name="QueryType"/>;
   if ( querytype == null ) querytype = "identity";
   webserver = <xsp-request:get-parameter name="WebServer"/>;
   element1 = <xsp-request:get-parameter name="Element1" />;
   op1 = <xsp-request:get-parameter name="Operator1"/>;
   value1 = <xsp-request:get-parameter name="Value1"/>;
   seperator = <xsp-request:get-parameter name="Seperator1"/>;
   element2 = <xsp-request:get-parameter name="Element2"/>;
   op2 = <xsp-request:get-parameter name="Operator2"/>;
   value2 = <xsp-request:get-parameter name="Value2"/>;

   query = constructQuery( querytype, element1, op1, value1,
                           seperator, element2, op2, value2 );   

   if ( webserver.equals( "Testing" ) ) {
     site = "http://rlspc14.bnsc.rl.ac.uk:8080";
     service = site + AXIS + NEWSERVICE;
     soapservice = null;
   }
   else if ( webserver.equals( "Rutherford" ) ) {
     site = "http://stargrid1.bnsc.rl.ac.uk:8080";
     service = site + AXIS + NEWSERVICE;
     soapservice = null;
   }
   else if ( webserver.equals( "MSSL" ) ) {
     site = "http://msslxy.mssl.ucl.ac.uk:8080";
     service = site + SOAP;
     soapservice = "urn:org.astrogrid.registry.RegistryInterface3_0";
   }
   else if ( webserver.equals( "Leicester" ) ) {
     site = "http://katatjuta.star.le.ac.uk:8080";
     service = site + AXIS + NEWSERVICE;
     soapservice = null;
   }
   else if ( webserver.equals( "Astrogrid" ) ) {
     site = "http://astrogrid.org:8080";
     service = site + AXIS + NEWSERVICE;
     soapservice = null;
   }

   try {
     Service axis = new Service();
     Call call = (Call) axis.createCall();
     
     call.setTargetEndpointAddress( new java.net.URL( service ) );
     if ( soapservice == null ) {
        call.setOperationName( "submitQuery" );
     }
     else {
        call.setOperationName( new QName( soapservice, "submitQuery" ) );
     }

     call.removeAllParameters( );
     call.addParameter( "usecase", XMLType.XSD_STRING, ParameterMode.IN );
     call.setReturnType( XMLType.XSD_STRING );
     results = (String) call.invoke( new Object [] { query } );

     XSPUtil util =  new XSPUtil();
     util.includeString( results, manager, contentHandler );
   }
   catch ( Exception e ) {
     <queryException>
     <xsp:expr> e </xsp:expr>
     </queryException>
   }
   
   </xsp:logic>

   </agtemplate>

   <xsp:logic>
   private String constructQuery( String query,
                                  String e1, String op1, String v1,
                                  String sep,
                                  String e2, String op2, String v2) {
   <![CDATA[
     if ( query == null || query.equals( "" ) ) return null;

     String out = "<query><selectionSequence>";
     out = out + "<selection item='searchElements' itemOp='EQ' value='" +
                  query + "'/>";
     if ( op1 != null && !op1.equals( "" ) ) {
       out = out + "<selectionOp op='$and$' />"
                 + "<selection item='" + e1
                 + "' itemOp='" + op1
                 + "' value='" + v1 + "' />";
       if ( sep != null && !sep.equals( "" ) ) {
         out = out + "<selectionOp op='"+ sep +"'/>";
         out = out + "<selection item='"+ e2 +
                   "' itemOp='" + op2 + "' value='"+ v2 + "'/>";
       }
     }
     out = out + "</selectionSequence></query>";
   ]]>
//     XSPUtil util =  new XSPUtil();
//     util.includeString( out, manager, contentHandler );
     return out;
   }
   </xsp:logic>
</xsp:page>
