<?xml version="1.0"?>

<xsp:page language="java"
   xmlns:xsp="http://apache.org/xsp"
   xmlns:xsp-request="http://apache.org/xsp/request/2.0">
     
<xsp:comment>

   Astrogrid Registry Update Portal using Cocoon.

   Author: Elizabeth Auden, Astrogrid, RAL.

</xsp:comment>

   <xsp:structure>

   <xsp:comment>Axis SOAP stuff</xsp:comment>
      <xsp:include>org.apache.axis.client.Call</xsp:include>
      <xsp:include>org.apache.axis.client.Service</xsp:include>
      <xsp:include>org.apache.axis.encoding.XMLType</xsp:include>
      <xsp:include>javax.xml.namespace.QName</xsp:include>
      <xsp:include>javax.xml.rpc.ParameterMode</xsp:include>

   <xsp:comment>Cocoon stuff</xsp:comment>
      <xsp:include>org.apache.cocoon.components.language.markup.xsp.XSPUtil</xsp:include>

   <xsp:comment>Java stuff</xsp:comment>
      <xsp:include>java.util.Vector</xsp:include>

   </xsp:structure>

   <xsp:logic>

// Web service stuff

//  Global variables
   String querytype = null;
   String webserver = null;
   String username = null;
   String certificate = null;

//  Query parameters

   Vector items = new Vector();
   Vector values = new Vector();

   String site = null;
   String service = null;
   String webservice = "RegistryAdminService";
   String actiontype = null;
   final String METHOD = "adminQuery";

   String query = null;   
   String adminQuery = null;   
   String results = null;   
   </xsp:logic>

<agtemplate title="Registry Administration Service" help="agregistryhelp.html">

   <xsp:logic>
      webserver = <xsp-request:get-parameter name='WebServer' as='string'/>;
      username = <xsp-request:get-parameter name='User' as='string'/>;
      certificate = <xsp-request:get-parameter name='Certificate' as='string'/>;
      actiontype = add;
      site = webserver;

      service = "http:" + site.substring(5) + "/axis/services/"+ webservice;
      site = site.substring(7);

      <debug>Webserver: <xsp:expr>webserver</xsp:expr></debug>
      <debug>Username: <xsp:expr>username</xsp:expr></debug>
      <debug>Certificate: <xsp:expr>certificate</xsp:expr></debug>

      <p>User Name: <strong><xsp:expr>username</xsp:expr> </strong></p>
      <p>Certificate: <strong><xsp:expr>certificate</xsp:expr> </strong></p>
      <p>Web Server: <strong><xsp:expr>site</xsp:expr> </strong></p>

      <hr/>

      <xsp:logic>
      if ( actiontype.equals( "Add" ) ) {
      <form method='POST' action='add.xsp'>

         <input type='SUBMIT' name='Add' value='Add this resource'/>
         <input type='RESET'/>
      <h2> IDENTITY </h2>
         <table>
         <tr><td> title: </td>
             <td><input name='title' type='TEXT'/></td></tr>
         <tr><td> shortName: </td>
             <td><input name='shortName' type='TEXT'/></td></tr>
         <tr><td> Identifier: </td>
             <td><input name='Identifier' type='TEXT'/></td></tr>
         </table>
      <h2> CURATION </h2>
         <table>
         <tr><td>publisher: </td>
             <td><input name='publisher' type='TEXT'/></td></tr>
         <tr><td>publisherID: </td>
             <td><input name='publisherID' type='TEXT'/></td></tr>
         <tr><td>creator: </td>
             <td><input name='creator' type='TEXT'/></td></tr>
         <tr><td>creatorLogo: </td>
             <td><input name='creatorLogo' type='TEXT'/></td></tr>
         <tr><td>creator: </td>
             <td><input name='creator' type='TEXT'/></td></tr>
         <tr><td><strong>Subject</strong></td></tr>
         <tr><td>keywords: </td>
             <td><input name='keywords' type='TEXT'/></td></tr>
         <tr><td><strong>Description</strong></td></tr>
         <tr><td>abstract: </td>
             <td><input name='abstact' type='TEXT'/></td></tr>
         <tr><td>README: </td>
             <td><input name='readme' type='TEXT'/></td></tr>
         </table>
      </form>
      } else {
// Get parameters from form
         querytype = <xsp-request:get-parameter name="QueryType"/>;
         if ( querytype == null ) querytype = "identity";
         webserver = <xsp-request:get-parameter name="WebServer"/>;
//         webservice = <xsp-request:get-parameter name="Service"/>;
//         if ( webservice == null ) webservice = "RegistryInterface";
         element1 = <xsp-request:get-parameter name="Element1"/>;
         op1 = <xsp-request:get-parameter name="Operator1"/>;
         value1 = <xsp-request:get-parameter name="Value1"/>;
         seperator = <xsp-request:get-parameter name="Seperator1"/>;
         element2 = <xsp-request:get-parameter name="Element2"/>;
         op2 = <xsp-request:get-parameter name="Operator2"/>;
         value2 = <xsp-request:get-parameter name="Value2"/>;

// Construct the Query
         query = constructQuery( querytype, element1, op1, value1,
                                 seperator, element2, op2, value2 );   
         adminQuery = constructAdminQuery(certificate, actiontype, query);

// Call the Webserver

         try {
           Service axis = new Service();
           Call call = (Call) axis.createCall();
           call.setTargetEndpointAddress( new java.net.URL( service ) );
           if ( soapservice == null ) {
              call.setOperationName( METHOD );
           }
           else {
              call.setOperationName( new QName( soapservice, METHOD ) );
           }

           call.removeAllParameters( );
           call.addParameter( "usecase", XMLType.XSD_STRING, ParameterMode.IN );
           call.setReturnType( XMLType.XSD_STRING );
           results = (String) call.invoke( new Object [] { query } );
         }
         catch ( Exception e ) {
           <queryException>
           <xsp:expr> e </xsp:expr>
           </queryException>
         }
   
         if ( actiontype.equals( "Edit" ) ) {
            <![CDATA[
            results = "<edit>" + results + "</edit>";
            ]]>
// Now print thte results to the output
            XSPUtil util =  new XSPUtil();
            util.includeString( results, manager, contentHandler );
         } else if ( actiontype.equals( "Delete" ) ) {
            <![CDATA[
            results = "<delete>" + results + "</delete>";
            ]]>
// Now print thte results to the output
            XSPUtil util =  new XSPUtil();
            util.includeString( results, manager, contentHandler );
         } else {
            <p>Invalid Function</p>
         }
      }
      </xsp:logic>
   </xsp:logic>

</agtemplate>

   <xsp:logic>
   private String constructQuery( String query,
                                  String e1, String op1, String v1,
                                  String sep,
                                  String e2, String op2, String v2) {

     <![CDATA[
     if ( query == null || query.equals( "" ) ) return null;
     String out = "<query> <selectionSequence>";
     out = out + "<selection item='searchElements'"
               + " itemOp='EQ' value='" + query + "'/>";
     if ( op1 != null && !op1.equals( "" ) ) {
       out = out + "<selectionOp op='$and$'/>"
                 + "<selection item='" + e1 + "'"
                 + " itemOp='" + op1 + "'"
                 + " value='" + v1 + "'/>";
       if ( sep != null && !sep.equals( "" ) ) {
         out = out + "<selectionOp op='"+ sep +"'/>"
                   + "<selection item='"+ e2 + "'"
                   + " itemOp='" + op2 + "'"
                   + " value='"+ v2 + "'/>";
       }
     }
     out = out + "</selectionSequence> </query>";
     ]]>
// Uncomment this to print the Query to the Screen
//     XSPUtil util =  new XSPUtil();
//     util.includeString( out, manager, contentHandler );
     return out;
   }

   private String constructAdminQuery( String certificate,
                 String actiontype, String query) {

     <![CDATA[
     if ( query == null || query.equals( "" ) ) return null;
     if ( certificate == null || certificate.equals( "" ) ) return null;
     if ( actiontype == null || actiontype.equals( "" ) ) return null;

     String out = "<registryAdminQuery><certificate>";
     out = out + certificate + "</certificate>";
     out = out + "<adminAction>" + actiontype + "</adminAction>";
     out = out + query + "</registryAdminQuery>";
     ]]>
// Uncomment this to print the Query to the Screen
//     XSPUtil util =  new XSPUtil();
//     util.includeString( out, manager, contentHandler );
     return out;
   }

   </xsp:logic>
</xsp:page>
