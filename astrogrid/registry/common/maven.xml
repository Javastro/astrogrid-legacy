<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid registry common component.
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
    xmlns:astro="org.astrogrid.maven"
    >

    <!--+
        | Primary goals are :
        |     clean
        |     install-artifact
        |     install-snapshot
        |     site
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>
    
	<property name="generated.src" location="${basedir}/src/java" />
	<property name="generated.dir" location="${basedir}/src" />
    

    <!--+
        | Import our plugin goals from our parent project.
        | Looks like this gets included anyway ...
        | Possibly because our project inherits from ../maven.project.xml ?
        | Plus, this fails for unknown reason when I ran it on another machine ....
        | Maven : Any more unexpected suprises !?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Reactor goals.
        | These are just placeholder targets for the reactor to call.
        +-->

    <!--+
        | Clean our build target.
        | (required as a target goal for the reactor)
        +-->
    <goal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Cleaning build target ...."/>
        <attainGoal name="clean:clean"/>
    </goal>

    <!--+
        | Build and install our component jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="install-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building component artifact ...."/>
        <attainGoal name="jar:install"/>
    </goal>

    <!--+
        | Build and install our snapshot jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="install-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building snapshot artifact ...."/>
        <attainGoal name="jar:install-snapshot"/>
    </goal>

    <!--+
        | Deploy our snapshot jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="deploy-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Deploying snapshot artifact ...."/>
        <attainGoal name="jar:deploy-snapshot"/>
    </goal>
    
    <goal name="astrogrid-deploy-snapshot">
    	<attainGoal name="deploy-snapshot" />
    </goal>
    

    <!--+
        | Build our project website.
        | (required as a target goal for the reactor)
        +-->
    <goal name="site">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building project site ...."/>
        <attainGoal name="site:generate"/>
    </goal>

    <!--+
        | Generate a clover report for our project.
        | (required as a target goal for the reactor)
        +-->
    <goal name="clover-report">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Generating clover report ...."/>
        <attainGoal name="maven-clover-plugin:report"/>
    </goal>


	<preGoal name="java:compile">

	     <mkdir dir="${basedir}/target/classes" />  
		<attainGoal name="run-castor" />

	</preGoal>    

	
    
	<goal name="run-castor" description="generate classes from schema using castor" prereqs="castor-cleanout,castor-generate"/>
	
	<goal name="castor-cleanout">
	    <delete>
	    	<fileset dir="${generated.src}">
	        	<include name="org/astrogrid/registry/beans/**/*.java" />
	        </fileset>
		</delete>
	</goal>
	    
	<goal name="castor-generate">
    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/VOResource-v0.9.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>


    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/VOCommunity-v0.2.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>

    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/VORegistry-v0.2.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>

    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/VODataService-v0.4.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>

    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/ConeSearch-v0.2.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>

    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/SIA-v0.6.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>


    	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" classpathref="maven.dependency.classpath">
        	<classpath>
            	<pathelement location="${basedir}/build" />
                <path refid="maven.dependency.classpath" />
            </classpath>
            <arg value="-i"/>
            <arg file="${basedir}/../schema/VOTable.xsd" />
            <arg value="-binding-file" />
            <arg file="${basedir}/build/castor-binding.xml" />
            <arg value="-dest" />
            <arg file="${generated.src}" />
            <arg value="-verbose" />
            <arg value="-types"/>
            <arg value="arraylist"/>
        </java>

  </goal>
    
    
    

</project>
