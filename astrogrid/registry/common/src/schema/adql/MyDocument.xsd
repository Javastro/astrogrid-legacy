<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Ed Shaya (NASA) -->
<!-- Personalized document schema. Showing how user
     can create inheriting schema that has both new elements/structure
     and elements which are quantities. This particular
     schema inherits only from BasicQuantity schema, so more
     advanced types of quantities arent allowed.
  -->
<xsd:schema targetNamespace="http://noplace.org/MyDocument" xmlns="http://noplace.org/MyDocument" xmlns:q="http://ivoa.org/Quantity" xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xsd:import namespace="http://ivoa.org/Quantity" schemaLocation="Ellipse.xsd"/>
	<!-- some new directly-inheriting quantity element declarations -->
	<xsd:element name="Myquantity" type="q:basicQuantityType" substitutionGroup="q:QuantityGroup"/>
	<xsd:element name="Mytq" type="q:trivialQuantityType" substitutionGroup="q:QuantityGroup"/>
	<xsd:element name="Note" type="q:trivialQuantityType" substitutionGroup="q:QuantityGroup"/>
	<xsd:element name="Ellipse" type="q:ellipseType" substitutionGroup="q:QuantityGroup"/>
	<!-- now, an element which is NOT a quantity, but aggregates (a few selected types)
             of them -->
	<xsd:complexType name="myElementType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element ref="Myquantity"/>
			<xsd:element ref="Mytq"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- my document -->
	<xsd:complexType name="myDocumentType">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element ref="q:QuantityGroup"/>
			<xsd:element name="MyElement" type="myElementType" maxOccurs="unbounded"/>
		</xsd:choice>
	</xsd:complexType>
	<!-- root element of my document -->
	<xsd:element name="Mydocument" type="myDocumentType"/>
</xsd:schema>
