<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven project description for the AstroGrid registry server.
    |
    +-->
<project
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="maven-project.xsd">

    <!--+
        | Extend the common project descriptor.
        +-->
    <extend>../maven/project.xml</extend>

    <!--+
        | The current version of the Maven project descriptor.
        +-->
    <pomVersion>3</pomVersion>

    <!--+
        | The short name of the project.
        | This is used when naming jars and distribution files.
        +-->
    <id>astrogrid-registry-server</id>

    <!--+
        | The full name of the project.
        | This is used when generating JavaDoc titles.
        +-->
    <name>AstroGrid registry server</name>

    <!--+
        | The Java package name of the project.
        | This value is used when generating JavaDoc.
        +-->
    <package>org.astrogrid.registry.server</package>

    <!--+
        | A short description of the project.
        | The short description should be limited to a single line.
        +-->
    <shortDescription>
        Astrogrid Registry classes used on the server side
    </shortDescription>

    <!--+
        | A detailed description of the project.
        | This is used to generate the front page of the projects web site. 
        +-->
    <description>
        <![CDATA[
	<p>
		The Server area takes in request from a web service and does various tasks on the Registry.  Currently the Registry
		information is stored in a flat file, but will soon be using an XMLDB of eXist.
		See <a href="exist.sourceforge.net">eXist</a>
		<br />
	</p>
	<section name="Interface">
		<p>
				Web Service Interface methods:
			<ul>
				<li>update(Resource schema) - updates the Registry with one to many Resources.</li>
				<li>harvestFrom(date) - return all resource information modified from a particular date.</li>
				<li>havest() - return all resource information.</li>
				<li>submitQuery - Query for entries based on a particular criteria.</li>
				<li>harvestResource - Registers a resource entry into the db and performs a harvest on that entry if possible.</li>
				<li>loadRegistry() - just returns the Registry Resource metadata entry for this resource.</li>
			</ul>
		</p>
	</section>
	<section name="Builds">
		<p>
			The registry allows you to build at the top level or at it's sub-project level.  
			Here are the maven goals for building the registry.
			<ul>
				<li>clean - cleans out and removes all previous builds.</li>
				<li>install-snapshot - Builds all the necessry jar and war files.</li>
				<li>astrogrid-deploy-snapshot - Builds and deploys the snapshot onto the repository.</li>
				<li>astrogrid-deploy-site - Generates reports and documents to be deployed on the site repository.</li>
			</ul>
		</p>
	</section>
	<section name="Installation">
		<p>
			This only builds the server jar and is expected to be bundled up with a war file.  See the WebApp portion of
			the registry which bundles up the full server installation into a war file.
			After a build a jar file is produced in the "target"
			directory.  When ever it is bundled with another component, it is expected to have in the System properties or
			JNDI a key value of "org.astrogrid.config.url" pointing to a config file.  An example config file is given in
			cvs under the config directory.  Currently the config file requires pointing to a xml file which will be your
			registry, this will be factored out as we come online with the eXist XMLDB.
		</p>
	</section>	
		]]>        
    </description>

    <!--+
        | Our cvs repository location.
        +-->
    <repository>
        <connection>
            scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/registry/server
        </connection>
        <developerConnection>
            scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/registry/server
        </developerConnection>
    </repository>

    <!--+
        | The external libraries required to build our component.
        +-->
    <dependencies>
        <!--+
            | The Registry common components.
            +-->
        <dependency>
            <groupId>astrogrid-registry</groupId>
            <artifactId>astrogrid-registry-common</artifactId>
            <version>SNAPSHOT</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
        </dependency>
        
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-common</artifactId>
            <version>SNAPSHOT</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
        </dependency>
        
        <dependency>
        	<artifactId>commons-jxpath</artifactId>
            <groupId>commons-jxpath</groupId>
            <version>1.1</version>
        </dependency>
        
        <dependency>
        	<artifactId>jakarta-regexp</artifactId>
            <groupId>jakarta-regexp</groupId>
            <version>1.3</version>
        </dependency>
        
        
        <!-- required by castor -->
        <dependency>
            <artifactId>castor</artifactId>
            <groupId>castor</groupId>
            <version>0.9.5</version>
            <jar>castor-0.9.5-xml.jar</jar>
        </dependency>
        
       <dependency>
            <artifactId>commons-logging</artifactId>
            <groupId>commons-logging</groupId>
            <version>1.0.3</version>
        </dependency>
                
        <dependency>
        	<id>xerces</id>
            <version>2.4.0</version>
        </dependency>
        
        <dependency>
       		<id>xml-apis</id>
          	<version>1.0.b2</version>
        </dependency>
        
        
        <dependency>
            <artifactId>commons-discovery</artifactId>
            <groupId>commons-discovery</groupId>
            <version>20030211.213356</version>
        </dependency>        
        
        <dependency >
            <id>axis</id>
            <version>1.1</version>
        </dependency>
        
        <dependency>
           <id>jaxrpc</id>
           <version>unknown</version>
           <jar>jaxrpc.jar</jar>
        </dependency>

        <dependency>
           <id>saaj</id>
           <version>unknown</version>
           <jar>saaj.jar</jar>
        </dependency>
        
        <dependency>
            <id>ipsi</id>
            <version>1.0.2</version>
            <url>http://www.astrogrid.org/</url>
        </dependency>
        
    </dependencies>

    <!--+
        | The build properties for our project.
        +-->
    <build>
        <!--+
            | The location of our Java source code.
            +-->
        <sourceDirectory>src/java</sourceDirectory>
        <!--+
            | The location of our JUnit source code.
            +-->
        <unitTestSourceDirectory>src/junit</unitTestSourceDirectory>
        <!--+
            | Our JUnit test classes.
            +-->
        <unitTest>
            <!--+
                | Which tests to include.
                +-->
            <includes>
                <include>**/*Junit.java</include>
            </includes>

            <!--+
                | The resources for our tests.

            <resources>
                <resource>
                </resource>
                <resource>
                </resource>
            </resources>
            +-->
        </unitTest>
    </build>

</project>
