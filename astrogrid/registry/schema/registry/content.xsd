<?xml version="1.0" encoding="UTF-8"?>
<!-- CONTENT -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:include schemaLocation="http://www.astrogrid.org/schema/definitions.xsd"/>
    <!-- Elements -->
    <xs:element name="ucdList">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="ucd" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- Can ucd eventually be linked to a namespace e.g. maybe CDS will have one? For now we need just a list e.g. taken from CDS text list? 
-->
    <xs:element name="resourceType">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="archive"/>
                <xs:enumeration value="bibliography"/>
                <xs:enumeration value="catalogue"/>
                <xs:enumeration value="journal"/>
                <xs:enumeration value="library"/>
                <xs:enumeration value="simulation"/>
                <xs:enumeration value="survey"/>
                <xs:enumeration value="education"/>
                <xs:enumeration value="outreach"/>
                <xs:enumeration value="epoResource"/>
                <xs:enumeration value="animation"/>
                <xs:enumeration value="artwork"/>
                <xs:enumeration value="background"/>
                <xs:enumeration value="basicData"/>
                <xs:enumeration value="historical"/>
                <xs:enumeration value="photographic"/>
                <xs:enumeration value="press"/>
                <xs:enumeration value="organisation"/>
                <xs:enumeration value="project"/>
                <xs:enumeration value="integrated"/>
                <xs:enumeration value="nameresolver"/>
                <xs:enumeration value="community"/>
                <xs:enumeration value="mySpace"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <!-- sub-sub-... elements in coverageSpatial 
          see http://hea-www.harvard.edu/~arots/nvometa/SpaceTime.html
          In coordinateSeries the x-type is given first, e.g. RA, Galactic longitude, 
          followed by the y-type (so polygon is x1,y1,x2,y2 etc.)
          or the major axis, minor axis, position angle of an ellipse.
          Where relevant, e.g. position angle, measurements are made counter-
          clockwise from North, and/or in the order given (Sector).
          All measurements are in degrees - this can be one of at least three things: 
          - the position of e.g.a polygon corner in the cframe coordinates
          - an angular separation on the sky e.g. major axis
          - a position angle e.g. for ellipse
-->
    <!--   box now subsumed into polygon, circle into ellipse -->
    <xs:element name="coordinatePair">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="coordinate" type="myFloat"/>
                <xs:element name="coordinate" type="myFloat"/>
            </xs:sequence>
            <xs:attribute ref="unitAngle" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ellipseParams">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="coordinate" type="myFloat"/>
                <xs:element name="coordinate" type="myFloat"/>
                <xs:element name="coordinate" type="myFloat"/>
            </xs:sequence>
            <xs:attribute ref="unitAngle" use="required"/>
        </xs:complexType>
    </xs:element>
    <!-- ellipse incl. circle -->
    <xs:element name="ellipse">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cframe"/>
                <xs:element ref="coordinatePair"/>
                <xs:element ref="ellipseParams"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- polygon -->
    <xs:element name="polygon">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cframe"/>
                <xs:element ref="coordinatePair"/>
                <xs:element ref="coordinatePair"/>
                <xs:element maxOccurs="unbounded" ref="coordinatePair"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- sector (open-ended wedge) -->
    <xs:element name="sector">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cframe"/>
                <xs:element ref="coordinatePair"/>
                <xs:element ref="coordinatePair"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- healpix -->
    <xs:element name="healpix">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="cframe"/>
                <xs:element maxOccurs="12" name="healpixNo" type="myFloat"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- sub-elements in coverageSpatial -->
    <xs:element name="regionSpatial">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ellipse"/>
                <xs:element ref="polygon"/>
                <xs:element ref="sector"/>
                <xs:element ref="healpix"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="cframeType">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="ICRS"/>
                <xs:enumeration value="FK5"/>
                <xs:enumeration value="FK4"/>
                <xs:enumeration value="GAL"/>
                <xs:enumeration value="SGAL"/>
                <xs:enumeration value="unknown"/>
                <xs:enumeration value="notApplicable"/>
                <xs:enumeration value="notProvided"/>
                <xs:enumeration value=""/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="cframe">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="5" ref="cframeType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- spatial coverage top level -->
    <xs:element name="regionOfRegard">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="myFloat">
                    <xs:attribute ref="unitAngle" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="coverageSpatial">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="regionSpatial"/>
                <xs:element ref="cframe"/>
                <xs:element ref="regionOfRegard"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- coverageSpectral -->
    <xs:element name="coverageSpectralWaveband">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="radio"/>
                <xs:enumeration value="mmWave"/>
                <xs:enumeration value="infrared"/>
                <xs:enumeration value="optical"/>
                <xs:enumeration value="uv"/>
                <xs:enumeration value="euv"/>
                <xs:enumeration value="xRay"/>
                <xs:enumeration value="gammaRay"/>
                <xs:enumeration value="unknown"/>
                <xs:enumeration value="notApplicable"/>
                <xs:enumeration value="notProvided"/>
                <xs:enumeration value=""/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="coverageSpectralBandpass" type="xs:string"/>
    <xs:element name="coverageSpectralRegion">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="coverageSpectralWaveband"/>
                <xs:element maxOccurs="unbounded" ref="coverageSpectralBandpass"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="coverageSpectralWavelengthRange">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="coverageSpectralCentralWavelength" type="myFloat"/>
                <xs:element name="coverageSpectralWavelengthShort" type="myFloat"/>
                <xs:element name="coverageSpectralWavelengthLong" type="myFloat"/>
            </xs:sequence>
            <xs:attribute ref="unitSpectral" use="required"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="coverageSpectral">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="8" ref="coverageSpectralRegion"/>
                <xs:element ref="coverageSpectralWavelengthRange"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- coverageTemporal -->
    <xs:element name="coverageTemporal">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="coverageTemporalStartTime" type="myDateTime"/>
                <xs:element name="coverageTemporalStopTime" type="myDateTime"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- coverage flux density -->
    <xs:element name="coverageDepth">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attributeGroup ref="fluxUnits"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <!-- object density etc -->
    <xs:element name="coverageObjectDensity">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="myFloat">
                    <xs:attribute ref="unitSpatialDensity" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <!-- coverage -->
    <xs:element name="coverage">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="coverageSpatial"/>
                <xs:element ref="coverageSpectral"/>
                <xs:element ref="coverageTemporal"/>
                <xs:element maxOccurs="2" ref="coverageDepth"/>
                <xs:element ref="coverageObjectDensity"/>
                <xs:element name="coverageObjectCount" type="myFloat"/>
                <xs:element name="coverageSkyFraction" type="myFloatFraction"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- resolution -->
    <xs:element name="resolutionSpatial">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="myFloat">
                    <xs:attribute ref="unitAngle" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="resolutionSpectral">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="myFloat">
                    <xs:attribute ref="unitSpectralResolution" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="resolution">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="resolutionSpatial"/>
                <xs:element ref="resolutionSpectral"/>
                <xs:element name="resolutionTemporal" type="myDuration"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- dataQuality -->
    <xs:element name="photometryError">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attributeGroup ref="fluxUnits"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="astrometryError">
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="myFloat">
                    <xs:attribute ref="unitAngle" use="required"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="dataQuality">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="2" ref="photometryError"/>
                <xs:element ref="astrometryError"/>
                <xs:element name="timingError" type="myDuration"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="facility" type="xs:string"/>
    <xs:element name="facilityList">
    <xs:complexType>
    <xs:sequence>
    <xs:element maxOccurs="unbounded" ref="facility"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
 
   <xs:element name="instrument" type="xs:string"/>
    <xs:element name="instrumentType">
    <xs:complexType>
    <xs:sequence>
    <xs:element maxOccurs="unbounded" ref="instrument"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
 
 <!-- the rest.. -->
    <xs:element name="contentLevel">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="general"/>
                <xs:enumeration value="elementaryEducation"/>
                <xs:enumeration value="middleSchoolEducation"/>
                <xs:enumeration value="secondaryEducation"/>
                <xs:enumeration value="communityCollege"/>
                <xs:enumeration value="university"/>
                <xs:enumeration value="research"/>
                <xs:enumeration value="amateur"/>
                <xs:enumeration value="informalEducation"/>
                <xs:enumeration value="unknown"/>
                <xs:enumeration value="notApplicable"/>
                <xs:enumeration value="notAvailable"/>
                <xs:enumeration value=""/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="contentLevelType">
    <xs:complexType>
    <xs:sequence>
    <xs:element maxOccurs="10" ref="contentLevel"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
    <xs:element name="format">
        <!-- other to be removed when we can use a namespace to say that any
  MIME type as per  http://www.iana.org/assignments/media-types is allowed-->
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="application/fits"/>
                <xs:enumeration value="text/plain"/>
                <xs:enumeration value="text/html"/>
                <xs:enumeration value="text/xml"/>
                <xs:enumeration value="votable"/>
                <xs:enumeration value="image/gif"/>
                <xs:enumeration value="image/jpg"/>
                <xs:enumeration value="image/png"/>
                <xs:enumeration value="other"/>
                <xs:enumeration value="unknown"/>
                <xs:enumeration value="notApplicable"/>
                <xs:enumeration value="notAvailable"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
       
    <xs:element name="formatType">
    <xs:complexType>
    <xs:sequence>
    <xs:element maxOccurs="9" ref="format"/>
    </xs:sequence>
    </xs:complexType>
    </xs:element>
  
    <xs:element name="rights">
        <xs:simpleType>
            <xs:restriction base="xs:string">
                <xs:enumeration value="public"/>
                <xs:enumeration value="proprietary"/>
                <xs:enumeration value="mixed"/>
            </xs:restriction>
        </xs:simpleType>
    </xs:element>
    <xs:element name="status">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="status" type="xs:string"/>
                <xs:element maxOccurs="unbounded" name="details" type="xs:string"/>
                <xs:element name="currentDate" type="myDateTime"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="dataItemRecord">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="dataItemName" type="xs:string"/>
                <xs:element name="dataItemID" type="xs:string"/>
                <xs:element name="ownerID" type="xs:string"/>
                <xs:element name="creationDate" type="myDateTime"/>
                <xs:element name="expiryDate" type="myDateTime"/>
                <xs:element name="size" type="xs:string"/>
                <xs:element name="type" type="xs:string"/>
                <xs:element name="permissionsMask" type="xs:string"/>
                <xs:element name="dataHolderURI" type="xs:anyURI"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="dataItemRecords">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="dataItemRecord"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="resourceContentType">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="datasetContent"/>
                <xs:element ref="communityContent"/>
                <xs:element ref="mySpaceContent"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="datasetContent">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ucdList"/>
                <xs:element ref="coverage"/>
                <xs:element ref="resolution"/>
                <xs:element ref="dataQuality"/>
                <xs:element name="facilityList"/>
                <xs:element name="instrumentList"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="communityContent">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="mySpaceLocation" type="xs:anyURI"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="mySpaceContent">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="status"/>
                <xs:element ref="dataItemRecords"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="content">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="resourceType"/>
                <xs:element ref="contentLevelType"/>
                <xs:element ref="formatType"/>
                <xs:element ref="rights"/>
                <xs:element ref="resourceContentType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
</xs:schema>
