<?xml version="1.0"?>

<!--
  Name: astrogrid-messaging.xsd
  Desc: Define the contents of messages within the AstroGrid registry.
-->
<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://www.astrogrid.org/registry"
  xmlns="http://www.astrogrid.org/registry"
  elementFormDefault="qualified">
  
  <!-- ASTROGRID MESSAGES -->
  
  <!--
    AstroGrid messaging service accepts <message/> elements.
  -->
  <xs:element name="message" type="messageType"/>
  
  <!--
    Name: messageType
    Desc: Defines the <message/> elements that can be sent to the AstroGrid messaging service.
    Notes:
      - choice between ...
  -->
  <xs:complexType name="messageType">
    <xs:choice>
      <!--
        log and view log ...
      -->
      <xs:element name="log" type="logMessageType"/>
      <xs:element name="query-log" type="queryLogMessagesType"/>
      
      <!--
        enqueue and dequeue ...
      -->
      <xs:element name="queue" type="queueMessageType"/>
      <xs:element name="dequeue" type="dequeueMessageType"/>
      
      <!--
        start and stop asynchronous queue message callback ...
      -->
      <xs:element name="queue-callback-start" type="queueCallbackType"/>
      <xs:element name="queue-callback-stop" type="queueCallbackType"/>
    </xs:choice>
  </xs:complexType>

  <!-- ASTROGRID LOG MESSAGE TYPES -->
  
  <xs:element name="log-messages" type="logMessagesType"/>

  <xs:complexType name="logMessagesType">
    <xs:sequence>
      <xs:element name="log" type="logMessageType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--
    Name: logMessageType
    Desc: Defines what can be sent as a log message.
    
    Notes:
      - any XML content can be logged
      - for new content, extend logMessageContentType
  -->
  <xs:complexType name="logMessageType">
    <xs:sequence>
      <xs:element name="sourceAddress" type="xs:anyURI"/>
      <xs:element name="destinationAddress" type="xs:anyURI"/>
      <xs:element name="replyAddress" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="timestamp" type="xs:dateTime"/>
      <xs:element name="priority" type="xs:positiveInteger" minOccurs="0"/>
      <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="subject" type="xs:string"/>
      <xs:element name="content" type="logMessageContentType"/>
    </xs:sequence>
  </xs:complexType>
  
  <!--
    Name: logMessageContentType
    Desc: Defines the content of a log message.
  -->
  <xs:complexType name="logMessageContentType">
    <xs:sequence>
      <xs:element name="paragraph" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--
    Name: queryLogMessagesType
    Desc: Fetch log messages using the given XPath query string.
  -->
  <xs:complexType name="queryLogMessagesType">
    <xs:attribute name="query" type="xs:string" use="required"/>
  </xs:complexType>

  <!-- ASTROGRID QUEUE MESSAGE TYPES -->
  
  <xs:element name="queue-messages" type="queueMessagesType"/>

  <xs:complexType name="queueMessagesType">
    <xs:sequence>
      <xs:element name="queue" type="queueMessageType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  
  <!--
    Name: queueMessageType
    Desc: Defines the content of a queue message destined for the given queue name.
    
    Notes:
      - any XML content can be enqueued
      - for new content, extend queueMessageContentType
  -->
  <xs:complexType name="queueMessageType">
    <xs:sequence>
      <xs:element name="sourceAddress" type="xs:anyURI"/>
      <xs:element name="replyAddress" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="content" type="queueMessageContentType"/>
    </xs:sequence>
    <xs:attribute name="queue-name" type="xs:string" use="required"/>
  </xs:complexType>

  <!--
    Name: queueMessageContentType
    Desc: Defines the content of a queue message.
  -->
  <xs:complexType name="queueMessageContentType">
    <xs:sequence>
      <xs:element name="paragraph" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <!--
    Name: dequeueMessageType
    Desc: Fetch next message from the given queue name.
  -->
  <xs:complexType name="dequeueMessageType">
    <xs:attribute name="queue-name" type="xs:string" use="required"/>
  </xs:complexType>
  
  <!--
    Name: queueCallbackType
    Desc: Defines what a client must supply to start/stop asynchronous callbacks.
    
    Notes:
      - <client-tag/> allows the client to add a name extension to ensure uniqueness
  -->
  <xs:complexType name="queueCallbackType">
    <xs:sequence>
      <xs:element name="end-point" type="xs:anyURI"/>
      <xs:element name="port-name" type="xs:QName" minOccurs="0"/>
      <xs:element name="operation-name" type="xs:QName"/>
      <xs:element name="return-type" type="xs:QName" minOccurs="0"/>
      <xs:element name="style" type="xs:string" minOccurs="0"/>
      <xs:element name="use" type="xs:string" minOccurs="0"/>
      <xs:element name="client-tag" type="xs:string" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="queue-name" type="xs:string"/>
  </xs:complexType>

</xs:schema>
