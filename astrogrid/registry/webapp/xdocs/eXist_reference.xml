<?xml version="1.0" encoding="ISO-8859-1" ?>
<document>
    <properties>
        <title>eXist Reference</title>
    </properties>
    <body>
    <section name="eXist and other uses with Registry">
      <p>
		eXist is a native XML database used by the registry to store its metadata in a xml format and to peform XQuery operations to retrieve the metadata.
 You can find all the information about exist <a href="http://exist.sourceforge.net/">here</a>.  Below you will find sections about 
 information about eXist and how it works with the Registry.
      </p>
	  <subsection name="The data directory and conf file">
		<p>
			I thought this deserved a special section to make attention to this small fact.  eXist stores all its information in a directory
called "data".  In embed mode you will find it in the {context name}/WEB-INF/data.  In external it is the same WEB-INF/data.  It can sometimes
be advisable to make a backup of this directory ever now and then.  No matter how badly something happens to eXist restoring this directory will put
everything correct again.<br />
			Also eXist gets its settings from a file called "conf.xml" normally you will rarely go into this file, but if need be you might
wish to read it and tweak it.
		</p>
	  </subsection>
	  <subsection name="Making backups and restores">
		<p>
			As noted  in the above section backing up the data directory is a good way to do backups, but it is still possible you might get the binary files
corruped in some way.  In the WEB-INF directory you will find a backupandrestore executable.  Look at the top of the executable to see how to run the file.  This
will allow you to create the raw xml files as backup and restore them later if necessary.  
		Typical procedure with eXist embedded with the registry:
		<br />
			<ul>
				<li>set a EXIST_HOME variable to the location of your conf.xml file</li>
						<li>
				Run this command for backups script located in webapps/{context}/WEB-INF directory:<br />
               "backupandrestore.{bat/sh} -d {backupdirectory} -u admin -b /db  -ouri=xmldb:exist://"
			</li>
			<li>
			   Run this command for restores:<br />
               "backupandrestore.{bat/sh} -r {backupdirectory}/db/__contents__.xml -u admin -ouri=xmldb:exist://"
			</li>
		    </ul>
		  If your using an external eXist then you will find a backup.{bat/sh} in the /bin directory of your eXist install which takes the same
          parameters as above.
		</p>
	  </subsection>
      <subsection name="Increasing memorry">
		<p>
			If your going to be a full registry then you will most likely need to increase your memorry, otherwise either eXist or Registry webapp may get OutOfMemorry errors.
            Even on a small publishing registry with eXist embedded in the webapp, if your tomcat is running on default 64m you may experience OutOfMemorry errors.<br />
            I would advise for full registries to be at 512m and small publishing registries to be anything above 128m.<br />
            **To do this in embed/internal mode, then you just need to give your servlet/j2ee container more memorry.  For tomcat you can do this by setting the CATALINA_OPTS variable to "-Xmx128m" or "-Xmx512m" if your a full registry<br />
            **In the external eXist case you would only need to change if your going to be a full registry; in which case you look at startup.bat or startup.sh file in the bin directory and change its default setting for JAVA_OPTS to have a -Xmx=512m instead of 128 like it has.
		</p>
	  </subsection>
      <subsection name="eXist embedded (Moving your Data Out)">
      <p>
		By default eXist is embedded into the registry web application meaning you don't have to download it or setup any settings.  The Registry
 already has all the necessary libraries to run eXist.  The default of the registry though puts all the information (xml data storate) inside the webapp and
 this in general is not good and is recommended to change because of upgrading or undeploying of the registry would lose the data.  
 You could of course make backups of the data directory and after doing an upgrade or deploy simply copy back over the data directory and restart your servlet/j2ee container.  
 But there is a easier way to make settings use a different directory to store your data:
		<ul>
			<li>Create some other direcotry not under tomcat of where you would like your data to be stored for eXist.</li>
            <li>Copy the conf.xml, and the whole "data" directory from your {context name}/WEB-INF directory and the whole "lib" directory. So inside your directory you should now have conf.xml, data {directory}, lib {directory}.</li>
            <li>Optionally if this is a brand new registry and your not able to get at your directory because the servlet container did not unpack the war then you can download an empty or
                full registry at <a href='http://www.astrogrid.org/maven/org.astrogrid/zips'>Zip Directory</a> with the name astrogrid-registry-xmldb_exist-{version relase}.zip or -full.zip may be encountered.
			</li>
			<li>Using the tomcat Administration GUI or other ways of changing JNDI env entries, go and change the "reg.custom.exist.configuration" property and point to this directory plus conf.xml ex: /exist/db/conf.xml.</li>
			<li>Be sure to hit "save" then hit "commit changes" if you used the Administration GUI.</li>
			<li>That is all you, now when data is being stored it is using this new data directory, be sure during upgrades to set that property to your directory.  Also note "Windows" OS users "may" need to escape there slashes ex: c:\\existstore.</li>
		</ul>		
      </p>
      </subsection>
      <subsection name="eXist external">
      <p>
		If you think you might use eXist for other tasks or wish to play with some of its other features you can do through the web browser.  Then
 		you may download it from <a href="http://exist.sourceforge.net/">here</a>.  But there are a few settings you may wish to do.<br />
	  </p>
	  <p>
	Changing default port: By default eXist runs on port 8080 through jetty. You may wish to change that port number.  This can be found in the tools/jetty/etc/jetty.xml file to change the port number.
	</p>
    <p>
		<strong>You must do this:</strong>
        Go into your Tomcat Administration GUI or where ever you change the JNDI and change the xmldb.uri to the proper uri.  For exist on port 9080 on the same machine it would be: "xmldb:exist://localhost:9080/exist/xmlrpc"
    </p>
      </subsection>
      <subsection name="Running the client">
        <br />
		<p>
			eXist has a nice client ability in case you really need to dig into the database itself.  Such as inspecting the xml more closely, admin the documents more, run special xqueries, do backups. Normally most of 
these functions are available through the registry jsp pages, but it can be nicer to have a look at the eXist db if needed. <br/>
       <br />
			Just like the backup and restore there is an executable file called "client" in the WEB-INF directory.  Read the 
top of that file to see how it works. Typical procedure:<br />
		<ul>
			<li> Go to your tomcat/WEB-INF </li>
			<li> run "client.{bat/sh}" (you may add a "-s" for shell mode and "-ouri={location}" see below for location syntax)</li>
			<li> This will show you a login box.  User by default is admin with no password.</li>
			<li> The type it seems needs to be "Remote" for Windows users because of a locking problem, linux or mac can do local.</li>
			<li> For location on Windows: needs to use the rpc servlet ex: xmldb:exist://localhost:8080/{context_name}/xmlrpc</li>
			<li> For Location on Linux/Mac: you can use xmldb:exist://</li>
		</ul>
      <br />
      * See <a href="http://exist.sourceforge.net/client.html">Exist Client Docs for any other info on the client</a>
      <br />
	  </p>
	  </subsection>
      <subsection name="Setting up users and passwords">
		<p>
		In general I recommend to use the default settings for users and passwords in embed mode and usually the same for external eXist mode just have eXist on a non-public url (where by it can only be seen by the registry webapp).  But you may wish to
have more strict settings on this, the registry webapp can cope with this if you desire.  First it will be up to you to setup users and passwords through the client, see above section.  Also advise reading the eXist webpage dealing with users.  Finally 
 the JNDI properties that needs to be changed on how you setup users in the eXist database.  You will see xmldb.admin.user, xmldb.admin.password, xmldb.query.user, xmldb.query.password that are available for setting.  See the client section above for starting the client and setting users and passwords for the database.
		</p>
	  </subsection>
	  <subsection name="WebDav">
		<p>
			Recently added to the registry is the ability to connect to your database via WebDav.  Which allows you to view your database through file manager
like a network directory.  This has tremendous advantages having other xml/text editors manipulate entries, delete, or even add xml entries.
			<br />**Note -- if adding xml files this way you need to have the right filename and see other xml content on the actual structure of the xml.
			<br />
			WebDav has huge advantages, but also security concerns.  Because of this a JNDI environement entry named: "reg.custom.restrict.ipaddresses"
            is used to restrict ip addresses that can access webdav, it can use expressions 127.0* if needed.  By default it is set to localhost or 127.0.0.1<br />
            See: <a href='http://wiki.exist-db.org/space/WebDAV'>WebDav for eXist (info mainly for Windows users)</a>
			<br />
			Linux konquoror: 
		</p>
	  </subsection>
    </section>
  </body>
</document>