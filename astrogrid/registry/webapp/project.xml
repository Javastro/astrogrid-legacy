<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven project description for the AstroGrid registry webapp.
    |
    +-->
<project
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="maven-project.xsd">

    <!--+
        | Extend the common project descriptor.
        +-->
    <extend>${basedir}/../maven/project.xml</extend>

    <!--+
        | The short name of the project.
        | This is used when naming jars and distribution files.
        +-->
    <id>astrogrid-registry</id>

    <!--+
        | The full name of the project.
        | This is used when generating JavaDoc titles.
        +-->
    <name>AstroGrid registry webapp</name>

    <!--+
        | A short description of the project.
        | The short description should be limited to a single line.
        +-->
    <shortDescription>
       Full War file installtion of the Registry.
    </shortDescription>

    <!--+
        | A detailed description of the project.
        | This is used to generate the front page of the projects web site. 
        +-->
    <description>
        <![CDATA[
	<p>
		This is the main project to build a war file for deployment and that can be just dropped into a server.  It bundles the Axis
    	web service toolkit along with all the necessary jar file dependencies such as astrogrid-registry-server.jar all into this
    	war file.  It also bundles together two servlets that handle the OAI and a harvest daemeon.  See the deployment section below
    	for configuring the registry.  The Registry is now more mulit-versioned where if necessary you can fairly easily by adding
    	properties have the registry handle more than one version.
	</p>
	<section name="Builds">
		<p>			
			Here are the maven goals for building the registry, it has a one extra goal compared to the other sub-projects.
			<ul>
				<li>astrogrid-clean - cleans out and removes all previous builds.</li>
				<li>astrogrid-install-snapshot - Builds all the necessry jar and war files for the snapshot.</li>
				<li>astrogrid-install-artifact - Builds all the necessry jar and war files for the artifact.</li>    	
				<li>astrogrid-deploy-snapshot - Builds and deploys the snapshot onto the repository.</li>
				<li>astrogrid-deploy-artifact - Builds and deploys the artifact onto the repository.</li>    	
				<li>astrogrid-deploy-site - Generates reports and documents to be deployed on the site repository.</li>
			</ul>
		</p>
	</section>
    <section name="More on the Servlets">
    	<p>
	    	<b>OAI</b> -- The toolkit used for this is the OAICat toolkit.  
    	    See the tools section under <a href="http://www.openarchives.org">OAI</a>.  
    		With a few modifications to this toolkit and extensions, the astrogrid servlet will 
    	    query the eXist xml database for all the resources managed by this registry.  Then with
    		xsl will transform it to a OAI xml, where it gives it to the OAICat toolkit for handling
    	    any of the OAI tasks such as certain verbs.  Modify the oaicat.properties file for the
    	    Identification verb. Location http://..../OAIHandlerv0_9
    		OAI verbs handled by astrogrid:
    	    <ul>
    			<li>Identify</li>
    			<li>ListRecords</li>
				<li>ResumeListRecords - resumptionTokens can be used, but expect not to</li>    	
    			<li>GetRecord</li>
    			<li>ListMetaDataFormats</li>
    			<li>ListIdentifiers</li>
    			<li>ResumeListIdentifiers - resumptionTokens can be used, but expect not to</li>
    		</ul>
    		<i>One final note in the web.xml file located in src/webapp you can define more OAI
    	       servlets to handle multiple versions by adding the param "registry.version"</i>
    		<br />
    		<b>Harvest Daemon</b> -- The harvest daemon will automatically kick off harvests or you may
    	    go to the servet web site to kick off manual harvests. Location http://..../RegistryHarvest
    	</p>
    </section>
   	<section name="eXist">
     	<p>
    		Registry uses an eXist xml database for storing and querying the resources of the Registry. 
    	    You can download eXist from <a href="http://exist.sourceforge.net">eXist website</a>. You can
    	    also download it from <a href="http://www.astrogrid.org/maven/exist">eXist from Astrogrid</a>
     	    For security purposes,
    	    it is better to install the eXist as a server installation on another port
    	    that is not accessible to outside computers, but still accessible to 
    	    the registry installation.  This is completely optional though, and for ease of installation 
    	    throughout astrogrid it is normally installed as a war file.<br />
    	    Changes to be made once eXist is installed:<br />
    	    See <a href="http://exist.sourceforge.net/configuration.html">Config for eXist</a>.  Change
    	    the cacheSize to something bigger if this is going to be a full Registry. 
    	    Finally set the match-tagging-elements and match-tagging-attributes to "no".  In Astrogrid
    	    these changes are already in place, but change the cacheSize to something more appropriate.
    	</p>
    	<p>
    		It is recommended to have the exist location end in "exist" hence http://server.com/exist is the location.  This
    	    is not required, but if you wish to view exist manually it can be easier.
    	</p>
    </section>
	<section name="Deployment/Installation">
		<p>			
    	   	Here we list the steps involved to deploy the registry (and eXist) onto a servlet container.  An 
    	   	assumption is made that you know basic knowledge of servlet containers such as tomcat.
    	   	Steps involved:
    	   	<ul>
    			<li>1.) Download the latest copy of astrogrid-registry from <a href="http://www.astrogrid.org/maven/org.astrogrid/wars/">Astrogrid repository</a>
    	            You may grab the latest copy as: <a href="http://www.astrogrid.org/maven/org.astrogrid/wars/astrogrid-registry-SNAPSHOT.war">Latest Registry</a></li>
    	        <li>2.) Also download the exist war <a href="http://www.astrogrid.org/maven/exist/wars/exist.war">here</a>
    	            <i>See exist section above for more available options</i></li>
    	        <li>3.) You may rename the registry war file to anything you like, it is advisable to keep the exist one as exist to use
    	            the cocoon features of browsing, but this is not required.</li>
    	        <li>4.) Deploy these 2 war files into your servlet containger normally by dropping them into the webapps directory or through
    	            some time of manager interface.</li>
    	        <li>5.) Finally go to the registry deployed area and go to "regdeployedarea"/WEB-INF/classes and edit the astrogrid.properties and
                    optionally if you are using the astrogrid oai facilities then the oaicat.properties.  The properties
                    files should be well commented to guide you, the main registry properties are below</li>
    	        <li>6.) Your done.  If you tried to use registry before editing the properties file then a restart of your
    	            servlet containger will be required.</li>
    	   	</ul>

    	    See the properties below, you may point to another OAI web based instance if you like.
    		<i>Below are the properties and examples from the registry-server documentation plus some additions for the servlets, 
    	       which are needed for the installation of the registry.</i>
		Currently the config file only requires properties:
		<ul>
		  <li>org.astrogrid.registry.authorityid - required, the main authority id for this registry. Should be the same authorityid used on the main Registry type Resource.</li>
		  <li>org.astrogrid.registry.version - required, a version number of the current main IVOA registry schema, slowly being factored out.</li>
		  <li>exist.db.url - required, eXist url property pointing to the root location of the eXist XML database.</li>
		  <li>exist.query.returncount - optional, the return count number (defaults to 25 if not given).</li>
		  <li>oai.servlet.url - required, the url to the servlet for the OAI, OAICat type servlet, Does not have to be a servlet could point to oai cgi,perl or other web based implementation.</li>
    	  <li>org.astrogrid.registry.harvest.daemon.interval-hours - required, for harvesting other registries, the time intervals for automatic harvests to be started.</li>
	  	  <li>registry.harvest.enabled - required, Does this registry do harvesting of other registries.</li>
	  	  <li>declare.namespace.0_9 - recommended, namespaces to be declared on the queries in xquery type form meaning seperated by ";"</li>
		  <li>keyword.query.path.0_9 - required, the xpaths to elements to be used on the keyword search comma seperated.</li>
  	      <li>identifier.path.hasauthorityid.0_9 - required, is the key (identifier) split up, normally only 0_9 will be true
  	  </li>
		</ul>
		Example of config properties:
		<ul>
		  <li>org.astrogrid.registry.authorityid=org.astrogrid.leicester</li>
		  <li>exist.db.url=http://localhost:8080/exist</li>
		  <li>exist.query.returncount=25</li>
		  <li>oai.servlet.url=http://server.com:8080/astrogrid-registry-real/OAIHandlerv0_9</li>
	      <li>org.astrogrid.registry.version=0_9</li>
    	  <li>org.astrogrid.registry.harvest.daemon.interval-hours=1</li>
	  	  <li>registry.harvest.enabled=true required, Does this registry do harvesting of other registries.</li>
	  	  <li>registry.harvest.onload - optional, Start a harvest when servlet container starts.  Recommend false.</li>
	  	  <li>declare.namespace.0_9=declare namespace vr = "http://www.ivoa.net/xml/VOResource/v0.9"; declare namespace vc = "http://www.ivoa.net/xml/VOCommunity/v0.2"; declare namespace vg = "http://www.ivoa.net/xml/VORegistry/v0.2"; declare namespace vs = "http://www.ivoa.net/xml/VODataService/v0.4"; declare namespace vt = "http://www.ivoa.net/xml/VOTable/v0.1"; declare namespace cs = "http://www.ivoa.net/xml/ConeSearch/v0.2"; declare namespace sia = "http://www.ivoa.net/xml/SIA/v0.6"; declare namespace cea="http://www.ivoa.net/xml/CEAService/v0.1"; declare namespace ceapd="http://www.astrogrid.org/schema/AGParameterDefinition/v1";</li>
		  <li>keyword.query.path.0_9=vr:Summary/vr:Description, vr:Title, vr:Subject</li>
	      <li>identifier.path.hasauthorityid.0_9=true</li>
		</ul>
		</p>
	</section>
		]]>        
    </description>

    <!--+
        | Our cvs repository location.
        +-->
    <repository>
        <connection>
            scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/registry/webapp
        </connection>
        <developerConnection>
            scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/registry/webapp
        </developerConnection>
    </repository>

    <!--+
        | The external libraries required to build our component.
        +-->
    <dependencies>
    
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-common</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
            <url>http://www.astrogrid.org/</url>
        </dependency>
    
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-registry-common</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!--+
            | The Registry server components.
            +-->
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-registry-server</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-exist-server</artifactId>
	        <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
        </dependency>
        
        
        <dependency>
        	<artifactId>commons-jxpath</artifactId>
            <groupId>commons-jxpath</groupId>
            <version>1.1</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
        
        <dependency>
        	<artifactId>jakarta-regexp</artifactId>
            <groupId>jakarta-regexp</groupId>
            <version>1.3</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
               
        <!-- required by castor -->
        <dependency>
            <artifactId>castor</artifactId>
            <groupId>castor</groupId>
            <version>0.9.5</version>
            <jar>castor-0.9.5-xml.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
                        
        <dependency>
        	<id>xerces</id>
            <version>2.4.0</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>
        </dependency>
        
        <dependency>
       		<id>xml-apis</id>
          	<version>1.0.b2</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>
        </dependency>
        
       <dependency>
            <artifactId>exist</artifactId>
            <groupId>exist</groupId>
            <version>1.0b1</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>

        <dependency>
            <artifactId>commons-discovery</artifactId>
            <groupId>commons-discovery</groupId>
            <version>20030211.213356</version>
        </dependency>        

        <dependency>
             <artifactId>commons-logging</artifactId>
             <groupId>commons-logging</groupId>
             <version>1.0.3</version>
         </dependency>


       <dependency>
            <artifactId>commons-pool</artifactId>
            <groupId>exist</groupId>
            <version>1.1</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>

        
		<dependency>
			<artifactId>xmldb</artifactId>
            <groupId>exist</groupId>
           	<version>unknown</version>            
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>           
        </dependency>

       <dependency>
            <artifactId>xmlrpc</artifactId>
            <groupId>exist</groupId>
            <version>1.2</version>
            <url>http://www.astrogrid.org</url>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>
    	
        <dependency>
            <artifactId>servletapi</artifactId>
            <groupId>servletapi</groupId>
            <version>2.3</version>
        </dependency>
    	<!--
        <dependency>
            <id>axis</id>
            <version>1.1</version>
                <properties>
                	<war.bundle>true</war.bundle>
            	</properties>                	        	
        </dependency>
        -->
        <dependency>
           <id>jaxrpc</id>
           <version>unknown</version>
           <jar>jaxrpc.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
        	</properties>
        </dependency>

        <dependency>
           <id>saaj</id>
           <version>unknown</version>
           <jar>saaj.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
        	</properties>        	
        </dependency>
    	
    	
    	

    </dependencies>

    <!--+
        | The build properties for our project.
        +-->
    <build>
        <!--+
            | The location of our Java source code.
            +-->
        <sourceDirectory>src/java</sourceDirectory>
    	
    	<!--
        <resources>
            <resource>
				<directory>src/oaicatconfig</directory>
		        <includes>
	            	<include>*</include>
		        </includes>
            </resource>
        </resources>
    	-->
    	
    	
        <!--+
            | The location of our JUnit source code.
            +-->
        <unitTestSourceDirectory>src/junit</unitTestSourceDirectory>
        <!--+
            | Our JUnit test classes.
            +-->
        <unitTest>
            <!--+
                | Which tests to include.
                +-->
            <includes>
                <include>**/*Test.java</include>
            </includes>
            <!--+
                | Which tests to exclude.
                +-->
            <excludes>
                <exclude>**/*Test.frog</exclude>
            </excludes>
            <!--+
                | The resources for our tests.
            +-->
            <resources>
                <resource>
                </resource>
            </resources>

        </unitTest>
    </build>
    <reports>
        <report><!--few reports for this subproject-->
            maven-changelog-plugin
        </report>
    </reports>     

</project>






