<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven project description for the AstroGrid registry webapp.
    |
    +-->
<project
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="maven-project.xsd">

    <!--+
        | Extend the common project descriptor.
        +-->
    <extend>${basedir}/../maven/project.xml</extend>

    <!--+
        | The short name of the project.
        | This is used when naming jars and distribution files.
        +-->
    <id>astrogrid-registry</id>

    <!--+
        | The full name of the project.
        | This is used when generating JavaDoc titles.
        +-->
    <name>AstroGrid registry webapp</name>

    <!--+
        | A short description of the project.
        | The short description should be limited to a single line.
        +-->
    <shortDescription>
       Full War file installtion of the Registry.
    </shortDescription>

    <!--+
        | A detailed description of the project.
        | This is used to generate the front page of the projects web site. 
        +-->
    <description>
        <![CDATA[
	<p>
		This is the main project to build a war file for deployment and that can be just dropped into a server.  It bundles the Axis
    	web service toolkit along with all the necessary jar file dependencies such as astrogrid-registry-server.jar all into this
    	war file.  It also bundles together two servlets that handle the OAI and a harvest daemeon.
	</p>
	<section name="Builds">
		<p>			
			Here are the maven goals for building the registry, it has a one extra goal compared to the other sub-projects.
			<ul>
				<li>astrogrid-clean - cleans out and removes all previous builds.</li>
				<li>astrogrid-install-snapshot - Builds all the necessry jar and war files for the snapshot.</li>
				<li>astrogrid-install-artifact - Builds all the necessry jar and war files for the artifact.</li>    	
				<li>astrogrid-deploy-snapshot - Builds and deploys the snapshot onto the repository.</li>
				<li>astrogrid-deploy-artifact - Builds and deploys the artifact onto the repository.</li>    	
				<li>astrogrid-deploy-site - Generates reports and documents to be deployed on the site repository.</li>
			</ul>
		</p>
	</section>
    <section name="More on the Servlets">
    	<p>
	    	<b>OAI</b> -- The toolkit used for this is the OAICat toolkit.  
    	    See the tools section under <a href="http://www.openarchives.org">OAI</a>.  
    		With a few modifications to this toolkit and extensions, the astrogrid servlet will 
    	    query the eXist xml database for all the resources managed by this registry.  Then with
    		xsl will transform it to a OAI xml, where it gives it to the OAICat toolkit for handling
    	    any of the OAI tasks such as certain verbs.  Modify the oaicat.properties file for the
    	    Identification verb. Location http://..../OAIHandler
    		OAI verbs handled by astrogrid:
    	    <ul>
    			<li>Identify</li>
    			<li>ListRecords</li>
				<li>ResumeListRecords - resumptionTokens can be used, but expect not to</li>    	
    			<li>GetRecord</li>
    			<li>ListMetaDataFormats</li>
    			<li>ListIdentifiers</li>
    			<li>ResumeListIdentifiers - resumptionTokens can be used, but expect not to</li>
    		</ul>
    		<br />
    		<b>Harvest Daemon</b> -- The harvest daemon will automatically kick off harvests or you may
    	    go to the servet web site to kick off manual harvests. Location http://..../RegistryHarvest
    	</p>
    </section>
   	<section name="More on eXist XMLDB">
     	<p>
    		Registry uses an eXist xml database for storing and querying the resources. 
    	    See the eXist section for astrogrid on more about eXist, this section 
    	    lets you install the eXist database as a war file.  But for security purposes,
    	    it is better to install the eXist as a server installation on another port
    	    that is not accessible to outise computers, but still accessible to 
    	    the registry installation.
    	</p>
    </section>
	<section name="Deployment/Installation">
		<p>			
			After the builds a war file is produced in the "target" area.  This war file can be dropped into the webapps
			portion of your java server (servlet container) such as tomcat.			
			directory. Once installed as a System property or JNDI entry in the web.xml file located in the 
			astrogrid-registry-webapp/WEB-INF/web.xml file there needs to be a "org.astrogrid.config.url" pointing to a config file.
    		Or you may point to a config file with a context.xml in your installations.
    		Remember to modify the oaicat.properties file under src/oaicat
    		<i>Below are the properties and examples from the registry-server documentation, which are needed
    	       for the installation of the registry.</i>
		Currently the config file only requires properties:
		<ul>
		  <li>org.astrogrid.registry.authorityid - required, the main authority id for this registry. Should be the same authorityid used on the main Registry type Resource.</li>
		  <li>org.astrogrid.registry.version - required, a version number of the current main IVOA registry schema, slowly being factored out.</li>
		  <li>exist.db.url - required, eXist url property pointing to the root location of the eXist XML database.</li>
		  <li>exist.query.returncount - optional, the return count number (defaults to 25 if not given).</li>
		  <li>oai.servlet.url - required, the url to the servlet for the OAI, OAICat type servlet.</li>
    	  <li>org.astrogrid.registry.harvest.daemon.interval-hours - required for harvesting other registries, the time intervals for automatic harvests to be started.</li>
		</ul>
		Example of config properties:
		<ul>
		  <li>org.astrogrid.registry.authorityid=org.astrogrid.leicester</li>
		  <li>exist.db.url=http://localhost:8080/exist</li>
		  <li>exist.query.returncount=25</li>
		  <li>oai.servlet.url=http://localhost:8080/astrogrid-registry-snapshot/OAIHandler</li>
	      <li>org.astrogrid.registry.version=0_9</li>
    	  <li>org.astrogrid.registry.harvest.daemon.interval-hours=1</li>
		</ul>
		</p>
	</section>
		]]>        
    </description>

    <!--+
        | Our cvs repository location.
        +-->
    <repository>
        <connection>
            scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:astrogrid/registry/webapp
        </connection>
        <developerConnection>
            scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/registry/webapp
        </developerConnection>
    </repository>

    <!--+
        | The external libraries required to build our component.
        +-->
    <dependencies>
    
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-common</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
            <url>http://www.astrogrid.org/</url>
        </dependency>
    
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-registry-common</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        <!--+
            | The Registry server components.
            +-->
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-registry-server</artifactId>
            <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>
        </dependency>
        
        <dependency>
            <groupId>org.astrogrid</groupId>
            <artifactId>astrogrid-exist-server</artifactId>
	        <version>${pom.currentVersion}</version>
            <type>jar</type>
            <url>http://www.astrogrid.org/</url>
            <properties>
                <war.bundle>true</war.bundle>
            </properties>            
        </dependency>
        
        
        <dependency>
        	<artifactId>commons-jxpath</artifactId>
            <groupId>commons-jxpath</groupId>
            <version>1.1</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
        
        <dependency>
        	<artifactId>jakarta-regexp</artifactId>
            <groupId>jakarta-regexp</groupId>
            <version>1.3</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
               
        <!-- required by castor -->
        <dependency>
            <artifactId>castor</artifactId>
            <groupId>castor</groupId>
            <version>0.9.5</version>
            <jar>castor-0.9.5-xml.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>            
        </dependency>
                        
        <dependency>
        	<id>xerces</id>
            <version>2.4.0</version>
            <properties>
            	<war.bundle>true</war.bundle>
            </properties>
        </dependency>
        
        <dependency>
       		<id>xml-apis</id>
          	<version>1.0.b2</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>
        </dependency>
        
       <dependency>
            <artifactId>exist</artifactId>
            <groupId>exist</groupId>
            <version>1.0b1</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>

        <dependency>
            <artifactId>commons-discovery</artifactId>
            <groupId>commons-discovery</groupId>
            <version>20030211.213356</version>
        </dependency>        

        <dependency>
             <artifactId>commons-logging</artifactId>
             <groupId>commons-logging</groupId>
             <version>1.0.3</version>
         </dependency>


       <dependency>
            <artifactId>commons-pool</artifactId>
            <groupId>exist</groupId>
            <version>1.1</version>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>

        
		<dependency>
			<artifactId>xmldb</artifactId>
            <groupId>exist</groupId>
           	<version>unknown</version>            
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>           
        </dependency>

       <dependency>
            <artifactId>xmlrpc</artifactId>
            <groupId>exist</groupId>
            <version>1.2</version>
            <url>http://www.astrogrid.org</url>
          	<properties>
          		<war.bundle>true</war.bundle>
          	</properties>            
        </dependency>
    	
        <dependency>
            <artifactId>servletapi</artifactId>
            <groupId>servletapi</groupId>
            <version>2.3</version>
        </dependency>
    	<!--
        <dependency>
            <id>axis</id>
            <version>1.1</version>
                <properties>
                	<war.bundle>true</war.bundle>
            	</properties>                	        	
        </dependency>
        -->
        <dependency>
           <id>jaxrpc</id>
           <version>unknown</version>
           <jar>jaxrpc.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
        	</properties>
        </dependency>

        <dependency>
           <id>saaj</id>
           <version>unknown</version>
           <jar>saaj.jar</jar>
            <properties>
            	<war.bundle>true</war.bundle>
        	</properties>        	
        </dependency>
    	
    	
    	

    </dependencies>

    <!--+
        | The build properties for our project.
        +-->
    <build>
        <!--+
            | The location of our Java source code.
            +-->
        <sourceDirectory>src/java</sourceDirectory>
    	
        <resources>
            <resource>
				<directory>src/oaicatconfig</directory>
		        <includes>
	            	<include>*</include>
		        </includes>
            </resource>
        </resources>
    
    	
    	
        <!--+
            | The location of our JUnit source code.
            +-->
        <unitTestSourceDirectory>src/junit</unitTestSourceDirectory>
        <!--+
            | Our JUnit test classes.
            +-->
        <unitTest>
            <!--+
                | Which tests to include.
                +-->
            <includes>
                <include>**/*Test.java</include>
            </includes>
            <!--+
                | Which tests to exclude.
                +-->
            <excludes>
                <exclude>**/*Test.frog</exclude>
            </excludes>
            <!--+
                | The resources for our tests.
            +-->
            <resources>
                <resource>
                </resource>
            </resources>

        </unitTest>
    </build>
    <reports>
        <report><!--few reports for this subproject-->
            maven-changelog-plugin
        </report>
    </reports>     

</project>






