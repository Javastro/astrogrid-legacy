<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">


<web-app>
  <display-name>Astrogrid Registry</display-name>

    <context-param>
      <param-name>properties</param-name>
      <param-value>astrogrid.properties</param-value>
      <description>
        The astrogrid.properties file containing
        datapairs used to initialize the OAI repository software.
      </description>
    </context-param>

    <!-- Servlet for explicit initialisation of log4j.
    -->
    <servlet>
        <servlet-name>log4j-init</servlet-name>
        <servlet-class>org.astrogrid.registry.server.http.servlets.Log4jInit</servlet-class>
        <init-param>
            <param-name>log4j-init-file</param-name>
            <param-value>log4j.xml</param-value>
        </init-param>
        <init-param>
            <param-name>log4j-init-file-registry</param-name>
            <param-value>log4j_registry.xml</param-value>
        </init-param>
		<!--
		  Change below value otherwise it will try to create a directory registry/logs in your webapp.
		-->
		<init-param>
	        <param-name>logdirectory</param-name>
        	<param-value>/</param-value>
      	</init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

<!-- RpcServlet provides XML-RPC access to eXist -->
    <servlet>
        <servlet-name>org.exist.xmlrpc.RpcServlet</servlet-name>
        <servlet-class>org.exist.xmlrpc.RpcServlet</servlet-class>
    </servlet>

  <servlet>
    <servlet-name>AxisServlet</servlet-name>
    <display-name>Apache-Axis Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AxisServlet
    </servlet-class>
  </servlet>

  <servlet>
    <servlet-name>AdminServlet</servlet-name>
    <display-name>Axis Admin Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AdminServlet
    </servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>

	<servlet>
   		<servlet-name>RegistryHarvest</servlet-name>
   		<servlet-class>org.astrogrid.registry.server.http.servlets.HarvestDaemon</servlet-class>
   		<load-on-startup>200</load-on-startup>
	</servlet>

	<servlet>
   		<servlet-name>ExistDatabaseManager</servlet-name>
   		<servlet-class>org.astrogrid.xmldb.client.http.servlets.eXist.ExistDatabaseManager</servlet-class>
		<init-param>
	        <param-name>configuration</param-name>
        	<param-value>conf.xml</param-value>
      	</init-param>
       	<init-param>
        	<param-name>basedir</param-name>
         	<param-value>WEB-INF/</param-value>
       	</init-param>
   		<load-on-startup>100</load-on-startup>
	</servlet>

    <servlet>
        <servlet-name>WebDAVServlet</servlet-name>
        <servlet-class>org.exist.http.servlets.WebDAVServlet</servlet-class>
        <init-param>
            <param-name>authentication</param-name>
            <param-value>basic</param-value>
        </init-param>
    </servlet>
   
    <servlet>
      <servlet-name>OAIHandlerv0_10</servlet-name>
      <description>
        This servlet processes OAI verbs.

        The initialization parameter names for this servlet are the
        "servlet path" that will be received by this servlet (after the
        filename extension is removed).  The corresponding value is the
        name of the action class that will be used to process this request.
      </description>
      <servlet-class>astrogrid.registry.oai.OAIHandler</servlet-class>
     <init-param>
        <param-name>registry_contract_version</param-name>
         <param-value>0.1</param-value>
      </init-param>
    </servlet>

    <filter>
        <filter-name>IPFilter</filter-name>
        <filter-class>org.astrogrid.registry.server.http.filters.RestrictFilter</filter-class>      
    </filter>

    <filter>
        <filter-name>ContractsQueryFilter</filter-name>
        <filter-class>org.astrogrid.contracts.http.filters.ContractsFilter</filter-class>
         <init-param>
            <param-name>wsdlFile</param-name>
            <param-value>schema/registry/RegistrySearch/v0.1/RegistrySearch.wsdl</param-value>
         </init-param>        
    </filter>

    <filter>
        <filter-name>ContractsUpdateFilter</filter-name>
        <filter-class>org.astrogrid.contracts.http.filters.ContractsFilter</filter-class>
         <init-param>
            <param-name>wsdlFile</param-name>
            <param-value>schema/registry/RegistrySearch/v0.1/RegistryUpdate.wsdl</param-value>
         </init-param>        
    </filter>

    <filter>
        <filter-name>ContractsPublishFilter</filter-name>
        <filter-class>org.astrogrid.contracts.http.filters.ContractsFilter</filter-class>
         <init-param>
            <param-name>wsdlFile</param-name>
            <param-value>schema/registry/RegistrySearch/v0.1/RegistryPublish.wsdl</param-value>
         </init-param>        
    </filter>


	<servlet-mapping>
   		<servlet-name>RegistryHarvest</servlet-name>
   		<url-pattern>/RegistryHarvest</url-pattern>
	</servlet-mapping>

<!--
	<servlet-mapping>
   		<servlet-name>ExistDatabaseManager</servlet-name>
   		<url-pattern>/ExistDatabaseManager</url-pattern>
	</servlet-mapping>
-->

    <servlet-mapping>
        <servlet-name>WebDAVServlet</servlet-name>
        <url-pattern>/webdav/*</url-pattern>
    </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/servlet/AxisServlet</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>*.jws</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

    <servlet-mapping>
      <servlet-name>OAIHandlerv0_10</servlet-name>
      <url-pattern>/OAIHandlerv0_10</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>OAIHandlerv0_10</servlet-name>
        <url-pattern>/servlet/OAIHandlerv0_10</url-pattern>
    </servlet-mapping>

    <!-- Define where the XMLRPC servlet listens -->
      <servlet-mapping>
          <servlet-name>org.exist.xmlrpc.RpcServlet</servlet-name>
          <url-pattern>/xmlrpc</url-pattern>
      </servlet-mapping>

    <filter-mapping>
        <filter-name>IPFilter</filter-name>
		<url-pattern>/webdav/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>IPFilter</filter-name>
		<url-pattern>/xmlrpc/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContractsQueryFilter</filter-name>
		<url-pattern>/services/RegistrySearc*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContractsQueryFilter</filter-name>
		<url-pattern>/services/RegistrySearc*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContractsPublishFilter</filter-name>
		<url-pattern>/services/RegistryPubl*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContractsUpdateFilter</filter-name>
		<url-pattern>/services/RegistryPubl*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ContractsQueryFilter</filter-name>
		<url-pattern>/schema/*</url-pattern>
    </filter-mapping>


  <!-- various MIME type mappings ====================================== -->

    <mime-mapping>
        <extension>css</extension>
        <mime-type>text/css</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xml</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xsl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xconf</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>xmap</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>ent</extension>
        <mime-type>text/plain</mime-type>
    </mime-mapping>

    <mime-mapping>
        <extension>grm</extension>
        <mime-type>text/plain</mime-type>
    </mime-mapping>

    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>
  
  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>registry_index.html</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jws</welcome-file>
  </welcome-file-list>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name></web-resource-name>
      <url-pattern>/admin/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>manager</role-name>
    </auth-constraint>
  </security-constraint>
   
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>AstroGrid</realm-name>
  </login-config>

  <security-role>
    <role-name>manager</role-name>
  </security-role>

	<env-entry>
		<description>The Main Authority ID for this Registry (Authority ID used for the Registry type)</description>
		<env-entry-name>reg.amend.authorityid</env-entry-name>
		<env-entry-value>org.changethis</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>
			The XMLDB server location url. By default it is set to use the internal eXist db.  
			You may set it to xmldb:exist://host:port/exist/xmlrpc for external eXist db. e.g. xmldb:exist://localhost:8080/exist/xmlrpc.  
			In general you can switch to another db but this is untested read configuration page from your context on that.</description>
		<env-entry-name>xmldb.uri</env-entry-name>
		<env-entry-value>xmldb:exist://</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The XMLDB driver to be the registered xml database.</description>
		<env-entry-name>xmldb.driver</env-entry-name>
		<env-entry-value>org.exist.xmldb.DatabaseImpl</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The user used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.admin.user</env-entry-name>
		<env-entry-value>admin</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The admin password used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.admin.password</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The user used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.query.user</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The query password used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.query.password</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Have validation on or off of xml on a update, but does not quit on incorrect xml; see reg.ament.quiton.invalid.</description>
		<env-entry-name>reg.amend.validate</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used only for the external testing jsp pages. Determines if a full soap body should be returned from a web service call.</description>
		<env-entry-name>return.soapbody</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Quit on incorrect xml during an update.</description>
		<env-entry-name>reg.amend.quiton.invalid</env-entry-name>
		<env-entry-value>false</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The maximum number of results to return from queries.</description>
		<env-entry-name>reg.amend.returncount</env-entry-name>
		<env-entry-value>100</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Does this registry need to do harvesting.</description>
		<env-entry-name>reg.amend.harvest</env-entry-name>
		<env-entry-value>false</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The url to the oai publishing url for 0.10, default is set to astrogrid servlet, but is not required to use.</description>
		<env-entry-name>reg.amend.oaipublish.0.10</env-entry-name>
		<env-entry-value>http://localhost:8080/astrogrid-registry/OAIHandlerv0_10</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Point to another exist configuration file on your disk hence a different data directory as well.  (only for internal db use).  This might be handly if you want to use the internal database, but not have the configuration file and data directory of eXist db with the war file so undeploying/updating wars will not lose data. Also use if servlet container does not unpack war file.</description>
		<env-entry-name>reg.custom.exist.configuration</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Advise to change. Directory where logs will be written to, if "/" (default) it will try to find a catalina.home and use its logs directory, if that fails tries to use the webapp context path, finally user.dir will be attempted.</description>
		<env-entry-name>reg.custom.loggingdirectory</env-entry-name>
		<env-entry-value>/</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Registry now allows access via webdav and xmlrc, this can have benefits but also security issues, you must set which ip addresses (or host names) are allowed (comma seperated). Since ip's can change expressions are allowed</description>
		<env-entry-name>reg.custom.restrict.ipaddresses</env-entry-name>
		<env-entry-value>localhost,127.0.0.1,127.0.*</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Number of hours between harvest (if harvest is enabled)</description>
		<env-entry-name>reg.custom.harvest.interval_hours</env-entry-name>
		<env-entry-value>2</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The repository Name.</description>
		<env-entry-name>reg.amend.identify.repositoryName</env-entry-name>
		<env-entry-value>Astrogrid Full Repository</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The administration Email of this OAI repository.</description>
		<env-entry-name>reg.amend.identify.adminEmail</env-entry-name>
		<env-entry-value>mailto:ktn@star.le.ac.uk</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The earliest date stamp for records/metadata being published.</description>
		<env-entry-name>reg.custom.identify.earliestDatestamp</env-entry-name>
		<env-entry-value>1950-03-03T22:14:22</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on updates for particular versions.</description>
		<env-entry-name>reg.custom.updatestylesheet.0.10</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on harvest updates for particular versions.</description>
		<env-entry-name>reg.custom.harveststylesheet.0.10</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify xpath for keyword search based on various versions in the registry.</description>
		<env-entry-name>reg.custom.keywordxpaths.0.10</env-entry-name>
		<env-entry-value>vr:content/vr:description, vr:title, vr:identifier, vr:content/vr:subject</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

</web-app>
