<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
    "http://java.sun.com/j2ee/dtds/web-app_2.2.dtd">

<web-app>
  <display-name>Astrogrid Registry</display-name>

    <context-param>
      <param-name>properties</param-name>
      <param-value>astrogrid.properties</param-value>
      <description>
        The astrogrid.properties file containing
        datapairs used to initialize the OAI repository software.
      </description>
    </context-param>

  <servlet>
    <servlet-name>AxisServlet</servlet-name>
    <display-name>Apache-Axis Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AxisServlet
    </servlet-class>
  </servlet>

  <servlet>
    <servlet-name>AdminServlet</servlet-name>
    <display-name>Axis Admin Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AdminServlet
    </servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>SOAPMonitorService</servlet-name>
    <display-name>SOAPMonitorService</display-name>
    <servlet-class>
        org.apache.axis.monitor.SOAPMonitorService
    </servlet-class>
    <init-param>
      <param-name>SOAPMonitorPort</param-name>
      <param-value>5001</param-value>
    </init-param>
    <load-on-startup>100</load-on-startup>
  </servlet>

	<servlet>
   		<servlet-name>RegistryHarvest</servlet-name>
   		<servlet-class>astrogrid.registry.harvest.daemon.HarvestDaemon</servlet-class>
   		<load-on-startup>200</load-on-startup>
	</servlet>

	<servlet>
   		<servlet-name>ExistDatabaseManager</servlet-name>
   		<servlet-class>org.astrogrid.registry.server.admin.ExistDatabaseManager</servlet-class>
		<init-param>
	        <param-name>configuration</param-name>
        	<param-value>exist.xml</param-value>
      	</init-param>
       	<init-param>
        	<param-name>basedir</param-name>
         	<param-value>WEB-INF/</param-value>
       	</init-param>
   		<load-on-startup>100</load-on-startup>
	</servlet>


    <servlet>
      <servlet-name>OAIHandlerv0_9</servlet-name>
      <description>
        This servlet processes OAI verbs.

        The initialization parameter names for this servlet are the
        "servlet path" that will be received by this servlet (after the
        filename extension is removed).  The corresponding value is the
        name of the action class that will be used to process this request.
      </description>
      <servlet-class>astrogrid.registry.oai.OAIHandler</servlet-class>
     <init-param>
        <param-name>registry_version</param-name>
         <param-value>0.9</param-value>
      </init-param>
    </servlet>


    <servlet>
      <servlet-name>OAIHandlerv0_10</servlet-name>
      <description>
        This servlet processes OAI verbs.

        The initialization parameter names for this servlet are the
        "servlet path" that will be received by this servlet (after the
        filename extension is removed).  The corresponding value is the
        name of the action class that will be used to process this request.
      </description>
      <servlet-class>astrogrid.registry.oai.OAIHandler</servlet-class>
     <init-param>
        <param-name>registry_version</param-name>
         <param-value>0.10</param-value>
      </init-param>
    </servlet>

	<servlet-mapping>
   		<servlet-name>RegistryHarvest</servlet-name>
   		<url-pattern>/RegistryHarvest</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
   		<servlet-name>ExistDatabaseManager</servlet-name>
   		<url-pattern>/ExistDatabaseManager</url-pattern>
	</servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/servlet/AxisServlet</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>*.jws</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SOAPMonitorService</servlet-name>
    <url-pattern>/SOAPMonitor</url-pattern>
  </servlet-mapping>

    <servlet-mapping>
      <servlet-name>OAIHandlerv0_9</servlet-name>
      <url-pattern>/OAIHandlerv0_9</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>OAIHandlerv0_9</servlet-name>
        <url-pattern>/servlet/OAIHandlerv0_9</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>OAIHandlerv0_10</servlet-name>
      <url-pattern>/OAIHandlerv0_10</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>OAIHandlerv0_10</servlet-name>
        <url-pattern>/servlet/OAIHandlerv0_10</url-pattern>
    </servlet-mapping>

    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>
  

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <welcome-file-list id="WelcomeFileList">
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>registry_index.html</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jws</welcome-file>
  </welcome-file-list>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name></web-resource-name>
      <url-pattern>/admin/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>manager</role-name>
    </auth-constraint>
  </security-constraint>
   
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>AstroGrid</realm-name>
  </login-config>

  <security-role>
    <role-name>manager</role-name>
  </security-role>

	<env-entry>
		<description>The Main Authority ID for this Registry (Authority ID used for the Registry type)</description>
		<env-entry-name>reg.amend.authorityid</env-entry-name>
		<env-entry-value>org.changethis</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>
			The XMLDB server location url. By default it is set to use the internal eXist db.  
			You may set it to xmldb:exist://host:port/exist/xmlrpc for external eXist db. e.g. xmldb:exist://localhost:8080/exist/xmlrpc.  
			In general you can switch to another db but this is untested read configuration page from your context on that.</description>
		<env-entry-name>xmldb.uri</env-entry-name>
		<env-entry-value>xmldb:exist://</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The XMLDB driver to be the registered xml database.</description>
		<env-entry-name>xmldb.driver</env-entry-name>
		<env-entry-value>org.exist.xmldb.DatabaseImpl</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>What type of query service, XQueryService or XPathQueryService.</description>
		<env-entry-name>xmldb.query.service</env-entry-name>
		<env-entry-value>XQueryService</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The user used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.admin.user</env-entry-name>
		<env-entry-value>admin</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The admin password used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.admin.password</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The user used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.query.user</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The query password used to create Resources or collections, and shutdown the internal eXist database if it is internally being ran.</description>
		<env-entry-name>xmldb.query.password</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The default registry version used, May be overriden on updates and queries based on vr namespace.</description>
		<env-entry-name>reg.amend.defaultversion</env-entry-name>
		<env-entry-value>0.10</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Have validation on or off.</description>
		<env-entry-name>reg.amend.validate</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Quit on validation.</description>
		<env-entry-name>reg.amend.quiton.invalid</env-entry-name>
		<env-entry-value>false</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>


	<env-entry>
		<description>The maximum number of results to return from queries.</description>
		<env-entry-name>reg.amend.returncount</env-entry-name>
		<env-entry-value>100</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Does this registry need to do harvesting.</description>
		<env-entry-name>reg.amend.harvest</env-entry-name>
		<env-entry-value>false</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The url to the oai publishing url for 0.9, default is set to astrogrid servlet, but is not required to use.</description>
		<env-entry-name>reg.amend.oaipublish.0.9</env-entry-name>
		<env-entry-value>http://localhost:8080/astrogrid-registry/OAIHandlerv0_9</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>The url to the oai publishing url for 0.10, default is set to astrogrid servlet, but is not required to use.</description>
		<env-entry-name>reg.amend.oaipublish.0.10</env-entry-name>
		<env-entry-value>http://localhost:8080/astrogrid-registry/OAIHandlerv0_10</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Point to another exist configuration file on your disk hence a different data directory as well.  (only for internal db use).  This might be handly if you want to use the internal database, but not have the configuration file and data directory of eXist db with the war file so undeploying/updating wars will not lose data. Also use if servlet container does not unpack war file.</description>
		<env-entry-name>reg.custom.exist.configuration</env-entry-name>
		<env-entry-value></env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Number of hours between harvest (if harvest is enabled)</description>
		<env-entry-name>reg.custom.harvest.interval_hours</env-entry-name>
		<env-entry-value>2</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The repository Name.</description>
		<env-entry-name>reg.amend.identify.repositoryName</env-entry-name>
		<env-entry-value>Astrogrid Full Repository</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The administration Email of this OAI repository.</description>
		<env-entry-name>reg.amend.identify.adminEmail</env-entry-name>
		<env-entry-value>mailto:ktn@star.le.ac.uk</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>Used for the Identify verb in OAI.  The earliest date stamp for records/metadata being published.</description>
		<env-entry-name>reg.custom.identify.earliestDatestamp</env-entry-name>
		<env-entry-value>1950-03-03T22:14:22</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on updates for particular versions.</description>
		<env-entry-name>reg.custom.updatestylesheet.0.9</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on updates for particular versions.</description>
		<env-entry-name>reg.custom.updatestylesheet.0.10</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on harvest updates for particular versions.</description>
		<env-entry-name>reg.custom.harveststylesheet.0.9</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify stylesheets to be used on harvest updates for particular versions.</description>
		<env-entry-name>reg.custom.harveststylesheet.0.10</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify xpath for keyword search based on various versions in the registry.</description>
		<env-entry-name>reg.custom.keywordxpaths.0.9</env-entry-name>
		<env-entry-value>vr:Summary/vr:Description, vr:Title, vr:Subject</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Specify xpath for keyword search based on various versions in the registry.</description>
		<env-entry-name>reg.custom.keywordxpaths.0.10</env-entry-name>
		<env-entry-value>vr:content/vr:description, vr:title, vr:content/vr:subject</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Does the Identifier split up with an AuthorityID element based on version in registry.</description>
		<env-entry-name>reg.custom.identifier.hasauthorityid.0.9</env-entry-name>
		<env-entry-value>true</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) The default root node for elements in the Registry. Can override on various versions in the registry.</description>
		<env-entry-name>reg.custom.rootNode.default</env-entry-name>
		<env-entry-value>vor:Resource</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) The default root node for elements in the Registry. Can override on various versions in the registry.</description>
		<env-entry-name>reg.custom.rootNode.0.10</env-entry-name>
		<env-entry-value>vor:Resource</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) The default root node for elements in the Registry. Can override on various versions in the registry.</description>
		<env-entry-name>reg.custom.rootNode.0.9</env-entry-name>
		<env-entry-value>vr:Resource</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Declare the namespaces used on the registry, based on registry versions.</description>
		<env-entry-name>reg.custom.declareNS.0.9</env-entry-name>
		<env-entry-value>
			declare namespace vr = "http://www.ivoa.net/xml/VOResource/v0.9"; declare namespace vc = "http://www.ivoa.net/xml/VOCommunity/v0.2"; declare namespace vg = "http://www.ivoa.net/xml/VORegistry/v0.2"; declare namespace vs = "http://www.ivoa.net/xml/VODataService/v0.4"; declare namespace vt = "http://www.ivoa.net/xml/VOTable/v0.1"; declare namespace cs = "http://www.ivoa.net/xml/ConeSearch/v0.2"; declare namespace sia = "http://www.ivoa.net/xml/SIA/v0.6"; declare namespace cea="http://www.ivoa.net/xml/CEAService/v0.1"; declare namespace ceapd="http://www.astrogrid.org/schema/AGParameterDefinition/v1"; declare namespace ag="http://www.astrogrid.org/schema/AstrogridDataService/v0.1"; declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance"; 
		</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

	<env-entry>
		<description>(Advanced) Declare the namespaces used on the registry, based on registry versions.</description>
		<env-entry-name>reg.custom.declareNS.0.10</env-entry-name>
		<env-entry-value>
			declare namespace vr = "http://www.ivoa.net/xml/VOResource/v0.10"; declare namespace vor="http://www.ivoa.net/xml/RegistryInterface/v0.1"; declare namespace vs = "http://www.ivoa.net/xml/VODataService/v0.5"; declare namespace cs = "http://www.ivoa.net/xml/ConeSearch/v0.3"; declare namespace sia = "http://www.ivoa.net/xml/SIA/v0.7"; declare namespace vg = "http://www.ivoa.net/xml/VORegistry/v0.3"; declare namespace vc = "http://www.ivoa.net/xml/VORegistry/v0.3"; declare namespace cea="http://www.ivoa.net/xml/CEAService/v0.2"; declare namespace ceapd="http://www.astrogrid.org/schema/AGParameterDefinition/v1"; declare namespace ag="http://www.astrogrid.org/schema/AstrogridDataService/v0.2"; declare namespace tdb="urn:astrogrid:schema:vo-resource-types:TabularDB:v0.3"; declare namespace xsi="http://www.w3.org/2001/XMLSchema-instance"; 
		</env-entry-value>
		<env-entry-type>java.lang.String</env-entry-type>
	</env-entry>

</web-app>
