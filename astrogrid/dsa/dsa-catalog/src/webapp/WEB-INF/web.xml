<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN" "http://java.sun.com/j2ee/dtds/web-app_2.2.dtd">
<web-app>

  <display-name>DSA/Catalogue</display-name>
  <description>Web services for tabular data ex RDBMS.</description>

  <servlet>
    <servlet-name>AxisServlet</servlet-name>
    <display-name>Apache-Axis Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AxisServlet
    </servlet-class>
  </servlet>

  <servlet>
    <servlet-name>JUnitEETestServlet</servlet-name>
    <description>JUnitEE test runner</description>
    <servlet-class>org.junitee.servlet.JUnitEEThreadedServlet</servlet-class>
  </servlet>

   <!-- Query-managing servlets -->
  <servlet>
    <servlet-name>SubmitCone</servlet-name>
    <description>IVOA cone-search</description>
    <servlet-class>org.astrogrid.dataservice.service.cone.SubmitCone</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>UwsJobServlet</servlet-name>
    <description>Handles requests to UWS jobs.</description>
    <servlet-class>org.astrogrid.dataservice.service.tap.UwsJobServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>SubmitSimpleQuery</servlet-name>
    <description>Servlet for submitting simple ADQL/s queries via POST or GET</description>
    <servlet-class>org.astrogrid.dataservice.service.simplequery.SubmitSimpleQuery</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>MultiCone</servlet-name>
    <description>Servlet for performing local-remote crossmatches implemented as a sequence of server-side cone searches.
      The input table is submitted vi HTTP POST.
      This service is not currently defined by a standard protocol.
    </description>
    <servlet-class>org.astrogrid.dataservice.service.multicone.MulticoneServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>DirectCone</servlet-name>
    <description>Cone-search servlet with direct creation of native SQL;
      avoids use of ADQL to improve performance.</description>
    <servlet-class>org.astrogrid.dataservice.service.multicone.DirectConeServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>BrowserAskQuery</servlet-name>
    <description>Servlet for asking (synchronous) queries via POST or GET suitable for browsers</description>
    <servlet-class>org.astrogrid.dataservice.service.servlet.BrowserAskQuery</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>AttemptAbort</servlet-name>
    <description>Servlet for attempting to abort a query</description>
    <servlet-class>org.astrogrid.dataservice.service.servlet.AttemptAbort</servlet-class>
  </servlet>

  <!-- VOSI servlets -->

  <!-- Admin servlets -->
  <servlet>
    <servlet-name>GetLog</servlet-name>
    <description>Returns the log</description>
    <servlet-class>org.astrogrid.webapp.GetLog</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>MetaDocGenerator</servlet-name>
    <description>Generates the Metadata Document(s) that describe the data</description>
    <servlet-class>org.astrogrid.tableserver.jdbc.RdbmsTableMetaDocGenerator</servlet-class>
  </servlet>

  <!-- CEA -->
  <servlet>
      <servlet-name>cec-http</servlet-name>
      <description>
        a small servlet that helps cea by
    * querying servlet context - find out where it is, set keys in config from this
    (keys used to generate VODescription for this CEA service)
    * provides http-get access to some of the cec methods (call by HTTP-GET with no params for usage info)
      </description>
      <servlet-class>org.astrogrid.applications.component.InitServlet</servlet-class>

  </servlet>

  <!-- Custom default servlet -->

  <!-- Query Managing tasks -->
  <servlet><servlet-name>DelegationServlet</servlet-name><servlet-class>org.astrogrid.security.delegation.DelegationServlet</servlet-class></servlet>

    <servlet>
        <servlet-name>TapSyncServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.tap.TapSyncServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>TapSyncQueryServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.tap.TapSyncQueryServlet</servlet-class>
    </servlet>
    <servlet><servlet-name>AvailabilityServlet</servlet-name><servlet-class>org.astrogrid.dataservice.service.vosi.AvailabilityServlet</servlet-class></servlet><servlet><servlet-name>CapabilityServlet</servlet-name><servlet-class>org.astrogrid.dataservice.service.vosi.CapabilityServlet</servlet-class></servlet>
    <servlet>
        <servlet-name>TableServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.vosi.TableServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ApplicationServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.vosi.ApplicationServlet</servlet-class>
    </servlet>
    <servlet><servlet-name>UwsJobListServlet</servlet-name><servlet-class>org.astrogrid.dataservice.service.tap.UwsJobListServlet</servlet-class></servlet>
    <servlet>
        <servlet-name>UwsServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.tap.UwsServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>UwsJobPhaseServlet</servlet-name>
        <servlet-class>org.astrogrid.dataservice.service.tap.UwsJobPhaseServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>UwsResultServlet</servlet-name>
        <description>Serves the table of results from a query.</description>
        <servlet-class>org.astrogrid.dataservice.service.tap.UwsResultServlet</servlet-class>
    </servlet>

  <servlet>
    <servlet-name>UwsResultListServlet</servlet-name>
    <servlet-class>org.astrogrid.dataservice.service.tap.UwsResultListServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>UwsJobDestructionServlet</servlet-name>
    <servlet-class>org.astrogrid.dataservice.service.tap.UwsJobDestructionServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>UwsJobErrorServlet</servlet-name>
    <servlet-class>org.astrogrid.dataservice.service.tap.UwsJobErrorServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>BrowserAskQuery</servlet-name>
    <url-pattern>/admin/BrowserAskQuery</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SubmitCone</servlet-name>
    <url-pattern>/SubmitCone</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SubmitSimpleQuery</servlet-name>
    <url-pattern>SubmitSimpleQuery</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>MultiCone</servlet-name>
    <url-pattern>MultiCone</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>DirectCone</servlet-name>
    <url-pattern>/DirectCone</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AttemptAbort</servlet-name>
    <url-pattern>/admin/AttemptAbort</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AttemptAbort</servlet-name>
    <url-pattern>/admin/Abort</url-pattern>
  </servlet-mapping>

  <!-- Administration type stuff -->
  <servlet-mapping>
    <servlet-name>GetLog</servlet-name>
    <url-pattern>/admin/GetLog</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>MetaDocGenerator</servlet-name>
    <url-pattern>/admin/GenerateMetaDoc</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/servlet/AxisServlet</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

 <servlet-mapping>
    <servlet-name>JUnitEETestServlet</servlet-name>
    <url-pattern>/admin/TestServlet/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
        <servlet-name>cec-http</servlet-name>
        <url-pattern>/cec-http</url-pattern>
  </servlet-mapping>

    <servlet-mapping>
        <servlet-name>DelegationServlet</servlet-name>
        <url-pattern>/delegations/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DelegationServlet</servlet-name>
        <url-pattern>/delegations</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TapSyncServlet</servlet-name>
        <url-pattern>/TAP/sync</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TapSyncQueryServlet</servlet-name>
        <url-pattern>/TAP/sync/query</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>AvailabilityServlet</servlet-name>
        <url-pattern>/VOSI/availability</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AvailabilityServlet</servlet-name>
        <url-pattern>/TAP/availability</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>CapabilityServlet</servlet-name>
        <url-pattern>/VOSI/capabilities</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CapabilityServlet</servlet-name>
        <url-pattern>/TAP/capabilities</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>TableServlet</servlet-name>
        <url-pattern>/VOSI/tables</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TableServlet</servlet-name>
        <url-pattern>/TAP/tables</url-pattern>
    </servlet-mapping>


    <servlet-mapping>
        <servlet-name>ApplicationServlet</servlet-name>
        <url-pattern>/VOSI/applications</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>UwsServlet</servlet-name>
        <url-pattern>/TAP/async/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>UwsServlet</servlet-name>
        <url-pattern>/TAP/async</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>UwsServlet</servlet-name>
        <url-pattern>/admin/jobs/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>UwsServlet</servlet-name>
        <url-pattern>/admin/jobs</url-pattern>
    </servlet-mapping>

  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>

  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <welcome-file-list id="WelcomeFileList">
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <!-- Security stuff - ensure admin & setup pages are not readily available -->
  <!-- paladmin is a legacy role, dsaadmin is used in dsa/catalog -->
  <!-- agWebAdminUser is a role often used with Registry.-->
  <security-constraint>
      <web-resource-collection>
          <web-resource-name/>
          <url-pattern>/admin/*</url-pattern>
      </web-resource-collection>
      <auth-constraint>
          <role-name>paladmin</role-name>
          <role-name>dsaadmin</role-name>
          <role-name>agWebAdminUser</role-name>
      </auth-constraint>
  </security-constraint>

  <security-constraint>
      <web-resource-collection>
          <web-resource-name/>
          <url-pattern>/setup/*</url-pattern>
      </web-resource-collection>
      <auth-constraint>
          <role-name>paladmin</role-name>
          <role-name>dsaadmin</role-name>
          <role-name>agWebAdminUser</role-name>
      </auth-constraint>
  </security-constraint>

  <!-- Use basic http authentication rather than custom form, for
   consistency with other AG webapps. -->
  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>AstroGrid</realm-name>
  </login-config>

  <security-role>
    <role-name>manager</role-name>
  </security-role>

  <security-role>
     <role-name>paladmin</role-name>
  </security-role>
  <security-role>
     <role-name>dsaadmin</role-name>
  </security-role>
  </web-app>
