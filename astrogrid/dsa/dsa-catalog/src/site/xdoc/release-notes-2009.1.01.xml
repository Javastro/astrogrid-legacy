<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

<properties>
  <title>Release notes for DSA/Catalogue 2009.1.01</title>
</properties>

<body>
<section name="Release notes for DSA/Catalogue 2009.1.01">

<p>
  This release provides an early implementation of the TAP v1.0 protocol.
  This is a prototype: some TAP features are not implemented and some are
  implemented imperfectly. Owners of DSA/Catalogue installations should upgrade
  only if early access to TAP is required; otherwise, we recommend skipping
  DSA/Catalogue 2009.1.01 and installing the following 2009.1.02 release. See
  particuarly the warning below concerning access control.
</p>

<subsection name="TAP features">
  <p>
    The following features of TAP are implemented:
  </p>
  <ul>
    <li>synchronous queries by ADQL;</li>
    <li>asynchronous queries by ADQL and UWS;</li>
    <li>VOSI.</li>
  </ul>
  <p>
    These features are not available in this release:
  </p>
  <ul>
    <li>queries by PQL, including positional queries using the POS parameter;</li>
    <li>metadata queries;</li>
    <li>table uploads;</li>
    <li>delivery of results to VOSpace.</li>
  </ul>
  <p>
    Asynchronous queries via TAP leave their results in cache files on the server.
    These results remain available for 24 hours from the submission time of the
    query.
  </p>
  <p>
    <strong>Warning:</strong>
    the TAP interface cannot be secured in this version of DSA. Therefore, if
    you restrict access to your data via the cone-search and CEC interfaces
    <em>do not upgrade to DSA/Catalogue 2009.1.01</em>. Wait for v2009.1.02,
    which will allow access control on the TAP interface.
  </p>
</subsection>

<subsection name="VOSI changes">
  <p>
    The VOSI resources have been rearranged to support the TAP implementation.
    Previously, there was one set of VOSI resources for each catalogue configured
    on the web application. In 2009.1.01, there is one set of VOSI resources for
    the whole web application, but requests to those resources can be parameterized
    to get data concerning only one catalogue.
  </p>
  <p>
    For example, consider an service S configured to serve catalogues named
    C1 and C2. In v2009.1, there would have been these VOSI resources:
  </p>
  <ul>
    <li>http://where.ever/S/C1/vosi/capabilities</li>
    <li>http://where.ever/S/C1/vosi/availability</li>
    <li>http://where.ever/S/C1/vosi/tables</li>
    <li>http://where.ever/S/C1/vosi/ceaapplication</li>
    <li>http://where.ever/S/C2/vosi/capabilities</li>
    <li>http://where.ever/S/C2/vosi/availability</li>
    <li>http://where.ever/S/C2/vosi/tables</li>
    <li>http://where.ever/S/C2/vosi/ceaapplication</li>
  </ul>
  <p>
    In v2009.1.01, the VOSI metadata are available through the following URIs:
  </p>
  <ul>
    <li>http://where.ever/S/VOSI/availability</li>
    <li>http://where.ever/S/VOSI/capabilities</li>
    <li>http://where.ever/S/VOSI/tables</li>
    <li>http://where.ever/S/VOSI/applications</li>
    <li>http://where.ever/S/VOSI/capabilities?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/tables?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/applications?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/capabilities?COLLECTION=C2</li>
    <li>http://where.ever/S/VOSI/tables?COLLECTION=C2</li>
    <li>http://where.ever/S/VOSI/applications?COLLECTION=C2</li>
  </ul>
  <p>
    The basic, unparameterized resources return metadata for all catalogues.
    The <i>COLLECTION</i> parameter on the resource selects metadata for just
    one catalogue. The availability resource does not support this parameter.
  </p>
</subsection>

<subsection name="Records of queries">
  <p>
    The progress of queries used to be recorded in memory rather than on disc.
    This lead to DSA installations forgetting their queries when restarted.
    Further, when results of queries were not dispatched to VOSpace they too
    were kept in memory, leading to eventual failure of the service when the
    heap filled up.
  </p>
  <p>
    Starting with v2009.1.01, all results of queries are kept on disc, in a location
    specifed during configuration. Please
    see the description of the <a href="cache-directory.html">cache directory</a>
    for details.
  </p>
</subsection>

<subsection name="Upgrading from v2009.1">
  <p>
    The configuration files are from the v2009.1 installation are mainly compatible
    with v2009.1.01:
  </p>
  <ul>
    <li>use the old context file.</li>
    <li>use the old metadoc file.</li>
    <li>an extra property is needed in <i>astrogrid.properties</i>.</li>
  </ul>
  <p>
    This is the recommended sequence for the upgrade.
  </p>
  <ol>
    <li>
      Delete the existing installation of DSA from Tomcat (use Tomcat's
      manager web-page and "undeploy" the context).
    </li>
    <li>
      In <i>astrogrid.properties</i>, add the property
      <i>datacenter.cache.directory</i>, as described in the
      <a href="cache-directory.html">document</a>.
    </li>
    <li>
      Create the cache directory if it does not exist. Make sure that the
      directory is writeable by the account running Tomcat.
    </li>
    <li>
      Deploy the new <i>.war</i> file into Tomcat (use the manager web-page,
      and make sure to specify the location of the context file, or else it will
      not see your configuration).
    </li>
    <li>
      Initialize the job database as described in the
      <a href="cache-directory.html">document</a>.
    </li>
    <li>
      Refresh the registration to add the URIs for the new interfaces,
      as described in the <a href="registration.html">registration instructions</a>.
    </li>
  </ol>
</subsection>
</section>
</body>

</document>
