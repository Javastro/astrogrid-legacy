<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

<properties>
  <title>Release notes for DSA/Catalogue</title>
</properties>

<body>
<section name="Release notes for DSA/Catalogue">
  <p>
    These notes record the cumulative changes in sucessive DSA-versions
    since the last release of 2008. The changes are complete up to version
    2011.1.
  </p>
  <p>
    Version 2011.1 brings the VOSI implementation closer to the requirements
    of the TAP standard. All sites should upgrade to this version.
  </p>

  <subsection name="Extra VOSI URLs">
    <p><i>Since 2011.1.</i></p>
    <p>
      The TAP-1.0 standard requires the VOSI resources <i>capabilities</i>,
      <i>tables</i> and <i>availability</i> to appear as direct siblings of
      the <i>sync</i> and <i>async</i> resources. The VOSI resources now appear
      in those places as well as their former locations.
    </p>
  </subsection>

  <subsection name="Utype support">
    <p><i>Since 2010.4.</i></p>
    <p>
      "Utypes" are references to formal data-models. IVOA's data models are
      hierarchical structures of prescribed data for representing certain
      patterns of information such as "spectrum" or "position in the sky", and a
      utype drawn from one of these data models is a path into this hiearchy that
      identifies one node. Where an instance of the data model is represented by
      a row of a table, the fields in that row can be marked up with utypes
      such that the implied, data-modelled structure can be recovered from the
      tabular representation.
    </p>
    <p>
      Data models and utypes are an advanced usage of relational storage. A few
      DSA installations need them but most don't. If you don't need utypes, then
      DSA 2010.4 will work with your existing configuration.
    </p>
    <p>
      To use utypes in your DSA you must change your metadoc file. First, change
      the namespace to <i></i> so that the start of the file looks like this:
    </p>
    <pre>
      &lt;DatasetDescription xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns='urn:astrogrid:schema:dsa:TableMetaDoc:v1.2'>

    </pre>
    <p>
      The XML schema for the new namespace allows an extra <i>Utype</i> element
      to be inserted in the column declarations, like this:
    </p>
    <pre>
      &lt;Column ID='POS_EQ_RA' indexed="true">
        &lt;Name>ColName1_POS_EQ_RA&lt;/Name>
        &lt;Datatype>double&lt;/Datatype>
        &lt;Description>Right ascension&lt;/Description>
        &lt;Units>deg&lt;/Units>
        &lt;UCD version="1+">pos.eq.ra;meta.main&lt;/UCD>
        <strong>&lt;Utype>agn:nucleus.pos.ra&lt;/Utype></strong>
        &lt;SkyPolarCoord>RA&lt;/SkyPolarCoord>
      &lt;/Column>
    </pre>
    <p>
      Note the position in the sequence: after data type, description, units and
      UCD but before the polar-coordinate note. The sequence is mandatory; the
      metadoc will be rejected if you put the utype out of its proper sequence.
    </p>
    <p>
      Utypes are <em>optional</em> in metadocs. You can add them only to selected
      columns if you wish. You can have at most one per column.
    </p>
    <p>
      The utype in the example above, <i>agn:nucleus.pos.ra</i> is
      hypothetical. It shows the typical form of a utype: a code identifying
      a namespace, followed by a colon, followed by a path into a tree structure,
      with nodes in the path identified by names separated by full stops.
    </p>
    <p>
      With the metadoc updates, the utypes will appear as attributes in the
      output VOTables.
    </p>
  </subsection>

  <subsection name="Choice of output formats">
    <p><i>Since 2010.3.</i></p>
    <p>
      Queries to the TAP, CEC and cone-search interfaces may now select the
      output format. Available formats are VOTable, CSV, TSV and HTML; FITS
      and pretty-printed text are not available.
    </p>
    <p>
      The format parameter can take the MIME type for the format
      or one of the keywords <i>votable</i>, <i>csv</i>, <i>tsv</i> or <i>html</i>.
      The MIME type for TSV is <i>text/tab-separated-values</i>, not
      <i>text/tsv</i>. The MIME type for VOTable is <i>application/x-votable+xml</i>
      but <i>text/xml</i> is also accepted; if the latter is set for the
      format parameter then the results will have exactly this MIME type.
    </p>
    <p>
      In previous versions, some format support was available for CEC and cone
      search (but with a different and shorter list of format names) and TAP
      was restricted to VOTable. In the current release, all the interfaces
      use TAP's format-naming scheme and support the same formats.
    </p>
    </subsection>

  <subsection name="Presentation of VOSI-tables results">
    <p><i>Since 2010.3.</i></p>
    <p>
      The XML representation of the VOSI-tables resource now has a linked
      stylesheet to show it as HTML in a web browser. The underlying
      XML-representation is unchanged.
    </p>
  </subsection>

  <subsection name="Fixed: character encoding problems">
    <p><i>Since 2010.2</i></p>
    <p>
      In the 2009 and 2010.1 releases, the character encoding for TAP results
      is not specified. Software reading the output VOTables assumes UTF-8, and
      this leads to problems if the RDBMS returns results that are in, e.g.,
      ISO-LATIN-1. The VOTables are then unreadable.
    </p>
    <p>
      In v2010.2, the encoding is set to UTF-8 in the servlets that emit VOTables.
      For the TAP interface, the encoding is also noted in the XML declaration
      of the data stream.
    </p>
  </subsection>

  <subsection name="Dependencies updates">
    <p><i>Since 2010.2</i></p>
    <p>
      Various 3rd-party jars included in DSA/Catalogue have been upgraded to
      their most-recentreleases. These include STIL (now v2.8), AstroGrid security
      (now v2010.1) and the Bouncy-Castle JSSE provider (now v1.45).
    </p>
  </subsection>

  <subsection name="Security for MultiCone">
    <i>Since 2010.1.</i>
    <p>
      The security arrangements for the normal cone-search are now extended to
      the MultiCone interface and the DirectCone version of cone-search. The
      same access-policy applies to all three.
    </p>
  </subsection>
  
  <subsection name="VOTable and UCD changes">
  <p><i>Since v2009.1.03.</i></p>
  <p>
    The version of VOTable emitted by DSA/Catalogue services changes with this
    release.
  </p>
  <ul>
    <li>Results tables from successful TAP and CEC queries are VOTable-1.2
        (previously VOTable-1.1).</li>
    <li>Results tables from successful cone searches are VOTable-1.1
        (no change).</li>
    <li>Error documents from failed TAP-queries are are VOTable-1.2
        (previously VOTable-1.1).</li>
    <li>Error documents from failed CEC calls and cone searches are
        usually VOTable-1.0 but VOTable-1.1 is possible (no change).</li>
  </ul>
  <p>
    These changes bring the implementation nearer to the IVOA standards.
  </p>
  <p>
    DSA/Catalogue now emits UCD1+ mark-up for columns in preference to UCD1.
    Whenever both UCDs are set for a column in the "metadoc" file, DSA will use
    UCD1+; if only UCD1 is set, it will use that.
  </p>
  <p>
    The property <i>datacenter.ucd.version</i> in <i>astrogrid.properties</i>,
    which used to select the preferred version, now has no useful effect.
  </p>
  <p>
    The cone-search standard <em>requires</em> a reversion to UCD1 for
    <i>ID_MAIN</i>, <i>POS_EQ_RA</i> and <i>POS_EQ_DEC</i>. These UCDs are
    imposed by special-case code for cone-search outputs and override the UCDs
    in the metadoc.
  </p>
</subsection>

  <subsection name="TAP features">
  <p><i>Since v2009.1; security features since v2009.1.02; some TAP details
  since 2009.1.01.</i></p>
  <p>
    The following features of TAP are implemented:
  </p>
  <ul>
    <li>synchronous queries by ADQL;</li>
    <li>asynchronous queries by ADQL and UWS;</li>
    <li>VOSI.</li>
  </ul>
  <p>
    These features are not available in this release:
  </p>
  <ul>
    <li>queries by PQL, including positional queries using the POS parameter;</li>
    <li>metadata queries;</li>
    <li>table uploads;</li>
    <li>delivery of results to VOSpace.</li>
  </ul>
  <p>
    Asynchronous queries via TAP leave their results in cache files on the server.
    These results remain available for 24 hours from the submission time of the
    query.
  </p>
  <p>
    <i>Since v2009.1.01.</i>
    In this release, IVOA single-sign-on authentication is implemented for the
    TAP interface; c.f. 2009.1.01. Access via TAP can be controlled.
  </p>
</subsection>

<subsection name="VOSI changes">
  <p><i>Since v2009.1.01.</i></p>
  <p>
    The VOSI resources have been rearranged to support the TAP implementation.
    In versions up to 2009, there was one set of VOSI resources for each catalogue configured
    on the web application. In 2009.1.01, there is one set of VOSI resources for
    the whole web application, but requests to those resources can be parameterized
    to get data concerning only one catalogue.
  </p>
  <p>
    For example, consider an service S configured to serve catalogues named
    C1 and C2. In v2009.1, there would have been these VOSI resources:
  </p>
  <ul>
    <li>http://where.ever/S/C1/vosi/capabilities</li>
    <li>http://where.ever/S/C1/vosi/availability</li>
    <li>http://where.ever/S/C1/vosi/tables</li>
    <li>http://where.ever/S/C1/vosi/ceaapplication</li>
    <li>http://where.ever/S/C2/vosi/capabilities</li>
    <li>http://where.ever/S/C2/vosi/availability</li>
    <li>http://where.ever/S/C2/vosi/tables</li>
    <li>http://where.ever/S/C2/vosi/ceaapplication</li>
  </ul>
  <p>
    In v2009.1.02, the VOSI metadata are available through the following URIs:
  </p>
  <ul>
    <li>http://where.ever/S/VOSI/availability</li>
    <li>http://where.ever/S/VOSI/capabilities</li>
    <li>http://where.ever/S/VOSI/tables</li>
    <li>http://where.ever/S/VOSI/applications</li>
    <li>http://where.ever/S/VOSI/capabilities?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/tables?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/applications?COLLECTION=C1</li>
    <li>http://where.ever/S/VOSI/capabilities?COLLECTION=C2</li>
    <li>http://where.ever/S/VOSI/tables?COLLECTION=C2</li>
    <li>http://where.ever/S/VOSI/applications?COLLECTION=C2</li>
  </ul>
  <p>
    The basic, unparameterized resources return metadata for all catalogues.
    The <i>COLLECTION</i> parameter on the resource selects metadata for just
    one catalogue. The availability resource does not support this parameter.
  </p>
</subsection>

<subsection name="Records of queries">
  <p><i>Since v2009.1.01.</i></p>
  <p>
    The progress of queries used to be recorded in memory rather than on disc.
    This lead to DSA installations forgetting their queries when restarted.
    Further, when results of queries were not dispatched to VOSpace they too
    were kept in memory, leading to eventual failure of the service when the
    heap filled up.
  </p>
  <p>
    Starting with v2009.1.01, all results of queries are kept on disc, in a location
    specifed during configuration. Please
    see the description of the <a href="cache-directory.html">cache directory</a>
    for details.
  </p>
</subsection>


  <subsection name="Upgrading">
    <p>
      There are many changes in configuration since 2008. To upgrade to the
      current version, look up the current version of your installation in the
      list below and apply the changes as described in the following sub-sections.
    </p>
    <ul>
      <li>2011.1: no configuration changes.</li>
      <li>2010.4: Update metadoc if utype support is desired.</li>
      <li>2010.3: No configuration changes</li>
      <li>2009.1.04: no configuration changes.</li>
      <li>2009.1.03: no configuration changes.</li>
      <li>2009.1.02: update UCD version.</li>
      <li>2009.1.01: set <i>datacenter.cache.directory</i>;
                     set <i>tap.access.policy</i>;
                     reinitialize job database.</li>
      <li>2009.1: update UCD version;
                  set <i>datacenter.cache.directory</i>;
                  set <i>cone.search.access.policy</i>;
                  set <i>tap.access.policy</i>;
                  reinitialize job database;
                  reregister.</li>
      <li>2008 series:  update UCD version;
                        set <i>datacenter.url.secure</i>;
                        set <i>datacenter.cache.directory</i>;
                        set <i>cone.search.access.policy</i>;
                        set <i>tap.access.policy</i>;
                        reinitialize job database;
                        reregister.</li>
      <li>Older versions: start again with a new configuration.</li>
    </ul>
    <dl>
      <dt>Update UCD version</dt>
      <dd>
        DSA now uses only the UCD1+ entries from the
        <a href="metadoc-cooked.html">metadoc</a>. If you previously had
        <i>datacenter.ucd.version</i> set to "1" in
        <a href="astrogrid-properties.html"><i>astrogrid.properties</i></a> and
        UCD1 entries in your metadoc, then you should change the metadoc to
        use equivalent UCD1+ values. You should delete <i>datacenter.ucd.version</i>
        from <i>astrogrid.properties</i> as it no longer has any effect.
      </dd>
      <dd>
        If you defer this reconfiguration, queries will still work, but the
        UCD attributes in the VOTables will be missing or blank where columns
        do not have UCD1+ mark-up in the metadoc.
      </dd>
      <dt>datacenter.cache.directory</dt>
      <dd>
        Set this property in
        <a href="astrogrid-properties.html"><i>astrogrid.properties</i></a>.
        It determines where records of asynchronous queries are kept.
      </dd>
      <dt>datacenter.url.secure</dt>
      <dd>
        Set this property in 
        <a href="astrogrid-properties.html"><i>astrogrid.properties</i></a>.
        It determines the base URI for registration of secure interfaces.
      </dd>
      <dt>cone.search.access.policy</dt>
      <dd>
        Set this property in
        <a href="astrogrid-properties.html"><i>astrogrid.properties</i></a>.
        It determines the <a href="security.html">security</a> for
        cone-search interfaces.
      </dd>
      <dt>tap.access.policy</dt>
      <dd>
        Set this property in
        <a href="astrogrid-properties.html"><i>astrogrid.properties</i></a>.
        It determines the <a href="security.html">security</a> for
        cone-search interfaces.
      </dd>
      <dt>Reinitialize job database</dt>
      <dd>
        While the DSA is not running, delete all files in the directory
        configured by <i>datacenter.cache.directory</i> leaving the directory
        empty; do not delete the directory itself. If the directory does not
        yet exist, create it.
      </dd>
      <dd>
        Now start DSA.
      </dd>
      <dd>
        With a web-browser, go to the front page of your DSA web-application.
        Follow the "view job database" link from the menu on the left of the
        page. This takes you to an administration page and you will have to
        give a password.
      </dd>
      <dd>
        Press the button marked "Destroy and recreate the database". You should
        now see headings for an empty table of jobs.
      </dd>
      <dd>
        This action is necessary when the schema of the job database changes.
        In this case, just pressing the button won't work unless you first
        clear out the old files from the cache directory. If the schema hasn't
        changed, you can initialize the database using the button without
        deleting the files.
      </dd>
      <dt>Reregister</dt>
      <dd>
        When DSA grows a new interface, or if the interfaces URIs change, it's
        time to update the registration. Only the machine-readable details of
        the interfaces change; you don't need to re-enter the other details by
        hand.
      </dd>
      <dd>
        With a web-browser, go to the front page of your web application.
        Follow the link "Manage registrations" in the menu on the left of
        the page. This takes you to an administration page and you will have to
        give a password.
      </dd>
      <dd>
        On the registration page, read the guidance and then press the
        "Load service metadata" button. This will update the technical part of
        your registration in your publishing registry.
      </dd>
      <dd>
        There will be a delay, typically two hours, before the registration
        changes appear in the main registries visible to users. During this
        time, users won't be able to work the interfaces that have changed in
        your web application because they see the wrong addresses. You might
        prefer to take your DSA installation off-line until the registration
        has propagated.
      </dd>
      <dt>Update metadoc version</dt>
      <dd>
        Change the namespace declared in your metadoc to
        <i>urn:astrogrid:schema:dsa:TableMetaDoc:v1.2</i>. This allowes the
        addition of <i>utype</i> elements as discussed above. After changing
        the metadoc, reload DSA (or restart Tomcat) to enable the changes.
      </dd>
    </dl>
  </subsection>



</section>
</body>

</document>
