<?xml version="1.0" ?>
<!DOCTYPE document SYSTEM "xdoc.dtd" >
<document>
  <properties>
    <title>Workflow Activities</title>

    <author email="Noel.Winstanley@manchester.ac.uk">Noel
    Winstanley</author>
  </properties>

  <body>
    <section name="Introduction">
		<p>This document describes the 
			basic structures of the workflow document format. </p>					
    </section>

	<section name="Definition">
		<p> Workflows are expressed as XML documents, conforming to the schema 
			<code>http://www.astrogrid.org/schema/AGWorkflow/v1</code> (and 
			included schema) </p>
			<dl>				
			<dd>formatted html</dd>
			<dt><a href="http://www.astrogrid.org/maven/docs/HEAD/astrogrid-workflow-objects/schema/Workflow.html">http://www.astrogrid.org/maven/docs/HEAD/astrogrid-workflow-objects/schema/Workflow.html</a></dt>
			<dd>schema definitions</dd>
			<dt><a href="http://www.astrogrid.org/viewcvs/astrogrid/workflow-objects/schema/">http://www.astrogrid.org/viewcvs/astrogrid/workflow-objects/schema/</a></dt>
			</dl>		
			<subsection name="Schematic View"><p>
				      <img src="workflow-hierarchy.jpg" />
</p>				</subsection>
	</section>
	
<section name="Top Level">
	<p> The root of the workflow document is a <code>&lt;workflow&gt;</code> 
		element. It has a required <code>name</code> attribute, and an optional 
		<code>description</code> element. </p>
	<p> Most importantly, a workflow contains a <code>&lt;sequence&gt;</code> 
		element, which contains the list of activities to perform in this 
		workflow. </p>

<p> During execution of a workflow, progress messages are added to the workflow 
	document. These are stored in the <code>&lt;job-execution-record&gt;</code> 
	child element of workflow. This is described in more detail in a <a href="userguide-running.html">later section</a>. </p>

<p> There's also a <code>Credentials</code> element tree, which describes the 
	identity and authentication of the account to run the workflow under. We'll 
	ignore this at the moment. </p>

<p> Finally, there's a id attribute that occurs on many of the workflow 
	constructs. This is used within the implementation, and should not be set 
	when writing a workflow. </p>

<subsection name="Example ">

<p>In the examples in this document, I've omitted namespace declarations and 
	prefixes for clarity. You'll need these (sadly) if writing real workflow 
	documents by hand.. </p>

 <source><![CDATA[
<?xml version="1.0" ?>
<workflow name="a workflow">
  <description>description of the workflow</description>
  <sequence>
   <!-- omitted-->
  </sequence>
  <Credentials>
   <!-- omitted -->
  </Credentials>
  <job-execution-record>
   <!-- omitted -->
  </job-execution-record>
</workflow>
]]></source>	
</subsection>
</section>

	<section name="Sequencing">
		<subsection name="Sequence">
<p>The <code>&lt;sequence&gt;</code> element composes a set of activities into a linear structure - they will be executed sequentially in order.</p>
</subsection>
<subsection name="Flow">
<p>The <code>&lt;flow&gt;</code> element composes a set of activities into a parallel structure - the activities in the flow may be executed in any order, or even concurrently</p>
</subsection>
<subsection name="Examples">
<source><![CDATA[
<!-- execute some activities sequentially -->
<sequence>
   <step name="a">
      <-- omitted -->
   </step>
   <step name="b">
      <!-- omitted -->
   </step>
</sequence>
]]></source>
<source><![CDATA[
<!-- execute same activites concurrently -->
<flow>
   <step name="a">
      <!-- omitted -->
   </step>
   <step name="b">
      <!-- omitted -->
   </step>
</flow>
]]></source>
</subsection>
	</section>
	
	<section name="Step">
		
		<p> The <code>&lt;step&gt;</code> element is an activity that performs 
			a call to a CEA application. <em>(link to cea)</em> . This element 
			has a required <code>name</code> attribute, and an optional 
			<code>description</code> child element. </p>. 
		<p> When a step is executed, the progress of the execution is recorded 
			as a <code>&lt;step-execution-record&gt;</code> child element. This 
			is covered in a <a href="userguide-running.html">later section</a> 
			</p>
			
		<subsection name="Tool">
			<p> The <code>step</code> element contains a 
				<code>&lt;tool&gt;</code> element, which specifies: the name of 
				the CEA application to execute; which interface of the 
				application to call; and the input and output parameter values 
				to the tool call. </p>
		</subsection>
		<subsection name="Parameter">
			<p>Input and Output Parameters to a call are defined by 
				<code>&lt;parameter&gt;</code> elements. The <code>name</code> 
				attribute defines the name of the parameter, while the content 
				of the <code>&lt;value&gt;</code> child element defines the 
				value for this parameter. The parameter value may contain <a 
				href="userguide-jescript.html">script 
				expressions</a> delimited by <code>${..}</code> - these are 
				evaluated into strings before the parameters are passed to CEA. 
				</p>
			<p> Finally the <code>indirect</code> attribute alters how the 
				value of the parameter is interpreted by CEA. If set to 
				<code>true</code>, the parameter value is expected to be a URI 
				that points to a resource that contains the actual value for 
				this parameter. If set to <code>false</code> (the default), 
				then the parameter value is expected inline. </p>
			<p>For output parameters, if the <code>indirect</code> attribute is set to <code>true</code>
				then the value of the parameter specifies the location to store this result. However, if the <code>indirect</code>
				attribute is set to <code>false</code>, then this result value will be returned direct to the JES server</p>
		</subsection>		
		<subsection name="Accessing Results of the Tool Execution">
			<p> Sometimes the results of a CEA Tool execution are required 
				further on in the workflow - for example, so that they can be 
				passed to another CEA Tool, or to select branches of the 
				workflow to execute. </p>
			<p> The <code>step</code> element has an optional attribute 
				<code>result-var</code>. If set, this attribute defines the 
				name of a workflow variable in which the results computed by 
				the CEA Application will be stored after the application 
				finishes executing. </p>
			<p> Once exection completes, the variable named will contain an 
				instance of <code>java.util.Map</code>. The map will have 
				entries for all output parameters that were configured to return direct. The keys in the map are are the output parameter names,
				while the values are the results returned from the CEA application.
				 </p>
		</subsection>
		<subsection name="Example">
			<source><![CDATA[
<step name="exampleStep" result-var="exampleStepResults">
   <description>an example</description>
   <tool name="anAuthority/aCeaApplication" interface="simpleInterface">
      <input>
	  <!-- constant parameter value-->
         <parameter name="RA"><value>21</value></parameter>
	  <!-- script expression referring to previously defined workflow variable -->
         <parameter name="DEC"><value>${dec}</value></parameter>
	  <!-- indirect parameter value -->
		 <parameter name="Radius" indirect="true"><value>ivo://aCommunity/user#user/root/parameters.txt</value></parameter>
      </input>
      <output>
         <!-- write results to handy ftp server, uses script expression to generate timestamped output filename -->
         <parameter name="results" indirect="true"><value>ftp://aServer/myResults/results-${new java.util.Date()}.votable</value></parameter>
      </output>
   </tool>
</step>
]]></source>
		</subsection>
	</section>

    

  </body>
</document>

