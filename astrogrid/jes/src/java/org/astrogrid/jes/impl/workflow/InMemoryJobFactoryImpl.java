/*$Id: InMemoryJobFactoryImpl.java,v 1.2 2004/02/27 00:46:03 nw Exp $
 * Created on 11-Feb-2004
 *
 * Copyright (C) AstroGrid. All rights reserved.
 *
 * This software is published under the terms of the AstroGrid 
 * Software License version 1.2, a copy of which has been included 
 * with this distribution in the LICENSE.txt file.  
 *
**/
package org.astrogrid.jes.impl.workflow;

import org.astrogrid.jes.job.Job;
import org.astrogrid.jes.job.JobException;
import org.astrogrid.jes.job.NotFoundException;
import org.astrogrid.jes.job.SubmitJobRequest;
import org.astrogrid.jes.types.v1.JobURN;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

/** Noddy implementation of job factory that keeps all job records in memory only.
 * @author Noel Winstanley nw@jb.man.ac.uk 11-Feb-2004
 *
 */
public class InMemoryJobFactoryImpl extends AbstractJobFactoryImpl {
    /** Construct a new InMemoryJobFactoryImpl
     * 
     */
    public InMemoryJobFactoryImpl() {
        super();
        log.info("In Memory Job Factory");
    }
    protected Map m = new HashMap();
    
    /** method to access internal map - for testing only */
    public Map getInternalStore() {
        return m;
    }
    
    protected Object getHashKey(JobImpl j) {
        return j.getId(); // some issues about efficient hashing of long strings, but we don't care right now.
    }
    
    /**
     * @see org.astrogrid.jes.job.JobFactory#createJob(org.astrogrid.jes.job.SubmitJobRequest)
     */
    public Job createJob(SubmitJobRequest req) throws JobException {
        JobImpl j = super.buildJob(req);
        m.put(getHashKey(j),j);
        return j;
    }
    /**
     * @see org.astrogrid.jes.job.JobFactory#findJob(java.lang.String)
     */
    public Job findJob(JobURN jobURN) throws JobException {
        Job j = (Job)m.get(jobURN);
        if (j == null) {
            throw new NotFoundException("Job for urn " + jobURN + " not found"); 
        }
        return j;
    }
    /**
     * @see org.astrogrid.jes.job.JobFactory#findUserJobs(java.lang.String, java.lang.String, java.lang.String)
     */
    public Iterator findUserJobs(String userid, String community, String __ignored) {
        assert userid != null;
        assert community != null;
        Collection results = new ArrayList();
        for (Iterator i = m.values().iterator(); i.hasNext(); ) {
            JobImpl j = (JobImpl)i.next();
            if (community.equalsIgnoreCase(j.getCommunity()) && userid.equalsIgnoreCase(j.getUserId())) {
                results.add(j);
            }
        }
        return results.iterator();        
    }
    /**
     * @see org.astrogrid.jes.job.JobFactory#deleteJob(org.astrogrid.jes.job.Job)
     */
    public JobURN deleteJob(Job job) throws JobException {
        if (m.get(job.getId()) == null) {
            throw new NotFoundException("no job for " + job.getId());
        }
        m.remove(getHashKey((JobImpl)job));
        return job.getId();
    }
    /**
     * @see org.astrogrid.jes.job.JobFactory#updateJob(org.astrogrid.jes.job.Job)
     */
    public void updateJob(Job job) throws JobException {
        // a no-op - we're not cloning or anything, so its already happened!!
        if (m.get(job.getId()) == null) {
            throw new NotFoundException("no job for" + job.getId());
        }
        log.info("Using in-memory store - updateJob is a no-op");
    }
}


/* 
$Log: InMemoryJobFactoryImpl.java,v $
Revision 1.2  2004/02/27 00:46:03  nw
merged branch nww-itn05-bz#91

Revision 1.1.2.6  2004/02/19 13:40:09  nw
updated to fit new interfaces

Revision 1.1.2.5  2004/02/17 15:55:41  nw
updated to throw exceptions when jobs are not found

Revision 1.1.2.4  2004/02/17 12:25:38  nw
improved javadocs for classes

Revision 1.1.2.3  2004/02/17 10:58:38  nw
altered to implement cut down facade interface, matched with types
generated by wsdl2java

Revision 1.1.2.2  2004/02/12 12:54:47  nw
worked in inversion of control pattern - basically means that
components have to be assembled, rather than self-configuring
from properties in config files. so easier to test each component in isolation

Revision 1.1.2.1  2004/02/12 01:14:01  nw
castor implementation of jes object model
 
*/