<?xml version="1.0" ?>
<!-- extension maven script -->
<project xmlns:j="jelly:core"  xmlns:maven="jelly:maven" xmlns:deploy="deploy" default="jar:jar">

<property name="webapp.root" location="${basedir}/target/astrogrid-jes" />
<property name="webapp.docs" location="${basedir}/target/webapp-docs" />
<property name="working.dir" location="${basedir}/target/tmp" />
<goal name="jes" prereqs="clean,site,webapp-site,war:war" />

<!-- astrogrid standard goals -->

<goal name="astrogrid-clean" prereqs="clean"/>

<goal name="astrogrid-build-site">
        <!-- would be nice to add info on delegate project.xml to this site too -->
        <attainGoal name="faq"/>
        <attainGoal name="pdf"/>
        <attainGoal name="site" />
</goal>

<goal name="astrogrid-build-artifact">

        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar" />
        <attainGoal name="jar" />
        <attainGoal name="war" />
</goal>

<goal name="astrogrid-build-snapshot">

        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar:snapshot" />
        <attainGoal name="jar:snapshot" />
        <!-- no goal to build a snapshot in target directory - gah -->
        <attainGoal name="war" />
</goal>

<goal name="astrogrid-install-site" prereqs="astrogrid-build-site" />

<goal name="astrogrid-install-artifact">
        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar:install" />
        <maven:maven descriptor="${basedir}/deployment/project.xml" goals="jar:install" />
        <maven:maven descriptor="${basedir}/installer/project.xml" goals="javaapp:install" />        
        <attainGoal name="jar:install" />
        <attainGoal name="war:install" />
</goal>

<goal name="astrogrid-install-snapshot">

        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar:install-snapshot" />
        <maven:maven descriptor="${basedir}/deployment/project.xml" goals="jar:install-snapshot" />
        <maven:maven descriptor="${basedir}/installer/project.xml" goals="javaapp:install-snapshot" />        
        <attainGoal name="jar:install-snapshot" />
        <attainGoal name="war:install-snapshot" />
</goal>

<goal name="astrogrid-deploy-site" prereqs="astrogrid-build-site">
        <attainGoal name="site:sshdeploy" />
</goal>

<goal name="astrogrid-deploy-snapshot">

        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar:deploy-snapshot" />
        <maven:maven descriptor="${basedir}/deployment/project.xml" goals="jar:deploy-snapshot" />
        <maven:maven descriptor="${basedir}/installer/project.xml" goals="javaapp:deploy-snapshot" />        
        <attainGoal name="jar:deploy-snapshot" />
        <attainGoal name="war:deploy-snapshot" />
</goal>


<goal name="astrogrid-deploy-artifact">

        <attainGoal name="clean" /> <!-- necessary - otherwise delegate will contain all classes-->
        <maven:maven descriptor="${basedir}/delegate-project.xml" goals="jar:deploy" />
        <maven:maven descriptor="${basedir}/deployment/project.xml" goals="jar:deploy" />
        <maven:maven descriptor="${basedir}/installer/project.xml" goals="javaapp:deploy" />        
        <attainGoal name="jar:deploy" />
        <attainGoal name="war:deploy" />
</goal>


<!-- end astrogrid standard goals -->


<!-- hooks into existing goals -->

<preGoal name="war:war" >
        <attainGoal name="site-webapp" />
        <copy todir="${maven.war.build.dir}/${pom.artifactId}" overwrite="yes">
                <fileset dir="${webapp.docs}" />
        </copy>
</preGoal>


<goal name="site-webapp"
        description="generate webapp docs to a temp direcotry, for inclusion later in webapp - work around for a bug that stops build">

        <echo> generating webapp site into ${webapp.docs}" </echo>
        <mkdir dir="${working.dir}" />
        <!-- first merge two doc sets - site xdocs take precendence  -->
        <property name="tmp.docs" location="${basedir}/target/webapp-docs-src" />
        <mkdir dir="${tmp.docs}" />
        <copy todir="${tmp.docs}">
                <fileset dir="${basedir}/site-xdocs" />
        </copy>
        <copy overwrite="false" todir="${tmp.docs}">
                <fileset dir="${basedir}/xdocs" />
        </copy>
        <!-- now copy in schema and stuff extracted by grab-schema-->
        <copy overwrite="false" todir="${tmp.docs}">
                <fileset dir="${working.dir}" />
        </copy>
        <j:set var="maven.docs.dest" value="${webapp.docs}" />
        <j:set var="maven.docs.src" value="${tmp.docs}" />
        <j:set var="maven.xdoc.poweredby.title" value="Provided by Astrogrid" />
        <j:set var="maven.xdoc.poweredby.url" value="http://www.astrogrid.org" />
        <j:set var="maven.xdoc.poweredby.image" value="http://www.astrogrid.org/images/AGlogo" />
        <j:set var="maven.ui.banner.background" value="#FF0000" />
        <j:set var="maven.ui.banner.foreground" value="#000000" />
        <mkdir dir="${webapp.docs}" />
        <!-- <attainGoal name="site:generate" /> -->
        <attainGoal name="xdoc:generate-from-pom" />
        <attainGoal name="javadoc:generate" />
        <!--<attainGoal name="maven-jxr-plugin:report" /> - seems to fail at the moment. odd -->
        <attainGoal name="xdoc" />
        <!-- todo - sort out custom navigation bit -->

</goal>






<!-- end of war stuff -->



<!-- stand - alone goals - not addons to main build -->
<property name="tomcat.host" value="localhost"/>
<property name="tomcat.port" value="8080"/>

<property name="tomcat.url" value="http://${tomcat.host}:${tomcat.port}"/>
<property name="tomcat.manager.url" value="${tomcat.url}/manager"/>
<property name="tomcat.path" value="/astrogrid-jes" />

     <goal name="showconfig" description="A goal to show important configuration settings">
                 <echo message="tomcat.home    : ${tomcat.home}"/>
                <echo message="tomcat.manager.username     : ${tomcat.manager.username}"/>
                <echo message="tomcat.manager.password     : ${tomcat.manager.password}"/>
                <echo message="maven.war.src               : ${maven.war.src}"/>
                 <echo message=""/>
    </goal>

<goal name="jes-undeploy" prereqs="tomcat-declare-tasks">
  <tomcat-remove url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}"
          path="${tomcat.path}" />
</goal>

<goal name="jes-deploy" prereqs="tomcat-declare-tasks">
  <tomcat-deploy url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}"
          path="${tomcat.path}" war="file://${basedir}/target/astrogrid-jes.war"/>
</goal>

<!-- boilerplate below here -->

  <goal name="axis-declare-tasks">
     <taskdef resource="axis-tasks.properties"  classpathref="maven.dependency.classpath" />
  </goal>

<!-- tomcat tools -->
<goal name="tomcat-declare-tasks">
   <!-- Configure the custom Ant tasks for the Manager application -->
  <taskdef name="tomcat-deploy"    classname="org.apache.catalina.ant.DeployTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-install"   classname="org.apache.catalina.ant.InstallTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-list"      classname="org.apache.catalina.ant.ListTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-reload"    classname="org.apache.catalina.ant.ReloadTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-remove"    classname="org.apache.catalina.ant.RemoveTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-resources" classname="org.apache.catalina.ant.ResourcesTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-roles"     classname="org.apache.catalina.ant.RolesTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-start"     classname="org.apache.catalina.ant.StartTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-stop"      classname="org.apache.catalina.ant.StopTask" classpathref="maven.dependency.classpath"/>
  <taskdef name="tomcat-undeploy"  classname="org.apache.catalina.ant.UndeployTask" classpathref="maven.dependency.classpath"/>
</goal>

</project>
