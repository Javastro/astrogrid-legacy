package org.astrogrid.jes.impl;

import junit.framework.TestCase;
// JUnitDoclet begin import
import org.astrogrid.jes.impl.JobImpl;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
* @TODO This test was autogenerated - needs fleshing out
*/


public class JobImplTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  org.astrogrid.jes.impl.JobImpl jobimpl = null;
  // JUnitDoclet end class
  
  public JobImplTest(String name) {
    // JUnitDoclet begin method JobImplTest
    super(name);
    // JUnitDoclet end method JobImplTest
  }
  
  public org.astrogrid.jes.impl.JobImpl createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new org.astrogrid.jes.impl.JobImpl();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    jobimpl = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    jobimpl = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testGetPreparedStatement() throws Exception {
    // JUnitDoclet begin method getPreparedStatement
    // JUnitDoclet end method getPreparedStatement
  }
  
  public void testGetConnection() throws Exception {
    // JUnitDoclet begin method getConnection
    // JUnitDoclet end method getConnection
  }
  
  public void testSetGetId() throws Exception {
    // JUnitDoclet begin method setId getId
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setId(tests[i]);
      assertEquals(tests[i], jobimpl.getId());
    }
    // JUnitDoclet end method setId getId
  }
  
  public void testSetIsDirty() throws Exception {
    // JUnitDoclet begin method setDirty isDirty
    boolean[] tests = {true, false};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setDirty(tests[i]);
      assertEquals(tests[i], jobimpl.isDirty());
    }
    // JUnitDoclet end method setDirty isDirty
  }
  
  public void testSetGetName() throws Exception {
    // JUnitDoclet begin method setName getName
    java.lang.String[] tests = {"", "a", "A", "�", "�", "0123456789", "012345678901234567890"};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setName(tests[i]);
      assertEquals(tests[i], jobimpl.getName());
    }
    // JUnitDoclet end method setName getName
  }
  
  public void testSetGetDescription() throws Exception {
    // JUnitDoclet begin method setDescription getDescription
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setDescription(tests[i]);
      assertEquals(tests[i], jobimpl.getDescription());
    }
    // JUnitDoclet end method setDescription getDescription
  }
  
  public void testSetGetDate() throws Exception {
    // JUnitDoclet begin method setDate getDate
    java.util.Date[] tests = {new java.util.Date(), new java.util.Date(0), null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setDate(tests[i]);
      assertEquals(tests[i], jobimpl.getDate());
    }
    // JUnitDoclet end method setDate getDate
  }
  
  public void testSetGetCommunity() throws Exception {
    // JUnitDoclet begin method setCommunity getCommunity
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setCommunity(tests[i]);
      assertEquals(tests[i], jobimpl.getCommunity());
    }
    // JUnitDoclet end method setCommunity getCommunity
  }
  
  public void testSetGetUserId() throws Exception {
    // JUnitDoclet begin method setUserId getUserId
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setUserId(tests[i]);
      assertEquals(tests[i], jobimpl.getUserId());
    }
    // JUnitDoclet end method setUserId getUserId
  }
  
  public void testGetJobSteps() throws Exception {
    // JUnitDoclet begin method getJobSteps
    // JUnitDoclet end method getJobSteps
  }
  
  public void testAddJobStep() throws Exception {
    // JUnitDoclet begin method addJobStep
    // JUnitDoclet end method addJobStep
  }
  
  public void testRemoveJobStep() throws Exception {
    // JUnitDoclet begin method removeJobStep
    // JUnitDoclet end method removeJobStep
  }
  
  public void testGetImplementation() throws Exception {
    // JUnitDoclet begin method getImplementation
    // JUnitDoclet end method getImplementation
  }
  
  public void testSetGetFactoryImpl() throws Exception {
    // JUnitDoclet begin method setFactoryImpl getFactoryImpl
    org.astrogrid.jes.impl.JobFactoryImpl[] tests = {new org.astrogrid.jes.impl.JobFactoryImpl(), null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setFactoryImpl(tests[i]);
      assertEquals(tests[i], jobimpl.getFactoryImpl());
    }
    // JUnitDoclet end method setFactoryImpl getFactoryImpl
  }
  
  public void testSetGetDocumentXML() throws Exception {
    // JUnitDoclet begin method setDocumentXML getDocumentXML
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setDocumentXML(tests[i]);
      assertEquals(tests[i], jobimpl.getDocumentXML());
    }
    // JUnitDoclet end method setDocumentXML getDocumentXML
  }
  
  public void testSetGetStatus() throws Exception {
    // JUnitDoclet begin method setStatus getStatus
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setStatus(tests[i]);
      assertEquals(tests[i], jobimpl.getStatus());
    }
    // JUnitDoclet end method setStatus getStatus
  }
  
  public void testSetGetGroup() throws Exception {
    // JUnitDoclet begin method setGroup getGroup
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setGroup(tests[i]);
      assertEquals(tests[i], jobimpl.getGroup());
    }
    // JUnitDoclet end method setGroup getGroup
  }
  
  public void testSetGetToken() throws Exception {
    // JUnitDoclet begin method setToken getToken
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobimpl.setToken(tests[i]);
      assertEquals(tests[i], jobimpl.getToken());
    }
    // JUnitDoclet end method setToken getToken
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(JobImplTest.class);
    // JUnitDoclet end method testcase.main
  }
}
