package org.astrogrid.jes.job;

import java.util.ArrayList;

import junit.framework.TestCase;

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
* @TODO getters and setters test, more thorough tests needed
*/

public class ToolTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  /** Tool under test */
  private org.astrogrid.jes.job.Tool tool = null;
  /**
   * Ctor for test
   * @param name name of test
   */
  // JUnitDoclet end class

  public ToolTest(final String name) {
    // JUnitDoclet begin method ToolTest
    super(name);
    // JUnitDoclet end method ToolTest
  }

  /**
   * construct a tool to test
   * @return said tool
   */
  public final org.astrogrid.jes.job.Tool createInstance() {
    // JUnitDoclet begin method testcase.createInstance
    return new org.astrogrid.jes.job.Tool();
    // JUnitDoclet end method testcase.createInstance
  }

  /** Set up test
   * @see junit.framework.TestCase#setUp()
   */
  protected final void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    tool = createInstance();
    // JUnitDoclet end method testcase.setUp
  }

  /** Clean up after test
   * @see junit.framework.TestCase#tearDown()
   */
  protected final void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    tool = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  /**
   * Automatically generated test of getter and setter
   * Unfortunately getter and setter don't act on same type so more difficult to test...
   */
  public final void testSetGetInputParameters() {
    // JUnitDoclet begin method setInputParameters getInputParameters
    ArrayList al = new ArrayList();
    final int doesntMatter = 5;
    al.add(new Integer(doesntMatter));

    java.util.List[] tests = { al };

    for (int i = 0; i < tests.length; i++) {
      tool.setInputParameters(tests[i]);
      assertEquals(
        tests[i].iterator().next(),
        tool.getInputParameters().next());
      //Assumes that the iterator returned by get*() hasn't been used
    }
    // JUnitDoclet end method setInputParameters getInputParameters
  }

  /**
   * Automatically generated test of getter and setter
   */
  public final void testSetGetName() {
    // JUnitDoclet begin method setName getName
    java.lang.String[] tests =
      {
        "",
        " ",
        "a",
        "A",
        "�",
        "�",
        "0123456789",
        "012345678901234567890",
        "\n",
        null };

    for (int i = 0; i < tests.length; i++) {
      tool.setName(tests[i]);
      assertEquals(tests[i], tool.getName());
    }
    // JUnitDoclet end method setName getName
  }

  /**
   * Automatically generated test of getter and setter
   * Unfortunately getter and setter don't act on same type so more difficult to test...   
   */
  public final void testSetGetOutputParameters() {
    // JUnitDoclet begin method setOutputParameters getOutputParameters
    ArrayList al = new ArrayList();
    final int doesntMatter = 5;
    al.add(new Integer(doesntMatter));
    java.util.List[] tests = { al };

    for (int i = 0; i < tests.length; i++) {
      tool.setOutputParameters(tests[i]);
      //    Assumes that the iterator returned by get*() hasn't been used
      assertEquals(
        tests[i].iterator().next(),
        tool.getOutputParameters().next());
    }
    // JUnitDoclet end method setOutputParameters getOutputParameters
  }
  /**
   * Automatically generated test of getter and setter
   */
  public final void testSetGetParent() {
    // JUnitDoclet begin method setParent getParent
    org.astrogrid.jes.job.JobStep[] tests =
      { new org.astrogrid.jes.job.JobStep(null), null };

    for (int i = 0; i < tests.length; i++) {
      tool.setParent(tests[i]);
      assertEquals(tests[i], tool.getParent());
    }
    // JUnitDoclet end method setParent getParent
  }

  /**
   * @TODO flesh this test out
   * @throws Exception ?
   */
  public void testToJESXMLString() throws Exception {
    // JUnitDoclet begin method toJESXMLString
    // JUnitDoclet end method toJESXMLString
  }

  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  * @throws Exception never
  */
  public final void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }

  /**
   * Run the tests in the text ui
   * @param args ignored
   */
  public static void main(final String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ToolTest.class);
    // JUnitDoclet end method testcase.main
  }
}
