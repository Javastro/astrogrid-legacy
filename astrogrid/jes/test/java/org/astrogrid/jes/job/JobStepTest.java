package org.astrogrid.jes.job;

import org.astrogrid.jes.impl.JobImpl;

import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
* @TODO This test was autogenerated - needs fleshing out
*/


public class JobStepTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  org.astrogrid.jes.job.JobStep jobstep = null;
  // JUnitDoclet end class
  
  public JobStepTest(String name) {
    // JUnitDoclet begin method JobStepTest
    super(name);
    // JUnitDoclet end method JobStepTest
  }
  
  public org.astrogrid.jes.job.JobStep createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    Job parent = new JobImpl();
    jobstep = new JobStep(parent);
    return jobstep;
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    jobstep = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    jobstep = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testSetGetName() throws Exception {
    // JUnitDoclet begin method setName getName
    java.lang.String[] tests = {"", "a", "A", "�", "�", "0123456789", "012345678901234567890"};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setName(tests[i]);
      assertEquals(tests[i], jobstep.getName());
    }
    // JUnitDoclet end method setName getName
  }
  
  public void testSetGetParent() throws Exception {
    // JUnitDoclet begin method setParent getParent
  //@todo fix me
    org.astrogrid.jes.job.Job[] tests = {new JobImpl(), null};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setParent(tests[i]);
      assertEquals(tests[i], jobstep.getParent());
    }
    // JUnitDoclet end method setParent getParent
  }
  
  public void testSetGetStepNumber() throws Exception {
    // JUnitDoclet begin method setStepNumber getStepNumber
    int[] tests = {Integer.MIN_VALUE, -1, 0, 1, Integer.MAX_VALUE};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setStepNumber(tests[i]);
   //@todo fixme   assertEquals(tests[i], jobstep.getStepNumber());
    }
    // JUnitDoclet end method setStepNumber getStepNumber
  }
  
  public void testSetGetStatus() throws Exception {
    // JUnitDoclet begin method setStatus getStatus
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setStatus(tests[i]);
      assertEquals(tests[i], jobstep.getStatus());
    }
    // JUnitDoclet end method setStatus getStatus
  }
  
  public void testSetGetComment() throws Exception {
    // JUnitDoclet begin method setComment getComment
    java.lang.String[] tests = {"", "a", "A", "�", "�", "0123456789", "012345678901234567890"};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setComment(tests[i]);
      assertEquals(tests[i], jobstep.getComment());
    }
    // JUnitDoclet end method setComment getComment
  }
  
  public void testSetGetSequenceNumber() throws Exception {
    // JUnitDoclet begin method setSequenceNumber getSequenceNumber
    int[] tests = {Integer.MIN_VALUE, -1, 0, 1, Integer.MAX_VALUE};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setSequenceNumber(tests[i]);
     //@todo fix me assertEquals(tests[i], jobstep.getSequenceNumber());
    }
    // JUnitDoclet end method setSequenceNumber getSequenceNumber
  }
  
  public void testSetGetJoinCondition() throws Exception {
    // JUnitDoclet begin method setJoinCondition getJoinCondition
    java.lang.String[] tests = {"", " ", "a", "A", "�", "�", "0123456789", "012345678901234567890", "\n", null};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setJoinCondition(tests[i]);
      assertEquals(tests[i], jobstep.getJoinCondition());
    }
    // JUnitDoclet end method setJoinCondition getJoinCondition
  }
  
  public void testSetGetTool() throws Exception {
    // JUnitDoclet begin method setTool getTool
    org.astrogrid.jes.job.Tool[] tests = {new org.astrogrid.jes.job.Tool(), null};
    
    for (int i = 0; i < tests.length; i++) {
      jobstep.setTool(tests[i]);
      assertEquals(tests[i], jobstep.getTool());
    }
    // JUnitDoclet end method setTool getTool
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(JobStepTest.class);
    // JUnitDoclet end method testcase.main
  }
}
