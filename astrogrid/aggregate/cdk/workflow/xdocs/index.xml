<?xml version="1.0" encoding="UTF-8"?>
<project>
  <properties>
    <author email="Noel.Winstanley@manchester.ac.uk">Noel Winstanley</author>

    <title>Workflow Client Developer Kit</title>
  </properties>

  <body>

	<section name="Workflow Client Developer Kit"><p>
    This project assembles a Client Developer Kit (CDK) for developers that wish to
    interact with the Astrogrid workflow services (Jes, CEA). It also contains
    the delegates for accessing the core Astrogrid services (Myspace / VoSpace, Registry, Community).
    (which are also available separately in the smaller Core CDK).
    </p><p>
    It contains the necessary delegate jars, plus their dependencies, and example configuration.
    </p>
	<p>
	For documentation on the Astrogrid Workflow system, see the userguide: <a href="http://www.astrogrid.org/maven/docs/HEAD/jes/">html</a>, 
	<a href="http://www.astrogrid.org/maven/docs/HEAD/jes/astrogrid-workflow-userguide.pdf">pdf</a>
	</p>
</section>
    <section name="Workflow Builder"><p>
	This library is the preferred interface into the Astrogrid Workflow system. It presents a facade over the Registry, JES and VOSpace clients, and provides the user with convenient methods for
	<ul>
	<li>Building Workflow documents</li>
	<li>Querying the Registry for available CEA applications</li>
	<li>Constructing workflow steps that callCEA applications</li>
	<li>Loading and Saving workflow documents to VOSpace</li>
	<li>Submitting Workflow documents to JES</li>
	<li>Tracking execution progress, retreiving results</li>
	</ul>
	<a href="http://www.astrogrid.org/maven/docs/HEAD/workflow/index.html">project</a>, 
	<a href="http://www.astrogrid.org/maven/docs/HEAD/workflow/apidocs/org/astrogrid/portal/workflow/intf/package-summary.html">javadoc</a>
    </p>
    </section>
    <section name="Job Execution Service (JES)"><p>
	It's also possible to call the JES webservice directly via it's delegate:
	<a href="http://www.astrogrid.org/maven/docs/HEAD/jes/index.html">project</a>,
	<a href="http://www.astrogrid.org/maven/docs/HEAD/jes/apidocs/index.html">javadoc</a>
    </p>
    </section>
    <section name="Common Execution Architecture (CEA)"><p>
	The JES server dispatches computation steps to CEA servers, which publish applications and data sources. To interact directly with a CEA webservice, use the following delegate.
	<a href="http://www.astrogrid.org/maven/docs/HEAD/applications/multiproject/astrogrid-cea-client/">project</a>
	<a href="http://www.astrogrid.org/maven/docs/HEAD/applications/multiproject/astrogrid-cea-client/apidocs/index.html">javadoc</a>
    </p>
    </section>
    <section name="Core Clients"><p>
        The delegates for the core astrogrid services (community, vospace, registry) are also available in this package.
        The documentation for these clients is avalable in the <a href="http://www.astrogrid.org/maven/docs/HEAD/aggregate/multiproject/astrogrid-cdk-core/index.html">core CDK project</a>
    </p>
    </section>

    <section name="Common Classes"><p>
    Some common classes
    (such as <a href="http://www.astrogrid.org/maven/docs/HEAD/common/apidocs/org/astrogrid/store/Ivorn.html">Ivorn</a> and
    <a href="http://www.astrogrid.org/maven/docs/HEAD/common/apidocs/org/astrogrid/community/User.html">User</a>) are defined in a separaete project
    <a href="http://www.astrogrid.org/maven/docs/HEAD/common/index.html">Project page</a>,
    <a href="http://www.astrogrid.org/maven/docs/HEAD/common/apidocs/index.html">Javadoc</a>
    </p></section>

    <section name="Configuration"><p>
    All astrogrid components use a common configuration system.
    This allows properties to be set using either JNDI (if available), a configuration file, or System properties.
    The simplest method is to have a file named <code>astrogrid.properties</code> on the classpath.
    See the <a href="http://www.astrogrid.org/maven/docs/HEAD/common/apidocs/org/astrogrid/config/package-summary.html">javadoc</a>
    for further details.

    This CDK requires the following keys to be set:
    <dl>
    <dt><code>org.astrogrid.community.ident</code></dt>
        <dd>The identifier of the local community. For example <code>org.astrogrid.release</code></dd>
    <dt><code>org.astrogrid.registry.query.endpoint</code></dt>
        <dd>Endpoint of the registry query service. For example
        <code>http://katatjuta.star.le.ac.uk:8080/astrogrid-registry-SNAPSHOT/services/RegistryQuery</code></dd>
    <dt><code>org.astrogrid.registry.admin.endpoint</code></dt>
        <dd>Endpoint of the registry admin service. For example
        <code>http://katatjuta.star.le.ac.uk:8080/astrogrid-registry-SNAPSHOT/services/RegistryAdmin</code></dd>
    <dt><code>jes.job.controller.endpoint</code></dt>
        <dd>The endpoint of the local community's jes server. For example
        <code>http://katatjuta.star.le.ac.uk:8080/astrogrid-jes-SNAPSHOT/services/JobControllerService</code>
	<dt><code>org.astrogrid.community.default.vospace</code></dt>
		<dd>Registry key for default myspace service for this community. E.g. <code>ivo://org.astrogrid.release/myspace</code></dd>		
        </dd>

    </dl>
    </p></section>

    <section name="Development"><p>
    It's possible to deploy a mini-astrogrid (<i>Astrogrid in a Box</i>) to a single machine. This provides
    a convenient target to test clients against.
    <a href="http://www.astrogrid.org/maven/docs/HEAD/integrationTests/install.html">Installation Instructions</a>
    </p></section>
    
  </body>
</project>

