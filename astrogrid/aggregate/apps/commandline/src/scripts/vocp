#!/usr/bin/env groovy
import org.apache.commons.cli.*
import org.astrogrid.ui.script.*;

class Vocp {
// setup commandline options

Options o = new Options()
Vocp() {
o.addOption("u","user",true,"username (optional)")
 .addOption("p","password",true,"password (optional)")
 .addOption("c","community",true,"community (optional)")
}


astrogrid;
user;
account;
homeIvorn;
userIvorn;

static void main(String[] args) {
        (new Vocp()).run(args)
}
void run(args) {
parser = new PosixParser()
try {// catch all exceptio handler.

line = parser.parse(o,args)
login(line)
src = mkFull(line.getArgs()[0])
dest = mkFull(line.getArgs()[1])

if (dest.startsWith("ivo://") && src.startsWith("ivo://")) { // its a remotve move..
   client = astrogrid.createVoSpaceClient user
   client.copy(src,dest)
}
else if (dest.startsWith("ivo://") && isRemoteURL(src)) {//if dest is an ivorn, can use an optimal method
   client = astrogrid.createVoSpaceClient user
  client.putUrl(src.toURL(),dest,false)
}
else { // have to pipe it ourselves.
  is = null
  os = null
  if (src == "-") {
        is = System.in
  } else {
    is = astrogrid.ioHelper.getExternalValue(src).read()
  }

  if (dest == "-") {
        os =  System.out
  } else {
     os = astrogrid.ioHelper.getExternalValue(dest).write()
  }

  is.withStream{ iss |
        os.withStream{ oss |
                astrogrid.ioHelper.bufferedPipe(iss,oss)
                }
        }
}

} catch (Exception e) { // catch all, for better reporting.
        println("An Error occurred :" + e.class.name)
        println(e.message)
        printHelp()
        System.exit(-1)
}
}

void printHelp() {
        (new HelpFormatter()).printHelp(
<<<DOC
vocp [options] <src-file> <dest-file>
where src, dest may be any of
http://... a http resource
ftp://...  a ftp resource
ivo://...  a myspace resource
file:/...  a file resource
-          standard input / output.
vocp also supports an abridged notation for myspace locations, in the form
#/fred/path - equivalent to ivo://default-community/fred#/fred/path

anything else is interpreted as a local file path

VOCP will use the most efficient method of moving data from src to dest - i.e.
if both are remote, no data will pass through this client.

NB: writing to http:// and ftp:// urls is likely to fail.
DOC
,o)
}

String mkFull(s) { // make this the full form of whatever it is.
   u = null;
   if (["ivo://","http://","file:/","ftp://","-"].any{s.startsWith(it)}) {
        return s;
   }
    tok = s.tokenize("/").reverse();
   if (s.startsWith "#/") {
       tok.pop()// skip junk
        u = tok.pop()
        return astrogrid.objectBuilder.newIvorn(account.community,u,s.substring 1).toString()
   } else  if (s.startsWith "#") { // error tolerant, of not qute correct syntax
        u = tok.pop().substring 1        
        return astrogrid.objectBuilder.newIvorn(account.community,u,"/" + s.substring(1)).toString()
   } else { // assume to be file.
    return (new java.io.File(s)).toURL().toString()
   }
}




boolean isRemoteURL(src) {
  return ["http://","ftp://"].any{src.startsWith(it)}
}

void login(line) {
u=null
if (line.hasOption "u") {
        u = line.getOptionValue "user"
}

p=null
if (line.hasOption "p") {
        p = line.getOptionValue "password"
}
comm=null
if (line.hasOption "c") {
        comm = line.getOptionValue "community"
}
  env = LoginFactory.login(u,comm,p);
  astrogrid = env.astrogrid;
  user = env.user
  account = env.account
  homeIvorn = env.homeIvorn
  userIvorn = env.userIvorn

}

}
