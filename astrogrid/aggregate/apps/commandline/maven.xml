<?xml version="1.0"?>
<!-- extension maven script -->
<project xmlns:j="jelly:core" default="astrogrid-build-site" xmlns:deploy="deploy">


        <goal name="astrogrid-deploy-site">
            <echo message="Please deploy the site docs from the base myspace project"/>
        </goal>
        <goal name="astrogrid-deploy-snapshot" prereqs="dist:deploy-bin-snapshot"/>
        <goal name="astrogrid-build-snapshot" prereqs="dist:build-bin">
                <echo>NB - no goal exists to build dist snapshot - called dist:build-bin instead</echo>
        </goal>
        <goal name="astrogrid-install-snapshot" prereqs="dist:build-bin">
                <echo>NB - no goal exist to install dist - calling dist:build-bin instead</echo>
        </goal>
        <goal name="astrogrid-deploy-artifact" prereqs="dist:deploy-bin"/>
        <goal name="astrogrid-build-artifact" prereqs="dist:build-bin"/>
        <goal name="astrogrid-install-artifact" prereqs="dist:build-bin">
                <echo>NB - no goal exist to install dist - calling dist:build-bin instead</echo>
        </goal>


<!-- don't want to precompile these groovy scripts..-->
<!-- just use compilation as a checking step of the build.. -->
        <postGoal name="java:compile">
                <attainGoal name="groovy-compile" />
        </postGoal>

        <goal name="groovy-compile">
          <!-- declare the compiler task -->
          <taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc"
            classpathref="maven.dependency.classpath" />
            <!-- our sources don't have the .groovy extension - so take a copy
            of them and add this -->
          <mkdir dir="${basedir}/target/ignored" />
          <mkdir dir="${basedir}/target/gsrc" />
          <copy todir="${basedir}/target/gsrc">
                <fileset dir="${basedir}/src/scripts" />
                <mapper type="glob" from="*" to="*.groovy" />
          </copy>
          <!-- try to compile these sources -->
          <groovyc destdir="${basedir}/target/ignored"
                srcdir="${basedir}/target/gsrc"
                listfiles="true">
                 <classpath>
                        <pathelement location="${basedir}/target/classes" />
                        <path refid="maven.dependency.classpath"/>
                </classpath>
          </groovyc>
        </goal>


<!-- set up dist to do what we want -->
<!-- have to override goal defined for cdk apps, as this project inherits from them.-->
        <goal name="patch-bin">
                <!-- rename our docs, to prevent them getting overwritten -->
                <mkdir dir="${maven.dist.bin.assembly.dir}/commandline-docs" />
                <move todir="${maven.dist.bin.assembly.dir}/commandline-docs">
                        <fileset dir="${maven.dist.bin.assembly.dir}/docs" />
                </move>
                <!-- copy in our dependent distros. -->
                <deploy:copy-deps todir="${maven.build.dir}"/>
                <!-- unpackage groovy dist, copy into dist -->
                <untar compression="gzip" dest="${maven.build.dir}">
                        <fileset dir="${maven.build.dir}">
                                <include name="*groovy*.tar.gz" />
                        </fileset>
                </untar>
                <move todir="${maven.dist.bin.assembly.dir}">
                        <fileset dir="${maven.build.dir}/groovy-1.0-beta-7"/> <!-- vulnerable to version change - watch this -->
                </move>
                <!-- unpackage cdk -->
                <untar compression="gzip" dest="${maven.build.dir}">
                        <fileset dir="${maven.build.dir}">
                                <include name="astrogrid-cdk*.tar.gz" />
                        </fileset>
                </untar>
                <!-- copy in cdk docs -->
                <mkdir dir="${maven.dist.bin.assembly.dir}/cdk-docs" />
                <move todir="${maven.dist.bin.assembly.dir}/cdk-docs">
                        <fileset dir="${maven.build.dir}/astrogrid-cdk-scripting-${astrogrid.aggregate.version}/docs" />
                </move>
                <!-- copy in jars  from cdk-->
                <move todir="${maven.dist.bin.assembly.dir}/lib">
                        <fileset dir="${maven.build.dir}/astrogrid-cdk-scripting-${astrogrid.aggregate.version}">
                                <include name="*.jar" />
                                <!-- groovy already comes with versions of these .. -->
                                <exclude name="junit*" />
                                <exclude name="commons-collections*" />
                                <exclude name="commons-logging*" />
                                <exclude name="xerces*" />
                                <exclude name="xml-apis*" />
                        </fileset>
                </move>
                <!-- move jar generated from this project into lib -->
                <move todir="${maven.dist.bin.assembly.dir}/lib">
                        <fileset dir="${maven.dist.bin.assembly.dir}">
                                <include name="commandline-*.jar" />
                        </fileset>
                </move>
                <!-- copy in other jar dependencies -->
                <move todir="${maven.dist.bin.assembly.dir}/lib">
                        <fileset dir="${maven.build.dir}">
                                <include name="commons-cli-*.jar" />
                                <include name="jescript-shell-*.jar" />
                        </fileset>
                </move>
                <!-- copy in ag tools -->
                <mkdir dir="${maven.dist.bin.assembly.dir}/astrogrid-tools" />
                <copy todir="${maven.dist.bin.assembly.dir}/astrogrid-tools">
                        <fileset dir="${basedir}/src/scripts" />
                </copy>
                <!-- copy in configuration files -->
                <copy todir="${maven.dist.bin.assembly.dir}/conf">
                        <fileset dir="${basedir}/src/conf" />
                </copy>
                <!-- copy in new binaries -->
                <copy todir="${maven.dist.bin.assembly.dir}/bin">
                        <fileset dir="${basedir}/src/bin" />
                </copy>
                <!-- move docs around a bit -->
                <mkdir dir="${maven.dist.bin.assembly.dir}/groovy-docs" />
                <move todir="${maven.dist.bin.assembly.dir}/groovy-docs">
                        <fileset dir="${maven.dist.bin.assembly.dir}/docs" />
                </move>
                <delete dir="${maven.dist.bin.assembly.dir}/docs" />
                <move todir="${maven.dist.bin.assembly.dir}/docs">
                        <fileset dir="${maven.dist.bin.assembly.dir}/commandline-docs" />
                </move>
                <delete dir="${maven.dist.bin.assembly.dir}/commandline-docs"/>
                <!-- add final index page -->
 <echo file="${maven.dist.bin.assembly.dir}/README">
  README
  =======
  See docs/index.html

   </echo>
        </goal>




</project>
