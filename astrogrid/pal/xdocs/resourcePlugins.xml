<?xml version="1.0"?>
<!-- $Id: resourcePlugins.xml,v 1.2 2005/07/26 11:36:51 clq2 Exp $ -->
<document>
  <properties>
    <title>PAL Registry Resource Plugins</title>
    <author email="dave@ast.cam.ac.uk">Dave Morris</author>
    <author email="mch@roe.ac.uk">Martin Hill</author>
  </properties>
<body>
   
<section name='Introduction'>
<p>PAL webapps will automatically generate the minimum registry documents required
for the data to appear on AstroGrid and the VO. </p>
<p>However some datasets can provide
extra access features (such as the Simple Image Access Protocols) and these
require extra documents to be registered; PAL webapps include a mechanism
for plugging in generators of these documents</p>
</section>

<section name='Configuration'>
<p>The configuration properties are a set with the name 'datacenter.resource.plugin'.
For property files these are listed as property keys with a value on the end like this:
</code>
datacenter.resource.plugin.1=org.astrogrid.tableserver.metadata.TabularDbResources
datacenter.resource.plugin.2=org.astrogrid.tableserver.metadata.TabularSkyServiceResources
datacenter.resource.plugin.3=org.astrogrid.datacenter.metadata.AuthorityConfigPlugin
</code>
</p>
<p>The simplest way to add bespoke extra documents is to store the document as a
file on the disk, and set the config like this:
</code>
datacenter.metadoc.file=/disk1/webapps/pal-ssa.metadata.xml
</code>
</p>
<p>Similarly, it could be stored at some remote URL and referenced by the
<code>datacenter.metadoc.url</code> property.
</p>
</section>

<section name='Writing your own'>
<p>Write a class to implement the <code>org.astrogrid.datacenter.metadata.VoResourcePlugin</code>
interface = see its javaodc.  Configure your datacenter to use it by adding it to the list of <code>datacenter.resource.plugin</code>
keys in the configuration, as given above.
</p>
</section>

</body>
</html>

