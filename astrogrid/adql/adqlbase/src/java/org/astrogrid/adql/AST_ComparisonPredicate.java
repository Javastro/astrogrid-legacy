/* Generated By: AdqlStoX.jjt,v 1.33.2.4 2006-12-19 14&JJTree: Do not edit this line. AST_ComparisonPredicate.java */

package org.astrogrid.adql;

import org.astrogrid.adql.v1_0.beans.ComparisonPredType ;
import org.astrogrid.adql.v1_0.beans.ComparisonType ;
import org.astrogrid.adql.v1_0.beans.ScalarExpressionType ;
import org.apache.xmlbeans.XmlObject ;
import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;

public class AST_ComparisonPredicate extends SimpleNode {
    
    private static Log log = LogFactory.getLog( AST_ComparisonPredicate.class ) ;

    public AST_ComparisonPredicate(AdqlStoX p, int id) {
        super(p, id);
    }

    public void jjtClose() {
//        ScalarExpressionType[] args = new ScalarExpressionType[2] ;
//        args[0] = (ScalarExpressionType)children[0].getGeneratedObject() ;
//        args[1] = (ScalarExpressionType)children[2].getGeneratedObject() ;
//        ComparisonPredType cpType = ComparisonPredType.Factory.newInstance() ;
//        ComparisonType comp = (ComparisonType)children[1].getGeneratedObject() ;    
//        cpType.setArgArray( args ) ;
//        args = cpType.getArgArray() ;
//        children[0].exchangeGeneratedObject(args[0]) ;
//        children[1].exchangeGeneratedObject(args[1]) ;
//        cpType.xsetComparison( comp ) ; 
//        children[2].exchangeGeneratedObject( cpType.xgetComparison() ) ;
//        setGeneratedObject( cpType ) ;
    }
    
    public void buildXmlTree( XmlObject xo ) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_ComparisonPredicate.buildXmlTree()" ) ; 
        ComparisonPredType cpType = (ComparisonPredType)xo.changeType( ComparisonPredType.type ) ;
        children[0].buildXmlTree( cpType.addNewArg() ) ;
        children[2].buildXmlTree( cpType.addNewArg() ) ;
        children[1].buildXmlTree( ComparisonType.Factory.newInstance() ) ;
        ComparisonType comp = (ComparisonType)children[1].getGeneratedObject() ;    
        cpType.xsetComparison( comp ) ; 
        this.generatedObject = cpType ;
        super.buildXmlTree(xo) ;
        if( log.isTraceEnabled() ) exitTrace( log, "AST_ComparisonPredicate.buildXmlTree()" ) ; 
    }

}
