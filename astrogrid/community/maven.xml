<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid community components.
    |
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/community/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: dave $</cvs:author>
    | <cvs:date>$Date: 2004/03/08 17:20:56 $</cvs:date>
    | <cvs:version>$Revision: 1.9 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.9  2004/03/08 17:20:56  dave
    |   Merged changes to the maven goals
    |
    |   Revision 1.8.6.2  2004/03/08 16:57:52  dave
    |   Added deploy-site goal
    |
    |   Revision 1.8.6.1  2004/03/08 16:37:41  dave
    |   Restored site goal
    |
    |   Revision 1.8  2004/03/08 13:42:33  dave
    |   Updated Maven goals.
    |   Replaced tabs with Spaces.
    |
    |   Revision 1.7.2.1  2004/03/08 12:10:05  dave
    |   Modified Maven build scripts to use new AstroGrid goals
    |
    |   Revision 1.7  2004/03/05 17:19:59  dave
    |   Merged development branch, dave-dev-200402211936, into HEAD
    |
    |   Revision 1.6.2.1  2004/02/22 01:50:47  dave
    |   Refactored install and deploy goals
    |
    |   Revision 1.6  2004/02/20 21:11:04  dave
    |   Merged development branch, dave-dev-200402120832, into HEAD
    |
    |   Revision 1.5.2.4  2004/02/20 20:09:13  dave
    |   Added tomcat project to the clean
    |
    |   Revision 1.5.2.3  2004/02/16 15:20:54  dave
    |   Changed tabs to spaces
    |
    |   Revision 1.5.2.2  2004/02/16 14:13:20  dave
    |   Fixed JNDI install scripts to use different methods
    |
    |   Revision 1.5.2.1  2004/02/14 22:24:09  dave
    |   Test toolkit for the install and tomcat sub-projects
    |
    |   Revision 1.5  2004/02/12 08:12:13  dave
    |   Merged development branch, dave-dev-200401131047, into HEAD
    |
    |   Revision 1.3.4.2  2004/02/10 00:40:37  dave
    |   Added install tooklit to the Maven build.
    |   Changed Maven project to use 'org.astrogrid' as the group name.
    |   Fixed dependencies that used the original group name.
    |
    |   Revision 1.3.4.1  2004/01/17 13:54:18  dave
    |   Removed password from AccountData
    |
    |   Revision 1.3  2004/01/07 10:45:37  dave
    |   Merged development branch, dave-dev-20031224, back into HEAD
    |
    |   Revision 1.2.4.11  2004/01/07 07:01:06  dave
    |   Tried to fix war file name
    |
    |   Revision 1.2.4.10  2004/01/07 06:43:39  dave
    |   Fixed remove command for jar:deploy-snapshot post goal
    |
    |   Revision 1.2.4.9  2004/01/07 06:41:27  dave
    |   Fixed remove command for jar:deploy-snapshot post goal
    |
    |   Revision 1.2.4.8  2004/01/07 06:31:07  dave
    |   Fixed snapshot version in jar:deploy-snapshot
    |
    |   Revision 1.2.4.7  2004/01/07 06:06:53  dave
    |   Added tidy up for jar_deploy-snapshot
    |
    |   Revision 1.2.4.6  2004/01/07 05:04:52  dave
    |   Fixed jar:deploy problem
    |
    |   Revision 1.2.4.5  2004/01/07 04:29:15  dave
    |   Moved properties into shared files and tested deployment goals
    |
    |   Revision 1.2.4.4  2004/01/05 04:11:05  dave
    |   Fixed the maven.xml import
    |   Changed the primary goal to install-artifact
    |
    |   Revision 1.2.4.3  2004/01/01 01:43:34  dave
    |   Moved common code into parent maven.xml script
    |
    | </cvs:log>
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
    >

    <!--+
        | Current build script goals.
        | These are hooks to catch the goals called by the current build script.
        | The build script goals like java:compile don't really apply in the context of the multiproject build.
        +-->

    <!--+
        | Hook for build script java:compile
        | Calls install-artifact to build and install our SNAPSHOT jars.
    <goal name="java:compile">
        <attainGoal name="clean"/>
        <attainGoal name="install-snapshot"/>
    </goal>
        +-->

    <!--+
        | Hook for build script clover:html-report
        | Does nothing.
    <goal name="clover:html-report">
    </goal>
        +-->

    <!--+
        | Hook for build script site:site
        | Calls 'site' on the relevant sub-projects.
    <goal name="site:site">
        <attainGoal name="site"/>
    </goal>
        +-->

    <!--+
        | Hook for build script site:fsdeploy
        | Fix to check if we have defined an alternative location in our build.properties.
    <preGoal name="site:fsdeploy">
        <ant:echo message="${pom.artifactId} - site:fsdeploy"/>
        <ant:echo message=" build  location : ${maven.docs.dest}"/>
        <ant:echo message=" deploy location : ${site.deploy.directory}"/>
        <core:set var="deployLocation" value="${site.deploy.directory}"/>
        <core:if test="${!empty(deployLocation)}">
            <core:expr value="${pom.setSiteDirectory(deployLocation)}"/>
        </core:if>
    </preGoal>
        +-->

    <!--+
        | Hook for build script jar:deploy-snapshot
        | Calls 'deploy-snapshot' on the relevant sub-projects.
        | I can't make this a goal, because it breaks the real call to
        | 'jar:deploy-snapshot' in the sub-project tasks.
    <preGoal name="jar:deploy-snapshot">
        <attainGoal name="deploy-snapshot"/>
    </preGoal>
        +-->

    <!--+
        | Hook for build script jar:deploy-snapshot
        | Delete the extra jar file.
    <postGoal name="jar:deploy-snapshot">
        <ant:echo message=""/>
        <ant:echo message="Post processing jar:deploy-snapshot"/>
        <core:set var="snapshotVersion" value="${pom.getPluginContext('maven-jar-plugin').getVariable('snapshotVersion')}"/>
        <core:set var="snapshotRemove"  value="cd ${maven.repo.central.directory}/${pom.artifactDirectory}/jars ; rm astrogrid-community-SNAPSHOT.jar ; rm astrogrid-community-${snapshotVersion}.jar"/>
        <ant:echo message="  Command  : ${maven.ssh.executable}"/>
        <ant:echo message="  Username : ${maven.username}"/>
        <ant:echo message="  Server   : ${maven.repo.central}"/>
        <ant:echo message="  Command  : ${snapshotRemove}"/>
        <ant:exec dir="." executable="${maven.ssh.executable}">
            <ant:arg line="-l ${maven.username} ${maven.repo.central} '${snapshotRemove}'"/>
        </ant:exec>
    </postGoal>
        +-->

    <!--+
        | Hook for build script war:deploy-snapshot
        | Does nothing, 'deploy-snapshot' will have been called by 'jar:deploy-snapshot'.
    <goal name="war:deploy-snapshot">
        <ant:echo message="Skipping war:deploy-snapshot, already done by jar:deploy-snapshot"/>
    </goal>
        +-->

    <!-- ================ Astrogrid goals ================ -->

    <!--+
        | These are just handlers for the top level AstroGrid goals.
        +-->
    <goal name="astrogrid-clean">
        <attainGoal name="clean"/>
    </goal>

    <goal name="astrogrid-build-snapshot">
        <attainGoal name="install-snapshot"/>
    </goal>

    <goal name="astrogrid-install-snapshot">
        <attainGoal name="install-snapshot"/>
    </goal>

    <goal name="astrogrid-deploy-snapshot">
        <attainGoal name="install-snapshot"/>
    </goal>

    <goal name="astrogrid-build-artifact">
        <attainGoal name="install-artifact"/>
    </goal>

    <goal name="astrogrid-install-artifact">
        <attainGoal name="install-artifact"/>
    </goal>

    <goal name="astrogrid-deploy-artifact">
        <attainGoal name="install-artifact"/>
    </goal>

    <goal name="astrogrid-build-site">
        <attainGoal name="build-site"/>
    </goal>

    <goal name="astrogrid-deploy-site">
        <attainGoal name="deploy-site"/>
    </goal>

    <!-- ================ Reactor goals ================ -->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!--+
        | Clean out all of the build targets.
        +-->
    <goal name="clean">
        <!--+
            | Clean our sub-projects.
            +-->
        <maven:reactor
            basedir="${basedir}"
            postProcessing="false"
            includes="common/project.xml,client/project.xml,server/project.xml,webapp/project.xml,install/project.xml,tomcat/project.xml"
            goals="clean"
            banner="Cleaning build targets : "
            ignoreFailures="false"
            />
        <!--+
            | Clean this project target.
            +-->
        <attainGoal name="clean:clean"/>
    </goal>

    <!--+
        | Build and install our components.
        +-->
    <goal name="install-artifact">
        <maven:reactor
            basedir="${basedir}"
            postProcessing="false"
            includes="common/project.xml,client/project.xml,server/project.xml,webapp/project.xml,install/project.xml"
            goals="install-artifact"
            banner="Building component artifact : "
            ignoreFailures="false"
            />
    </goal>

    <!--+
        | Build and install our snapshots.
        +-->
    <goal name="install-snapshot">
        <maven:reactor
            basedir="${basedir}"
            postProcessing="false"
            includes="common/project.xml,client/project.xml,server/project.xml,webapp/project.xml,install/project.xml"
            goals="install-snapshot"
            banner="Building snapshot artifact : "
            ignoreFailures="false"
            />
    </goal>

    <!--+
        | Build and deploy our components.
        +-->
    <goal name="deploy-artifact">
        <maven:reactor
            basedir="${basedir}"
            postProcessing="false"
            includes="common/project.xml,client/project.xml,server/project.xml,webapp/project.xml,install/project.xml"
            goals="deploy-artifact"
            banner="Deploying snapshot artifact : "
            ignoreFailures="false"
            />
    </goal>

    <!--+
        | Build and deploy our snapshots.
        +-->
    <goal name="deploy-snapshot">
        <maven:reactor
            basedir="${basedir}"
            postProcessing="false"
            includes="common/project.xml,client/project.xml,server/project.xml,webapp/project.xml,install/project.xml"
            goals="deploy-snapshot"
            banner="Deploying snapshot artifact : "
            ignoreFailures="false"
            />
    </goal>

    <!--+
        | Build our project website.
        +-->
    <goal name="build-site">
        <!--+
            | Generate our project site(s).
            +-->
        <attainGoal name="site"/>
    </goal>

    <!--+
        | Build and deploy our project website.
        +-->
    <goal name="deploy-site">
        <!--+
            | Generate our project site(s).
            +-->
        <attainGoal name="site"/>
        <!--+
            | Deploy our project site.
            +-->
        <attainGoal name="site:fsdeploy"/>
    </goal>

    <!--+
        | Build our project website.
        | This can be called fom outside, or recursively by site:generate.
        | (required as a target goal for the reactor in multiproject:site)
        +-->
    <goal name="site">
        <!--+
            | Check if we have already been called.
            | This target can be called fom outside, or recursively by site:generate.
            +-->
        <ant:echo message="${pom.artifactId} - site"/>
        <ant:echo message="  recursionTest : ${recursionTest}"/>
        <core:switch on="${recursionTest}">
            <!--+
                | If we have already been called for this project.
                +-->
            <core:case value="${pom.artifactId}">
                <!--+
                    | Generate the project site by calling the site plugin goal.
                    +-->
                <ant:echo message="Build artifact  : ${pom.artifactId}"/>
                <ant:echo message="Build version   : ${pom.currentVersion}"/>
                <ant:echo message="Build directory : ${maven.build.dir}"/>
                <ant:echo message="Building top level project site : "/>
                <attainGoal name="site:generate"/>
            </core:case>
            <!--+
                | If this is the first time we have been called.
                +-->
            <core:default>
                <!--+
                    | Set our recursion check.
                    +-->
                <core:set var="recursionTest" value="${pom.artifactId}"/>
                <!--+
                    | Generate our sub-project sites by calling the multiproject plugin goal.
                    +-->
                <attainGoal name="multiproject:site"/>
            </core:default>
        </core:switch>
    </goal>

</project>
