package org.astrogrid.community.server.ca;

import java.io.File;
import java.io.IOException;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  guy
 */
public class CertificateAuthorityForm extends javax.swing.JFrame {
  
  /**
   * The DN on which all entity DNs for the CA are based.
   * This is written in the syntax accepted by OpenSSL - i.e.
   * /C=UK/O=foo/OU=bar, etc.
   */
  private String rootDn = "";
  
  /**
   * The file to which the private key is written.
   */
  private File keyFile = new File("ca-key.pem");
  
  /**
   * The file to which the certificate is written.
   */
  private File certificateFile = new File("ca-certificate.pem");
  
  /**
   * The file to which the serial number is written.
   */
  private File serialNumberFile = new File("ca-serial.txt");
  
  /**
   * The directory in which the CA files are written.
   */
  private File caFileDirectory = new File(".");
  
  /**
   * Creates new form CertificateAuthorityForm
   */
  public CertificateAuthorityForm() {
    super("Certificate-authority generator");
    initComponents();
    this.setCountryCodes();
    this.subjectChanged();
    
    // This can throw if the value of this.caFileDirectory is wierd.
    // It isn't wierd on construction, so an exception is a major system
    // failure.
    try {
      this.fileNamesChanged();
    } catch (IOException ex) {
      throw new RuntimeException(ex);
    }
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    institutionField = new javax.swing.JTextField();
    subjectField = new javax.swing.JLabel();
    countryCodeField = new javax.swing.JComboBox();
    voProjectField = new javax.swing.JComboBox();
    jLabel4 = new javax.swing.JLabel();
    groupField = new javax.swing.JTextField();
    generateButton = new javax.swing.JButton();
    jLabel5 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    passwordField = new javax.swing.JPasswordField();
    jLabel7 = new javax.swing.JLabel();
    keyFileField = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    certificateFileField = new javax.swing.JLabel();
    serialNumberFileField = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    browseButton = new javax.swing.JButton();
    caFileDirectoryField = new javax.swing.JLabel();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    exitButton = new javax.swing.JMenuItem();
    jMenu2 = new javax.swing.JMenu();
    nameHelpButton = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    jLabel1.setText("Country code");

    jLabel2.setText("Virtual Observatory project");

    jLabel3.setText("Institution");

    institutionField.setColumns(24);
    institutionField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        institutionFieldKeyReleased(evt);
      }
    });

    subjectField.setText("/CN=CA");

    countryCodeField.setEditable(true);
    countryCodeField.setMaximumRowCount(32);
    countryCodeField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FR", "UK", "US" }));
    countryCodeField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        countryCodeFieldActionPerformed(evt);
      }
    });
    countryCodeField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        countryCodeFieldKeyReleased(evt);
      }
    });

    voProjectField.setEditable(true);
    voProjectField.setMaximumRowCount(42);
    voProjectField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ArVO", "AstroGrid", "Aus-VO", "China-VO", "CVO", "ESA-VO", "France-VO", "GAVO", "HVO", "JVO", "KVO", "NVO", "RVO", "SVO", "VO-I", "VObs.it", "SVO" }));
    voProjectField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        voProjectFieldActionPerformed(evt);
      }
    });
    voProjectField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        voProjectFieldKeyReleased(evt);
      }
    });

    jLabel4.setText("Group within institution (optional)");

    groupField.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        groupFieldKeyReleased(evt);
      }
    });

    generateButton.setText("Generate CA files");
    generateButton.setToolTipText("Writes the CA details into the files named above.");
    generateButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        generateButtonActionPerformed(evt);
      }
    });

    jLabel5.setText("CA's formal name:");

    jLabel6.setText("Password for CA's private key");

    jLabel7.setText("Private-key file:");

    keyFileField.setText("jLabel8");
    keyFileField.setToolTipText("CA's private key is written here");

    jLabel8.setText("Certificate file:");

    jLabel9.setText("Serial-number file:");

    certificateFileField.setText("etc.");
    certificateFileField.setToolTipText("CA's certificate is written here.");

    serialNumberFileField.setText("jLabel11");

    jLabel10.setText("Directory for CA files");

    browseButton.setText("Browse...");
    browseButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        browseButtonActionPerformed(evt);
      }
    });

    caFileDirectoryField.setText("jLabel11");

    jMenu1.setText("File");
    exitButton.setText("Exit");
    exitButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        exitButtonActionPerformed(evt);
      }
    });

    jMenu1.add(exitButton);

    jMenuBar1.add(jMenu1);

    jMenu2.setText("Help");
    nameHelpButton.setText("CA-generator help");
    nameHelpButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        nameHelpButtonActionPerformed(evt);
      }
    });

    jMenu2.add(nameHelpButton);

    jMenuBar1.add(jMenu2);

    setJMenuBar(jMenuBar1);

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
          .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
              .add(jLabel1)
              .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
              .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 201, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
              .add(jLabel6)
              .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 226, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
              .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 40, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
              .add(layout.createSequentialGroup()
                .add(subjectField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(23, 23, 23))
              .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                  .add(layout.createSequentialGroup()
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                      .add(org.jdesktop.layout.GroupLayout.LEADING, voProjectField, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                      .add(org.jdesktop.layout.GroupLayout.LEADING, countryCodeField, 0, 336, Short.MAX_VALUE))
                    .add(152, 152, 152))
                  .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, groupField)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, institutionField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, passwordField)))
                .addContainerGap())))
          .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
              .add(org.jdesktop.layout.GroupLayout.LEADING, generateButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
              .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                  .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .add(jLabel7)
                  .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(32, 32, 32)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                  .add(serialNumberFileField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                  .add(certificateFileField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                  .add(keyFileField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 578, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                    .add(caFileDirectoryField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(browseButton)
                    .add(6, 6, 6)))))
            .add(23, 23, 23))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .addContainerGap()
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel1)
          .add(countryCodeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel2)
          .add(voProjectField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel3)
          .add(institutionField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel4)
          .add(groupField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .add(17, 17, 17)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel6)
          .add(passwordField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .add(subjectField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        .add(45, 45, 45)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel10)
          .add(browseButton)
          .add(caFileDirectoryField))
        .add(13, 13, 13)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel7)
          .add(keyFileField))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel8)
          .add(certificateFileField))
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
          .add(jLabel9)
          .add(serialNumberFileField))
        .add(28, 28, 28)
        .add(generateButton)
        .add(52, 52, 52))
    );
    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
    final JFileChooser fc = new JFileChooser();
    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int returnVal = fc.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
       this.caFileDirectory = fc.getSelectedFile();
      try {
        this.fileNamesChanged();
      } catch (IOException ex) {
        JOptionPane.showMessageDialog(
          this,
          "Problems with your chosen directory: " + ex,
          "Fatal error",
          JOptionPane.ERROR_MESSAGE);
      }
    }
  }//GEN-LAST:event_browseButtonActionPerformed

  private void countryCodeFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_countryCodeFieldKeyReleased
    this.subjectChanged();
  }//GEN-LAST:event_countryCodeFieldKeyReleased

  private void voProjectFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_voProjectFieldKeyReleased
    this.subjectChanged();
  }//GEN-LAST:event_voProjectFieldKeyReleased

  private void groupFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_groupFieldKeyReleased
    this.subjectChanged();
  }//GEN-LAST:event_groupFieldKeyReleased

  private void nameHelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameHelpButtonActionPerformed
    CertificateAuthorityHelp help = new CertificateAuthorityHelp();
    help.setVisible(true);
  }//GEN-LAST:event_nameHelpButtonActionPerformed

  private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
    System.exit(0);
  }//GEN-LAST:event_exitButtonActionPerformed

  private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
    String dnRoot = this.makeSubject();
    String password = new String(this.passwordField.getPassword());
    try {
      if (password.length() < 8) {
        throw new Exception("The password must be at least 8 characters long.");
      }
      
      // Create a CA object forcing in a root distinguished name.
      // This causes the creation of a new set of credentials in the
      // specified files, over-writing any that were there before.
      CertificateAuthority ca = new CertificateAuthority(dnRoot,
                                                         password,
                                                         this.keyFile,
                                                         this.certificateFile,
                                                         this.serialNumberFile,
                                                         null);
    } catch (Exception ex) {
      JOptionPane.showMessageDialog(
          this,
          "Can't create the CA files: " + ex,
          "Fatal error",
          JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_generateButtonActionPerformed

  private void voProjectFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voProjectFieldActionPerformed
    this.subjectChanged();
  }//GEN-LAST:event_voProjectFieldActionPerformed

  private void institutionFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_institutionFieldKeyReleased
    this.subjectChanged();
  }//GEN-LAST:event_institutionFieldKeyReleased

  private void countryCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryCodeFieldActionPerformed
    this.subjectChanged();
  }//GEN-LAST:event_countryCodeFieldActionPerformed
  
  /**
   * Updates the display when the CA subject is known to have changed.
   */
  private void subjectChanged() {   
    this.rootDn = this.makeSubject();
    this.subjectField.setText(this.rootDn + "/CN=CA");
  } 
  
  /**
   * Updates the display when the output file-names are known to have have changed.
   */
  private void fileNamesChanged() throws IOException {
    File canon = this.caFileDirectory.getCanonicalFile();
    this.caFileDirectoryField.setText(canon.getAbsolutePath());
    this.keyFile = new File(canon, "ca-key.pem");
    this.certificateFile = new File(canon, "ca-cert.pem");
    this.serialNumberFile = new File(canon, "ca-serial.txt");
    this.keyFileField.setText(this.keyFile.getAbsolutePath());
    this.certificateFileField.setText(this.certificateFile.getAbsolutePath());
    this.serialNumberFileField.setText(this.serialNumberFile.getAbsolutePath());
  }
  
  
  /**
   * Derives the certificate subject from the values of the entry fields.
   */
  private String makeSubject() {
    StringBuffer subject = new StringBuffer();
    
    String countryCode = this.countryCodeField.getSelectedItem().toString();
    if (countryCode.length() > 0) {
      subject.append("/C=");
      subject.append(countryCode);
    }
    
    String project = this.voProjectField.getSelectedItem().toString();
    if (project.length() > 0) {
      subject.append("/O=");
      subject.append(project);
    }
    
    String institution = this.institutionField.getText();
    if (institution.length() > 0) {
      subject.append("/OU=");
      subject.append(institution);
    }
    
    String group = this.groupField.getText();
    System.out.println("***" + group + "***");
    if (group.length() > 0) {
      subject.append("/OU=");
      subject.append(group);
    }
    
    return subject.toString();
  }
  
  
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new CertificateAuthorityForm().setVisible(true);
      }
    });
  }

  /**
   * Sets the list of country codes in the countryCodeField JComboBox.
   */
  private void setCountryCodes() {
    this.countryCodeField.setModel(new CountryCodeModel());
  }
  
  public class CountryCodeModel extends DefaultComboBoxModel {
    
    public CountryCodeModel() {
      // Load the standard 2-letter codes.
      super(Locale.getISOCountries());
      
      // Load, at the ftont of the list, codes for countries that
      // are already AstroGrid partners. "EU" is a replacement for
      // "INT" that might apply to ESA-VO. "UK" is not a correct
      // ISO code, but is preferred to "GB".
      this.insertElementAt("US", 0);
      this.insertElementAt("UK", 0);
      this.insertElementAt("RU", 0);
      this.insertElementAt("NL", 0);
      this.insertElementAt("IT", 0);
      this.insertElementAt("FR", 0);
      this.insertElementAt("EU", 0);
      this.insertElementAt("ES", 0);
      this.insertElementAt("DE", 0);
      this.insertElementAt("CA", 0);
      
      this.setSelectedItem("CA");
    }
    
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton browseButton;
  private javax.swing.JLabel caFileDirectoryField;
  private javax.swing.JLabel certificateFileField;
  private javax.swing.JComboBox countryCodeField;
  private javax.swing.JMenuItem exitButton;
  private javax.swing.JButton generateButton;
  private javax.swing.JTextField groupField;
  private javax.swing.JTextField institutionField;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenu jMenu2;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JLabel keyFileField;
  private javax.swing.JMenuItem nameHelpButton;
  private javax.swing.JPasswordField passwordField;
  private javax.swing.JLabel serialNumberFileField;
  private javax.swing.JLabel subjectField;
  private javax.swing.JComboBox voProjectField;
  // End of variables declaration//GEN-END:variables
  
}
