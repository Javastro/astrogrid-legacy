package org.astrogrid.community.webapp;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.astrogrid.community.common.ivorn.CommunityIvornParser;
import org.astrogrid.community.server.security.manager.SecurityManagerImpl;
import org.astrogrid.community.server.security.service.SecurityServiceImpl;

/**
 * A servlet to respond to password-change requests.
 *
 * These requests are generated by owners of accounts who know the old password.
 * They send user name, old password and new password: the parameters are
 * "userLoginName, "oldPassword" and "newPassword". The name is just the 
 * user-name  part of the account name, e.g. "frog" rather than "frog@community" 
 * or "ivo://frog@authority/community". The request must be POSTed.
 *
 * The servlet changes the password and hands off the response to a JSP which
 * displays a message showing success or failure. The message is passed as
 * a request attribute named "org.astrogrid.community.server.verdict" of 
 * type String.
 *
 * For success, the account must be found in the community DB, the old password
 * must match, the new password must be 7 characters or greater (and the
 * community internal services must not fail).
 *
 * @author Guy Rixon
 */
public class PasswordChangeServlet extends HttpServlet {
  
  /** 
   * Handles the HTTP <code>POST</code> method.
   * @param request servlet request
   * @param response servlet response
   */
  protected void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
    String userName    = getParameter(request, "userLoginName");
    String oldPassword = getParameter(request, "oldPassword");
    String newPassword = getParameter(request, "newPassword");
    
    if (userName == null) {
      respond(request, response,
              "No user name was given.");
    }
    else if (oldPassword == null) {
      respond(request, response,
              "No value was given for the current password.");
    }
    else if (newPassword.length() < 7) {
      respond(request, response,
              "Your password must be at least 7 characters long.");
    }
    else if (newPassword == null) {
      respond(request, response,
              "No value was given for the new password.");
    }
    else {
      String verdict = null;
      try {
        SecurityServiceImpl ss = new SecurityServiceImpl();
        SecurityManagerImpl sm = new SecurityManagerImpl();
        String account = "ivo://" + 
                         userName +
                         "@" +
                         CommunityIvornParser.getLocalIdent();
        System.out.println("Changing password for " + account);
        ss.checkPassword(account, oldPassword);
        sm.setPassword(account, newPassword);
        verdict = "Your password has been changed.";
      } 
      catch (Exception ex) {
        verdict = "Password change failed: " + ex;
      } 
      finally {
        respond(request, response, verdict);
      }
    }
  }
  
  /** 
   * Returns a short description of the servlet.
   */
  public String getServletInfo() {
    return "Password-change servlet.";
  }
  
  /**
   * Gets a parameter value.
   * Missing parameters come back as null strings.
   * Leading and trailing white space is removed from the values.
   */
  private String getParameter(HttpServletRequest request, String parameter) {
    String value = request.getParameter(parameter);
    return (value == null)? value : value.trim();
  }
  
  /**
   * Invokes a JSP to display the result of the change.
   */
  private void respond(HttpServletRequest  request,
                       HttpServletResponse response, 
                       String              verdict) throws ServletException, 
                                                           IOException {
    request.setAttribute("org.astrogrid.community.server.verdict", verdict);
    request.getRequestDispatcher("/UserPasswordChangeResult.jsp").forward(request, response);
  }
}
