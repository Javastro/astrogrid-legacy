<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Certificate-authority generator</title>
    <author>Guy Rixon</author>
  </properties>
  <body>
    
    <section name="Creating and installing a certificate authority">
      
      <p>
        The certificate authority consists in:
      </p>
      <ul>
        <li>the OpenSSL package;</li>
        <li>Java software to drive OpenSSL;</li>
        <li>three files of credentials and configuration which you mus supply.</li>
      </ul>
      
      <p>
        Most Unix and Linux platforms provide OpenSSL, but you may need to
        install it yourself. The executable programme <i>openssl</i> must
        be on the PATH of the account that runs Tomcat (i.e., in the
        standard installation, on root's PATH).
      </p>
      
      <p>
        The Java software for the CA is included in the community
        web-application.
      </p>
      
      <p>
        The credential files turn the generic CA-software into your
        CA, specific to your community; therefore you have to generate them.
        They are:
      </p>
    <ul>
      <li>a root certificate that identifies the certificate authority;</li>
      <li>a private key, use of which is protected by a password;</li>
      <li>a file recording the serial number of the last certificate issued by
      the CA (number 00 means the CA's own, self-signed certificate).</li>
    </ul>
    <p>
      The CA files follow OpenSSL's conventions, since it is the <i>openssl</i>
      excutable that uses them. This means, <i>inter alia</i> that the key
      and certificate are in PEM format.
    </p>
    <p>
      The standard way to generate the files is to use AstroGrid's
      CA-generator application.
    </p>
    
    <subsection name="Downloading and running the generator">
      <p>
        You can
        <a href="http://www.astrogrid.org/maven/org.astrogrid/apps/cagenerator-app-2007.2.jar">download the generator</a>
        from AstroGrid's site.
      </p>
      <p>
        To run the generator, use this command:
      </p>
      <pre>
        java -jar cagenerator-app-2007.2.jar
      </pre>
      <p>
        (I.e. the downloaded jar is a self-contained Java application.)
      </p>
    </subsection>
    
    <subsection name="What you have to do">
    <ol>
      <li>Set the formal name of the CA, using the form.</li>
      <li>Choose the password for the private key (must be at least 8 characters long).</li>
      <li>Press the <em>generate CA files</em> button.</li>
      <li>Copy the three files into the appropriate places in your community service 
      (see below).</li>
    </ol>
    </subsection>
    
    <subsection name="Naming the CA">
    <p>
      The formal name of the CA has to be unique within the virtual observatory.
    To achieve this, the name has a specific structure with several components.
    Each of these components restricts the set of CAs that are peers of your new
    CA and reduces the chance of a name clash.
    </p>
    <p>
      The <em>country code</em> is drawn from a a standard set.
    </p>
    <p>
      They community of users for which you're creating a CA is probably 
      associated with a <em>virtual-observatory</em> project. If you know that
      you are working in or with such a project, please select it here. If you
      think your project is missing from the list, then please type in its name
      (but please check for name clashes, especially if the name is an acronym).
      If you don't want to be associated with any VO project, then you can enter
      enter the name of some other organization or project.
    </p>
      <p>
        <em>Institution</em> typically means the university department or laboratory
        operating the CA.
      </p>
      <p>
      Your institution is treated as a unit in a VO project for the purposes of
      naming the CA. E.g. the Institute of Astronomy, Cambridge, UK, is treated
      as a unit in AstroGrid. This nesting is just a way of managing the names;
      it doesn't imply that the project is going to control your community or
      interfere with your business.
    </p>
    <p>
      You may want two or more communities at your institution, perhaps for
      separate research groups. In this case, you should set the <em>group</em>
      field which adds another element to the CA's name. If you only expect one
      community with one CA, just leave this field blank.
    </p>
    <p>
      Ultimately, it's your responsibility to make sure that the name is unique.
      The generator tool helps as much as it can, but you need to check before
      putting your CA into service.
    </p>
    </subsection>
    
    <subsection name="Naming the users">
    <p>
      The purpose of the CA is to give formal names to users, so how will they
      look? Each member of the community, including the CA, has a formal name
      that is the same apart from the "common name" part. The CA's common name
      is just "CA" and you can see it in the generator: it's on the end of the 
      CA's formal name, written as "/CN=CA". For any user, just replace "CA"
      with their real name. The CA does this automatically when it is installed.
    </p>
    </subsection>
    
    <subsection name="The CA password">
    <p>
      You have to give a password when you generate the CA files. The password is
      used to control access to the encrypted private-key file so that anybody
      not knowing the password can't use the CA to sign certificates for users.
      When you install the CA files in the community service and use them there,
      you will have to tell the service the CA password each time you need to
      generate user credentials. That is, only you know the password; the
      system doesn't record it anywhere.
    </p>
    <p>
      Please bear in mind that the password is <em>precious</em>
      to your community. If the password becomes known to the wrong
      people then your CA is <em>compromised</em> and you will have to
      replace it. This means issuing new certificates to all your
      users and then contacting everybody who trusts your old CA to
      tell them to switch their trust to the new one. It is a hard
      road and you don't want to go there. Therefore, treat your
      CA password as more valuable than the root password on your servers.
      It's less hassle to rebuild cracked servers than it is to rebuild
      a cracked community.
    </p>
    <p>
      The password must be at least eight characters long: this is a restriction
      of the OpenSSL software on which the CA package is based.
    </p>
    </subsection>
    
    <subsection name="Installing the files">
      <p>
        When you have generated the CA files, you must then install them.
        In the standard directory layout, they go here:
      </p>
      <pre>
  /astrogrid/community/ca/ca-key.pem
  /astrogrid/community/ca/ca-certificate.pem
  /astrogrid/community/ca/ca-serial.txt
      </pre>
      <p>
        If you don't follow the standard layout, make sure that you edit the
        <a href="standard-context.html">context file</a> to match where you
        do install them.
      </p>
      <p>
        The community would like the key and certificate file to be
        write-locked but the serial-number file must be writable by its owner.
      </p>
      
    </subsection>
    </section>
  </body>
</document>