<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid community webapp.
    |
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/community/webapp/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: dave $</cvs:author>
    | <cvs:date>$Date: 2004/03/15 07:49:30 $</cvs:date>
    | <cvs:version>$Revision: 1.8 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.8  2004/03/15 07:49:30  dave
    |   Merged development branch, dave-dev-200403121536, into HEAD
    |
    |   Revision 1.7.12.2  2004/03/12 17:42:09  dave
    |   Replaced tabs with spaces
    |
    |   Revision 1.7.12.1  2004/03/12 17:30:00  dave
    |   Fixed Castor JTA dependencies
    |
    |   Revision 1.7  2004/03/08 13:42:33  dave
    |   Updated Maven goals.
    |   Replaced tabs with Spaces.
    |
    |   Revision 1.6.2.2  2004/03/08 12:53:18  dave
    |   Changed tabs to spaces
    |
    |   Revision 1.6.2.1  2004/03/08 12:10:05  dave
    |   Modified Maven build scripts to use new AstroGrid goals
    |
    |   Revision 1.6  2004/03/05 17:20:00  dave
    |   Merged development branch, dave-dev-200402211936, into HEAD
    |
    |   Revision 1.5.2.3  2004/03/05 16:28:28  dave
    |   Added SecurityManager delegate test casees.
    |   Refactored Maven JUnit properties.
    |
    |   Revision 1.5.2.2  2004/03/04 08:57:10  dave
    |   Started work on the install xdocs.
    |   Started work on the Security delegates.
    |
    |   Revision 1.5.2.1  2004/02/22 01:50:48  dave
    |   Refactored install and deploy goals
    |
    |   Revision 1.5  2004/02/20 21:11:05  dave
    |   Merged development branch, dave-dev-200402120832, into HEAD
    |
    |   Revision 1.4.2.4  2004/02/20 12:44:23  dave
    |   Adding JNDI DataSource reference.
    |
    |   Revision 1.4.2.3  2004/02/20 01:02:38  dave
    |   Added database config files to webapp.
    |
    |   Revision 1.4.2.2  2004/02/19 21:09:27  dave
    |   Refactored ServiceStatusData into a common package.
    |   Refactored CommunityServiceImpl constructor to take a parent service.
    |   Refactored default database for CommunityServiceImpl
    |
    |   Revision 1.4.2.1  2004/02/16 15:20:54  dave
    |   Changed tabs to spaces
    |
    |   Revision 1.4  2004/02/12 08:12:13  dave
    |   Merged development branch, dave-dev-200401131047, into HEAD
    |
    |   Revision 1.2.4.3  2004/02/10 00:40:37  dave
    |   Added install tooklit to the Maven build.
    |   Changed Maven project to use 'org.astrogrid' as the group name.
    |   Fixed dependencies that used the original group name.
    |
    |   Revision 1.2.4.2  2004/01/17 13:54:18  dave
    |   Removed password from AccountData
    |
    |   Revision 1.2.4.1  2004/01/13 14:29:41  dave
    |   Added initial JUnit tests
    |
    |   Revision 1.2  2004/01/07 10:45:45  dave
    |   Merged development branch, dave-dev-20031224, back into HEAD
    |
    |   Revision 1.1.2.12  2004/01/07 08:01:43  dave
    |   Fixed remote ln command
    |
    |   Revision 1.1.2.11  2004/01/07 07:48:02  dave
    |   Replaced war:deploy-snapshot with hacked version of jar:deploy-snapshot
    |
    |   Revision 1.1.2.10  2004/01/07 07:22:08  dave
    |   Fixed XML namespace
    |
    |   Revision 1.1.2.9  2004/01/07 07:20:13  dave
    |   Fixed XML namespace
    |
    |   Revision 1.1.2.8  2004/01/07 07:18:08  dave
    |   Tried replacing war:deploy-snapshot with jar:deploy-snapshot
    |
    |   Revision 1.1.2.7  2004/01/07 07:01:06  dave
    |   Tried to fix war file name
    |
    |   Revision 1.1.2.6  2004/01/07 06:06:53  dave
    |   Added tidy up for jar_deploy-snapshot
    |
    |   Revision 1.1.2.5  2004/01/07 04:29:15  dave
    |   Moved properties into shared files and tested deployment goals
    |
    |   Revision 1.1.2.4  2004/01/05 04:45:34  dave
    |   Removed the maven.xml import ... seems to work without it ?
    |
    |   Revision 1.1.2.3  2004/01/05 04:11:05  dave
    |   Fixed the maven.xml import
    |   Changed the primary goal to install-artifact
    |
    |   Revision 1.1.2.2  2004/01/01 01:44:29  dave
    |   Moved common code into parent maven.xml script
    |
    | </cvs:log>
    |
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:local="org.astrogrid.community"
    default="astrogrid-install-snapshot"
    >

    <!--+
        | Import the goals from our parent project.
        | Looks like this gets included anyway, possibly because our project inherits from ../maven.project.xml ?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!-- ================ Custom tag library ================ -->

    <!--+
        | Define our local tag library.
        +-->
    <define:taglib uri="org.astrogrid.community">
        <!--+
            | Test tag, debug only.
            | Attrib : message - The debug message to print.
            |
            +-->
        <define:tag name="debug.tag">
            <ant:echo message="Message ${message}"/>
        </define:tag>
        <!--+
            | Deploy a service into the local Axis config.
            | Attrib : service.name eg. SecurityManager
            +-->
        <define:tag name="service.deploy">
            <ant:echo message="Deploying ${service.name}"/>
            <ant:java classname="org.apache.axis.utils.Admin"
                dir="${axisDir}/WEB-INF"
                classpathref="maven.dependency.classpath"
                fork="true"
                >
                <arg value="server"/>
                <arg value="${wsddDir}/${service.name}.wsdd"/>
            </ant:java>
        </define:tag>
    </define:taglib>

    <!-- ================ Reactor goals ================ -->

    <!--+
        | Clean our build target.
        +-->
    <goal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <attainGoal name="clean:clean"/>
    </goal>

    <!--+
        | Build and install our component war.
        +-->
    <goal name="astrogrid-install-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Build our war.
            +-->
        <attainGoal name="war:war"/>
        <!--+
            | Rename our war to include the version.
            +-->
        <ant:move
            file="${maven.build.dir}/${maven.war.final.name}"
            toFile="${maven.build.dir}/${maven.final.name}.war"
            />
        <!--+
            | Install our war.
            +-->
        <core:set var="astrogrid.artifact.type" value="war"/>
        <core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
        <attainGoal name="install-local"/>
    </goal>

    <!--+
        | Build and install our snapshot war.
        +-->
    <goal name="astrogrid-install-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our snapshot name.
            | Need to do this here because the jar:snapshot only sets 'maven.final.name' locally.
            +-->
        <maven:snapshot project="${pom}"/>
        <core:set var="maven.final.name" value="${snapshotSignature}"/>
        <!--+
            | Build our war.
            +-->
        <attainGoal name="war:war"/>
        <!--+
            | Rename our war to include the version.
            +-->
        <ant:move
            file="${maven.build.dir}/${maven.war.final.name}"
            toFile="${maven.build.dir}/${maven.final.name}.war"
            />
        <!--+
            | Install our SNAPSHOT jar.
            +-->
        <core:set var="astrogrid.artifact.type" value="war"/>
        <core:set var="astrogrid.artifact.name" value="${maven.war.final.name}"/>
        <attainGoal name="install-local-snapshot"/>
    </goal>

    <!--+
        | Build and deploy our component war.
        +-->
    <goal name="astrogrid-deploy-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our artifact jar.
            +-->
        <attainGoal name="astrogrid-install-artifact"/>
        <!--+
            | Deploy our war.
            +-->
        <core:set var="astrogrid.artifact.type" value="war"/>
        <core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
        <attainGoal name="deploy-local"/>
    </goal>

    <!--+
        | Build and deploy our snapshot war.
        +-->
    <goal name="astrogrid-deploy-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <!--+
            | Create our artifact jar.
            +-->
        <attainGoal name="astrogrid-install-snapshot"/>
        <!--+
            | Deploy our SNAPSHOT war.
            +-->
        <core:set var="astrogrid.artifact.type" value="war"/>
        <core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
        <attainGoal name="deploy-local-snapshot"/>
    </goal>

    <!--+
        | Build our project website.
        | (required as a target goal for the reactor)
        +-->
    <goal name="site">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building project site ...."/>
        <attainGoal name="site:generate"/>
    </goal>

    <!-- ================ Component goals ================ -->

    <!--+
        | Initialise the webapp files.
        +-->
    <preGoal name="war:webapp">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Pre-processing for webapp task"/>
        <!--+
            | Initialise the Axis webapp.
            +-->
        <attainGoal name="init.axis"/>
        <!--+
            | Modify the war:webapp property to use our Axis webapp instead.
            +-->
        <ant:echo message="Modifying war:webapp location"/>
        <ant:echo message="  Before : ${pom.getPluginContext('maven-war-plugin').getVariable('maven.war.webapp.dir')}"/>
        <core:expr value="${pom.getPluginContext('maven-war-plugin').setVariable('maven.war.webapp.dir', axisDir)}"/>
        <ant:echo message="  After  : ${pom.getPluginContext('maven-war-plugin').getVariable('maven.war.webapp.dir')}"/>
    </preGoal>

    <!--+
        | Post-process our webapp.
        +-->
    <postGoal name="war:webapp">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Post-processing for webapp task"/>
        <!--+
            | Initialise our paths.
            +-->
        <attainGoal name="init.paths"/>
        <!--+
            | Locate our community server jar.
            +-->
        <core:set var="serverJarIdent" value="${pom.groupId}:astrogrid-community-server"/>
        <ant:echo message="Looking for server jar : ${serverJarIdent}"/>
        <core:forEach var="artifact" items="${pom.getArtifacts()}">
            <core:if test="${artifact.getDependency().getId().equals(serverJarIdent)}">
                <ant:echo message="Found community server jar"/>
                <ant:echo message="Name     : ${artifact.getName()}"/>
                <ant:echo message="Path     : ${artifact.getPath()}"/>
                <core:set var="serverJarPath" value="${artifact.getPath()}"/>
            </core:if>
        </core:forEach>
        <!--+
            | Unpack our service WSDD files.
            +-->
        <ant:unzip
            src="${serverJarPath}"
            dest="${tempDir}">
            <patternset>
                <include name="META-INF/wsdd/*.wsdd"/>
            </patternset>
        </ant:unzip>
        <ant:copy toDir="${wsddDir}" flatten="true">
            <fileset dir="${tempDir}">
                <include name="**/*.wsdd"/>
            </fileset>
        </ant:copy>
        <!--+
            | Initialise our classpaths.
            +-->
        <attainGoal name="init.classpath"/>
        <!--+
            | Deploy our services.
            +-->
        <ant:echo message=""/>
        <ant:echo message="Deploying WebServices ..."/>
        <local:service.deploy service.name="DatabaseManager"/>
        <local:service.deploy service.name="PolicyManager"/>
        <local:service.deploy service.name="PolicyService"/>
        <local:service.deploy service.name="SecurityManager"/>
        <local:service.deploy service.name="SecurityService"/>
        <!--+
            | Copy our database configuration file into WEB-INF/classes.
            | This should override the database configuration in the server jar.
            +-->
        <ant:copy verbose="true" todir="${axisDir}/WEB-INF/classes">
            <ant:fileset dir="src/config/database">
                <include name="astrogrid-community-database.xml"/>
                <!--+
                    | No need to replace these....
                <include name="astrogrid-community-mapping.xml"/>
                <include name="astrogrid-community-database.sql"/>
                    +-->
            </ant:fileset>
        </ant:copy>
    </postGoal>

    <!--+
        | Setup our JUnit tests.
        +-->
    <preGoal name="test:test">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing services for tests"/>
        <!--+
            | Initialise our classpaths.
            +-->
        <attainGoal name="init.classpath"/>
        <!--+
            | Check the JUnit test settings.
            +-->
        <ant:echo message=""/>
        <ant:echo message="JUnit fork VM - ${maven.junit.fork}"/>
        <ant:echo message="JUnit test directory : ${maven.junit.dir}"/>
        <ant:echo message=""/>
    </preGoal>

</project>
