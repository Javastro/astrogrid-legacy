<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid community server.
    |
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/community/server/Attic/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: dave $</cvs:author>
    | <cvs:date>$Date: 2004/01/07 10:45:45 $</cvs:date>
    | <cvs:version>$Revision: 1.2 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.2  2004/01/07 10:45:45  dave
    |   Merged development branch, dave-dev-20031224, back into HEAD
    |
    |   Revision 1.1.2.6  2004/01/07 04:29:15  dave
    |   Moved properties into shared files and tested deployment goals
    |
    |   Revision 1.1.2.5  2004/01/05 06:47:18  dave
    |   Moved policy data classes into policy.data package
    |
    |   Revision 1.1.2.4  2004/01/05 04:45:34  dave
    |   Removed the maven.xml import ... seems to work without it ?
    |
    |   Revision 1.1.2.3  2004/01/05 04:11:05  dave
    |   Fixed the maven.xml import
    |   Changed the primary goal to install-artifact
    |
    |   Revision 1.1.2.2  2004/01/01 01:44:29  dave
    |   Moved common code into parent maven.xml script
    |
    | </cvs:log>
    |
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
    >

    <!--+
        | Primary goals are :
        |     clean
        |     install-artifact
        |     install-snapshot
        |     site
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!--+
        | Import our plugin goals from our parent project.
        | Looks like this gets included anyway ...
        | Possibly because our project inherits from ../maven.project.xml ?
        | Maven : Any more unexpected suprises !?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Reactor goals.
        | These are just placeholder targets for the reactor to call.
        +-->

    <!--+
        | Clean our build target.
        | (required as a target goal for the reactor)
        +-->
    <goal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Cleaning build target ...."/>
        <attainGoal name="clean:clean"/>
    </goal>

    <!--+
        | Build and install our component jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="install-artifact">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building component artifact ...."/>
        <attainGoal name="jar:install"/>
    </goal>

    <!--+
        | Build and install our snapshot jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="install-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building snapshot artifact ...."/>
        <attainGoal name="jar:install-snapshot"/>
    </goal>

    <!--+
        | Deploy our snapshot jar.
        | (required as a target goal for the reactor)
        +-->
    <goal name="deploy-snapshot">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Deploying snapshot artifact ...."/>
        <attainGoal name="jar:deploy-snapshot"/>
    </goal>

    <!--+
        | Build our project website.
        | (required as a target goal for the reactor)
        +-->
    <goal name="site">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Building project site ...."/>
        <attainGoal name="site:generate"/>
    </goal>

    <!--+
        | Generate a clover report for our project.
        | (required as a target goal for the reactor)
        +-->
    <goal name="clover-report">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Generating clover report ...."/>
        <attainGoal name="maven-clover-plugin:report"/>
    </goal>

    <!--+
        | Project goals.
        | These are the main project goals.
        +-->

    <!--+
        | Prepare for the java:compile task.
        | Generates the WSDL, WSDD and Java stubs for our service interface(s).
        +-->
    <preGoal name="java:compile">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing for java:compile ...."/>
        <!--+
            | Initialise our Axis tools
            +-->
        <attainGoal name="init.tools"/>
        <!--+
            | Create our output directories.
            +-->
        <ant:mkdir dir="${wsdlDir}"/>
        <ant:mkdir dir="${tempDir}"/>
        <ant:mkdir dir="${javaDir}"/>
        <!--+
            | Generate our PolicyManager WSDL.
            +-->
        <ant:axis.java2wsdl
            output="${wsdlDir}/PolicyManager.wsdl"
            classname="org.astrogrid.community.common.policy.manager.PolicyManager"
            location="${axisUrl}/services/PolicyManager"
            namespace="urn:manager.policy.common.community.astrogrid.org"
            style="RPC"
            >
            <classpath>
                <ant:path refid="maven.dependency.classpath"/>
                <ant:pathelement path="${maven.build.dest}"/>
            </classpath>
        </ant:axis.java2wsdl>
        <!--+
            | Generate our PolicyManager stubs.
            +-->
        <ant:axis.wsdl2java
            verbose="false"
            serverside="true"
            skeletondeploy="false"
            output="${tempDir}"
            url="file://${wsdlDir}/PolicyManager.wsdl"
            >
        </ant:axis.wsdl2java>
        <!--+
            | Generate our PolicyService WSDL.
            +-->
        <ant:axis.java2wsdl
            output="${wsdlDir}/PolicyService.wsdl"
            classname="org.astrogrid.community.common.policy.service.PolicyService"
            location="${axisUrl}/services/PolicyService"
            namespace="urn:service.policy.common.community.astrogrid.org"
            style="RPC"
            >
            <classpath>
                <ant:path refid="maven.dependency.classpath"/>
                <ant:pathelement path="${maven.build.dest}"/>
            </classpath>
        </ant:axis.java2wsdl>
        <!--+
            | Generate our PolicyService stubs.
            +-->
        <ant:axis.wsdl2java
            verbose="false"
            serverside="true"
            skeletondeploy="false"
            output="${tempDir}"
            url="file://${wsdlDir}/PolicyService.wsdl"
            >
        </ant:axis.wsdl2java>
        <!--+
            | Fix the jaxp properties.
            +-->
        <core:expr value="${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}"/>
        <!--+
            | Modify our PolicyManager WSDD to use our implementation classes.
            +-->
        <ant:xslt style="src/xsl/wsdd-impl.xsl"
            in="${tempDir}/org/astrogrid/community/common/policy/manager/deploy.wsdd"
            out="${wsddDir}/PolicyManager.wsdd">
            <outputproperty name="method" value="xml"/>
            <outputproperty name="indent" value="yes"/>
            <param name="service"   expression="PolicyManager"/>
            <param name="classname" expression="org.astrogrid.community.server.policy.manager.PolicyManagerImpl"/>
        </ant:xslt>
        <!--+
            | Modify our PolicyService WSDD to use our implementation classes.
            +-->
        <ant:xslt style="src/xsl/wsdd-impl.xsl"
            in="${tempDir}/org/astrogrid/community/common/policy/service/deploy.wsdd"
            out="${wsddDir}/PolicyService.wsdd">
            <outputproperty name="method" value="xml"/>
            <outputproperty name="indent" value="yes"/>
            <param name="service"   expression="PolicyService"/>
            <param name="classname" expression="org.astrogrid.community.server.policy.service.PolicyServiceImpl"/>
        </ant:xslt>
        <!--+
            | Copy the generated Java files we want to use.
            +-->
        <ant:copy verbose="false" toDir="${javaDir}">
            <fileset dir="${tempDir}">
                <include name="**/PolicyManagerService.java"/>
                <include name="**/PolicyManagerServiceLocator.java"/>
                <include name="**/PolicyManagerSoapBindingStub.java"/>
                <include name="**/PolicyServiceService.java"/>
                <include name="**/PolicyServiceServiceLocator.java"/>
                <include name="**/PolicyServiceSoapBindingStub.java"/>
            </fileset>
        </ant:copy>
        <!--+
            | Add the Java files to our project source path.
            +-->
        <ant:path id="astro.includes" location="${javaDir}"/>
        <maven:addPath id="maven.compile.src.set" refid="astro.includes"/>
    </preGoal>

    <!--+
        | Prepare the files for the jar goal.
        | Adds the generated WSDL and WSDD files into the jar META-INF.
        +-->
    <preGoal name="jar:jar">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing for jar:jar ...."/>
        <!--+
            | Initialise our paths.
            +-->
        <attainGoal name="init.paths"/>
        <!--+
            | Create the META-INF directory.
            +-->
        <ant:mkdir dir="${maven.build.dest}/META-INF"/>
        <ant:mkdir dir="${maven.build.dest}/META-INF/wsdl"/>
        <ant:mkdir dir="${maven.build.dest}/META-INF/wsdd"/>
        <!--+
            | Copy our WSDL service descriptions.
            +-->
        <ant:copy verbose="false" todir="${maven.build.dest}/META-INF/wsdl">
            <ant:fileset dir="${wsdlDir}">
                <include name="**/*.wsdl"/>
            </ant:fileset>
        </ant:copy>
        <!--+
            | Copy our WSDD service deployment files.
            +-->
        <ant:copy verbose="false" todir="${maven.build.dest}/META-INF/wsdd">
            <ant:fileset dir="${wsddDir}">
                <include name="**/*.wsdd"/>
            </ant:fileset>
        </ant:copy>
    </preGoal>

</project>
