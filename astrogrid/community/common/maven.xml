<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | Maven build tasks for the AstroGrid community client component.
    |
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/community/common/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: dave $</cvs:author>
    | <cvs:date>$Date: 2004/03/05 17:19:59 $</cvs:date>
    | <cvs:version>$Revision: 1.5 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.5  2004/03/05 17:19:59  dave
    |   Merged development branch, dave-dev-200402211936, into HEAD
    |
    |   Revision 1.4.4.3  2004/03/05 16:28:28  dave
    |   Added SecurityManager delegate test casees.
    |   Refactored Maven JUnit properties.
    |
    |   Revision 1.4.4.2  2004/02/23 19:43:47  dave
    |   Refactored DatabaseManager tests to test the interface.
    |   Refactored DatabaseManager tests to use common DatabaseManagerTest.
    |
    |   Revision 1.4.4.1  2004/02/22 01:50:47  dave
    |   Refactored install and deploy goals
    |
    |   Revision 1.4  2004/02/12 08:12:13  dave
    |   Merged development branch, dave-dev-200401131047, into HEAD
    |
    |   Revision 1.2.4.1  2004/01/17 13:54:18  dave
    |   Removed password from AccountData
    |
    |   Revision 1.2  2004/01/07 10:45:37  dave
    |   Merged development branch, dave-dev-20031224, back into HEAD
    |
    |   Revision 1.1.2.5  2004/01/07 04:29:15  dave
    |   Moved properties into shared files and tested deployment goals
    |
    |   Revision 1.1.2.4  2004/01/05 04:45:34  dave
    |   Removed the maven.xml import ... seems to work without it ?
    |
    |   Revision 1.1.2.3  2004/01/05 04:11:05  dave
    |   Fixed the maven.xml import
    |   Changed the primary goal to install-artifact
    |
    |   Revision 1.1.2.2  2004/01/01 01:44:29  dave
    |   Moved common code into parent maven.xml script
    |
    | </cvs:log>
    +-->
<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:deploy="deploy"
    xmlns:astro="org.astrogrid.maven"
    >

    <!--+
        | Import the goals from our parent project.
        | Looks like this gets included anyway, possibly because our project inherits from ../maven.project.xml ?
    <core:import inherit="true" file="${maven.build.dir}/../../maven/maven.xml"/>
        +-->

    <!--+
        | Debug info ....
        +-->
    <goal name="info">
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
    </goal>

    <!-- ================ Reactor goals ================ -->

    <!--+
        | Clean our build target.
        +-->
    <goal name="clean">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <attainGoal name="clean:clean"/>
    </goal>

	<!--+
		| Build and install our component jar.
		+-->
	<goal name="install-artifact">
		<ant:echo message="Build artifact  : ${pom.artifactId}"/>
		<ant:echo message="Build version   : ${pom.currentVersion}"/>
		<ant:echo message="Build directory : ${maven.build.dir}"/>
		<!--+
			| Build our jar.
			+-->
		<attainGoal name="jar:jar"/>
		<!--+
			| Install our jar.
			+-->
		<core:set var="astrogrid.artifact.type" value="jar"/>
		<core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
		<attainGoal name="install-local"/>
	</goal>

	<!--+
		| Build and install our snapshot jar.
		+-->
	<goal name="install-snapshot">
		<ant:echo message="Build artifact  : ${pom.artifactId}"/>
		<ant:echo message="Build version   : ${pom.currentVersion}"/>
		<ant:echo message="Build directory : ${maven.build.dir}"/>
		<!--+
			| Create our snapshot name.
			+-->
		<maven:snapshot project="${pom}"/>
		<core:set var="maven.final.name" value="${snapshotSignature}"/>
		<!--+
			| Build our jar.
			+-->
		<attainGoal name="jar:jar"/>
		<!--+
			| Install our SNAPSHOT jar.
			+-->
		<core:set var="astrogrid.artifact.type" value="jar"/>
		<core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
		<attainGoal name="install-local-snapshot"/>
	</goal>

	<!--+
		| Build and deploy our component jar.
		+-->
	<goal name="deploy-artifact">
		<ant:echo message="Build artifact  : ${pom.artifactId}"/>
		<ant:echo message="Build version   : ${pom.currentVersion}"/>
		<ant:echo message="Build directory : ${maven.build.dir}"/>
		<!--+
			| Build our jar.
			+-->
		<attainGoal name="jar:jar"/>
		<!--+
			| Deploy our jar.
			+-->
		<core:set var="astrogrid.artifact.type" value="jar"/>
		<core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
		<attainGoal name="deploy-local"/>
	</goal>

	<!--+
		| Build and deploy our snapshot jar.
		+-->
	<goal name="deploy-snapshot">
		<ant:echo message="Build artifact  : ${pom.artifactId}"/>
		<ant:echo message="Build version   : ${pom.currentVersion}"/>
		<ant:echo message="Build directory : ${maven.build.dir}"/>
		<!--+
			| Create our snapshot name.
			| Need to do this here because the jar:snapshot only sets 'maven.final.name' locally.
			+-->
		<maven:snapshot project="${pom}"/>
		<core:set var="maven.final.name" value="${snapshotSignature}"/>
		<!--+
			| Build our jar.
			+-->
		<attainGoal name="jar:jar"/>
		<!--+
			| Deploy our SNAPSHOT jar.
			+-->
		<core:set var="astrogrid.artifact.type" value="jar"/>
		<core:set var="astrogrid.artifact.name" value="${maven.final.name}"/>
		<attainGoal name="deploy-local-snapshot"/>
	</goal>

    <!--+
        | Build our component site.
        +-->
    <goal name="site">
        <ant:echo message="Build artifact  : ${pom.artifactId}"/>
        <ant:echo message="Build version   : ${pom.currentVersion}"/>
        <ant:echo message="Build directory : ${maven.build.dir}"/>
        <attainGoal name="site:generate"/>
    </goal>

    <!-- ================ Component goals ================ -->

	<!--+
		| Build our mock objects.
		| This don't work !!!
		+-->
	<goal name="mocks">
		<!--+
			| Define our Ant task.
			+-->
		<ant:taskdef name="mockmaker" classname="mockmaker.AntTask" classpathref="maven.dependency.classpath"/>
		<!--+
			| Create our target directory.
			+-->
		<ant:mkdir dir="${maven.build.dir}/mocks"/>
		<!--+
			| Try creating a MockObject ....
			| Goes BANG, com.thoughtworks.qdox.JavaDocBuilder.addSource(Ljava/io/Reader;)V
			+-->
		<ant:mockmaker destdir="${maven.build.dir}/mocks">
			<fileset dir="src/java">
				<include name="**/DatabaseManager.java"/>
			</fileset>
		</ant:mockmaker>
	</goal>

    <!--+
        | Setup our JUnit tests.
        +-->
    <preGoal name="test:test">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing services for tests"/>
        <!--+
            | Initialise our classpaths.
            +-->
        <attainGoal name="init.classpath"/>
        <!--+
            | Check the JUnit test settings.
            +-->
        <ant:echo message=""/>
        <ant:echo message="JUnit fork VM - ${maven.junit.fork}"/>
        <ant:echo message="JUnit test directory : ${maven.junit.dir}"/>
        <ant:echo message=""/>
    </preGoal>

</project>
