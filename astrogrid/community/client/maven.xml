<?xml version="1.0" encoding="UTF-8"?>

<project
    xmlns:core="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:util="jelly:util"
    xmlns:log="jelly:log"
    xmlns:define="jelly:define"
    xmlns:artifact="artifact"
    xmlns:community="org.astrogrid.community"
    default="astrogrid-install-artifact"
    >



    <!-- ================ Reactor goals ================ -->

    <goal name="astrogrid-install-snapshot" prereqs="jar:install-snapshot"/>
    <goal name="astrogrid-install-artifact" prereqs="jar:install"/>
    <goal name="astrogrid-deploy-snapshot"  prereqs="jar:deploy-snapshot"/>
    <goal name="astrogrid-deploy-artifact"  prereqs="jar:deploy-artifact"/>
    <goal name="astrogrid-deploy-site"      prereqs="site:deploy"/>
    <goal name="astrogrid-build-site"       prereqs="site:site"/>

    <!-- ================ Component goals ================ -->

    <!--+
        | Prepare for the java:compile task.
        | Generate the WSDL and Java stubs for our service interface(s).
        +-->
    <preGoal name="java:compile">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing for java:compile ...."/>
        <!--+
            | Initialise our Axis tools
            +-->
        <attainGoal name="init.tools"/>
        <!--+
            | Create our output directories.
            +-->
        <ant:mkdir dir="${wsdlDir}"/>
        <ant:mkdir dir="${tempDir}"/>
        <ant:mkdir dir="${javaDir}"/>
        <!--+
            | Generate our DatabaseManager WSDL and stubs.
            +-->
        <community:service.generate
            service.name="DatabaseManager"
            service.wsdd="org/astrogrid/community/common/database/manager/deploy.wsdd"
            service.class="org.astrogrid.community.common.database.manager.DatabaseManagerMock"
            service.interface="org.astrogrid.community.common.database.manager.DatabaseManager"
            service.namespace="urn:manager.database.common.community.astrogrid.org"
            />
        <!--+
            | Generate our PolicyManager WSDL and stubs.
            +-->
        <community:service.generate
            service.name="PolicyManager"
            service.wsdd="org/astrogrid/community/common/policy/manager/deploy.wsdd"
            service.class="org.astrogrid.community.common.policy.manager.PolicyManagerMock"
            service.interface="org.astrogrid.community.common.policy.manager.PolicyManager"
            service.namespace="urn:manager.policy.common.community.astrogrid.org"
            />
        <!--+
            | Generate our PolicyService WSDL and stubs.
            +-->
        <community:service.generate
            service.name="PolicyService"
            service.wsdd="org/astrogrid/community/common/policy/service/deploy.wsdd"
            service.class="org.astrogrid.community.common.policy.service.PolicyServiceMock"
            service.interface="org.astrogrid.community.common.policy.service.PolicyService"
            service.namespace="urn:service.policy.common.community.astrogrid.org"
            />
        <!--+
            | Generate our SecurityManager WSDL and stubs.
            +-->
        <community:service.generate
            service.name="SecurityManager"
            service.wsdd="org/astrogrid/community/common/security/manager/deploy.wsdd"
            service.class="org.astrogrid.community.common.security.manager.SecurityManagerMock"
            service.interface="org.astrogrid.community.common.security.manager.SecurityManager"
            service.namespace="urn:manager.security.common.community.astrogrid.org"
            />
        <!--+
            | Generate our SecurityService WSDL and stubs.
            +-->
        <community:service.generate
            service.name="SecurityService"
            service.wsdd="org/astrogrid/community/common/security/service/deploy.wsdd"
            service.class="org.astrogrid.community.common.security.service.SecurityServiceMock"
            service.interface="org.astrogrid.community.common.security.service.SecurityService"
            service.namespace="urn:service.security.common.community.astrogrid.org"
            />
        <!--+
            | Add the Java files to our project source path.
            +-->
        <ant:path id="astro.includes" location="${javaDir}"/>
        <maven:addPath id="maven.compile.src.set" refid="astro.includes"/>
    </preGoal>

    <!--+
        | Deploy our WebServices into our local Axis WebApp.
        +-->
    <preGoal name="test:test">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing services for tests"/>
        <!--+
            | Initialise our classpaths.
            +-->
        <!--<attainGoal name="init.classpath"/>-->
        <!--+
            | Check the JUnit test settings.
            +-->
        <ant:echo message=""/>
        <ant:echo message="JUnit fork VM - ${maven.junit.fork}"/>
        <ant:echo message="JUnit test directory : ${maven.junit.dir}"/>
        <!--+
            | Deploy our services.
            +-->
        <community:service.deploy service.name="DatabaseManager"/>
        <community:service.deploy service.name="PolicyManager"/>
        <community:service.deploy service.name="PolicyService"/>
        <community:service.deploy service.name="SecurityManager"/>
        <community:service.deploy service.name="SecurityService"/>
        <ant:echo message=""/>
    </preGoal>


    <!--+
        | Prepare the files for the jar goal.
        | Adds the generated WSDL files into the jar META-INF.
        +-->
    <preGoal name="jar:jar">
        <ant:echo message=""/>
        <ant:echo message="Artifact : ${pom.artifactId}"/>
        <ant:echo message="Preparing for jar:jar ...."/>
        <!--+
            | Initialise our paths.
            +-->
        <attainGoal name="init.paths"/>
        <!--+
            | Create the META-INF directory.
            +-->
        <ant:mkdir dir="${maven.build.dest}/META-INF"/>
        <ant:mkdir dir="${maven.build.dest}/META-INF/wsdl"/>
        <!--+
            | Copy our WSDL service descriptions.
            +-->
        <ant:copy verbose="false" todir="${maven.build.dest}/META-INF/wsdl">
            <ant:fileset dir="${wsdlDir}">
                <include name="**/*.wsdl"/>
            </ant:fileset>
        </ant:copy>
    </preGoal>

</project>
