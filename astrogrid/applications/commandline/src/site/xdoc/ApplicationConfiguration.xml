<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
   <properties>
      <title>CEA Command Line CEC Configuration</title>
      <author email="pah@jb.man.ac.uk">Paul Harrison</author>
   </properties>
   <body>
      <section name="Application Configuration">
         <p>This page gives brief guidance to writing an application
            configuration file. This should be read in conjunction with
            the <a href="http://www.ivoa.net/cgi-bin/twiki/bin/view/IVOA/CommonExecutionArchitecture">IVOA notes on CEA</a></p>
         <p>The CEC has a model of an application that is used to specified the input and output parameter of the application</p>
         <p> The UML model for an application is shown in the diagram
            below</p>
         <img
            src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/applications/design/ceaApplication.gif?rev=HEAD&amp;content-type=image/gif"
            alt="application model" />
         <p> The interpretation of this diagram is that an application
            may have a set of parameters which might be organised into
            one or more interfaces (effectively a subset of the total
            parameter set), and that each interface has a set of input
            parameters and a set of outputs.</p>
         <p>The configuration of the application follows this pattern
            in that the total set of parameters are defined first, and
            then the set of interfaces, and each interface consists of a
            set of references to the parameter definitions.</p>
         <subsection name="Parameters">
            <p>This section specifies the general properties associated with parameters for all application types - see below for properties related to Commandline application parameters.
            </p>
            <p>A parameter is characterised chiefly by its identifier (the id attribute) and its type (the type attribute). Each of the parameters should be given a
                  particular type - The type assigned allows CEA clients
                  to provide a suitable GUI representation and
                  validation of the parameter. The following table lists
                  the possible parameter types</p>
                  <table border="1">
                  <tr>
                     <th scope="col">Type</th>
                     <th scope="col">Description</th>
                     <th scope="col">Notes</th>
                  </tr>
                  <tr>
                     <td>integer</td>
                     <td>an integer value</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>
                        <p>real</p>
                     </td>
                     <td>a real value (any precision)</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>complex</td>
                     <td>a complex number pair</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>text</td>
                     <td>any data that could be interpreted as human
                        readable text in a well known encoding.</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>boolean</td>
                     <td>a boolean value</td>
                     <td>0/1 true/false yes/no on/off - style
                        determined by the default value</td>
                  </tr>
                  <tr>
                     <td>anyURI</td>
                     <td>a string that could be interpreted as a URI.
                     </td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>VOTable</td>
                     <td>a VOTable conforming to the IVOA specification
                     </td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>angle</td>
                     <td>Angular measure on the sky</td>
                     <td>sexagesimal allowed</td>
                  </tr>
                  <tr>
                     <td>MJD</td>
                     <td>Modified julian data</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>DateTime</td>
                     <td>A date and time in ISO 8601 format</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>ADQL</td>
                     <td>Astronomical Query Language</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>binary</td>
                     <td>arbitrary data</td>
                     <td>Data for which there is no specific well
                        known type</td>
                  </tr>
                  <tr>
                     <td>FITS</td>
                     <td>a file conforming to the [FITS] standard</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>xml</td>
                     <td>arbitrary xml</td>
                     <td>
                        <p>the schema for the xml is optionally
                           indicated in the UType of the parameter</p>
                        <p>
                        </p>
                     </td>
                  </tr>
                  <tr>
                     <td>table</td>
                     <td>some tablular data</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>image</td>
                     <td>an astronomical image</td>
                     <td>
                     </td>
                  </tr>
                  <tr>
                     <td>spectrum</td>
                     <td>a spectrum</td>
                     <td>
                     </td>
                  </tr>
               </table>
            <p>The generic elements (all of which are optional) that can occur within any
               parameterDefinition are;</p>
            <dl>
               <dt>&lt;name/&gt;</dt> <dd>the name that will be used for display in the portal for the parameter</dd>
<dt>&lt;description/&gt;</dt> <dd>a description of the parameter that will be used in the portal</dd>
<dt>&lt;UCD/&gt;</dt> <dd>the ucd for the parameter if it has one - at the moment nothing uses this.</dd>
<dt>&lt;DefaultValue/&gt;</dt><dd> can be used to display a default value in the portal</dd>
<dt>&lt;unit/&gt;</dt> <dd>can be used to specify the units in the portal.</dd>
<dt>&lt;UType/&gt;</dt> <dd>The UType associated with a parameter.</dd>
<dt>&lt;mimeType/&gt;</dt> <dd>The mimeType of the parameter</dd>
<dt>&lt;optionList/&gt;</dt> <dd>Allows the specification of a fixed set of possible values for the parameter.</dd>
<dt>&lt;range/&gt;</dt> <dd>Allows a permissible range for the parameter to be set.</dd>
</dl>
          </subsection>
         <subsection name="Interfaces">
         <p>An application must have at least one interface - even for an application with only possible interface this construct distinguishes the actual input and output parameters. 
         The parameters are represented in the interface within either the input or output element with a pref element that points to the identifier of the parameter in question. Each interface can additionally have a constants element that defines parameters that have a fixed value for that particular interface.</p>
         
         <p><strong>Note</strong> although the schema supports the concept of grouping parameters with pgroup, rgroup and cgroupHead elements, this facility is not yet supported by software components that make up the astrogrid suite, so these constructs should not be used in this release.</p>
         </subsection>
         <subsection name="Configuration File">
         <p>The configuration file should conform to the <a href="http://www.astrogrid.org/viewcvs/astrogrid/contracts/src/schema/cea/CEAImplementation/v2.0/CEAImplementation.xsd?revision=1.2&amp;view=markup">CeaImplementation.xsd, 2.0</a> schema (with namespace
         http://www.astrogrid.org/schema/CEAImplementation/v2.0)
         </p>
            <p>
               This file should be of the same form as
               <a
                  href="./config/app-description.xml"
               >this example configuration file</a>

            </p>
            <p>To define more than one application in the single file then the CECConfig element should be used as a top-level element,
             but if only a single application is to be defined then a CeaApplication element can be used - it is possible to configure multiple applications each within their own
             separate file by placing them in a directory and then setting the "applicationDescriptionUrl" property of the configuration to point to that directory rather than an individual file.</p>
         </subsection>
 
 
   </section>
   <section name="Kinds of Applications">
     
     <p>This page has discussed the features that are common to all kinds of CEA applications - to actually install an application it is necessary to use one of the specific types of 
     application that the CEC is capable of running - Each of these kinds is discussed in more detail on a separate page</p>
     <ul>
     <li><a href="commandline.html">Commandline Applications</a></li>
     <li><a href="javaclass.html">Java Applications</a></li>
     <li><a href="httpapplication.html">"HTTP Form" Applications</a></li>
     
     </ul>
   
   </section>     
      
    
</body>
</document>
