<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
	<properties>
		<author email="pah@jb.manac.uk">Paul Harrison</author>
		<title>Installation</title>
	</properties>
	<body>
		<section name="Installation">
		<p>This document describes the standard installation using Tomcat as a web container. However, the CEC is written as a standards compliant J2EE application, so should be 
      capable of being installed in any J2EE container. Please see the reference guide for
			possible variations. Below is listed the depended components that are used in writing and testing of the CEC - we recommend that this</p>
		<ul>
		<li>
             <p>Use SUN Microsystem's implementation of Java 5.
                  You only need the Java Runtime Environment package; you don't 
                  need the full Java Development Kit.</p>
		</li>
         <li>
              <p>Use Apache-Tomcat 5.5 as the web-container.</p>
         </li>   
                
                </ul>
	        <subsection name="Tomcat users and roles">
                  <p>In Tomcat's <i>tomcat-users.xml</i> file, make sure that
                  you have at least one user with the <i>manager</i> role.</p>
	        </subsection>
			<subsection name="Naming the web-application context">
                         				<p>
					You must choose a name for the "context" in which the web-application runs. This name will 
					become part of the URLs for your CEC web-service and the web pages of your CEC web-application. 
					E.g., if you name the web-application context "CEC-1", the URLs will be of the form 
        <pre>
http://your.server.address:8080/CEC-1/
http://your.server.address:8080/CEC-1/services/CommonExecutionConnectorService 
</pre>
					respectively.
				</p>
            <p>This context identifier is also used when saving the initial configuration file as described in the <a href="CONFIGURE.html">configuration section</a>
            </p>
			</subsection>
          <subsection name="Security">
               <p>The CEC is fully compliant with current IVOA security standards. This means, amongst other things, that the CEC supplies a delgation service
               which allows the CEC to act on behalf of the caller to access other secure services - e.g. VOSpace. To configure the necessary security settings within Tomcat please see the <a href="SECURITY.html">security configuration</a> instructions.
               </p>
               <p>
                 If you do not set up this CEC to have this level of security then it will still be able to communicate with VOSpace servers that allow unauthenticated access.
               </p>
          </subsection>
			<subsection name="VOSpace">
           <p>This version of the CEC web-application can use IVOA-standard VOSpace to obtain parameter values and store results. This should not require any furhter configuration beyond setting a registry location as detailed below.</p>
		   <p> In Addition, this CEC works with AstroGrid's <i>FileManager</i> component to read and write files in
					AstroGrid MySpace. The details of which stores to use are set by the clients of the web-application
					in requests to the CEC web-service. You do not need to supply your own FileManager to operate
					the CEC web-application.</p>
                                
			</subsection>
			<subsection name="Registry">
				<p> Your web application uses an IVOA resource-registry to publicize its capabilities (as well as discovering other services such as VOSpace). You
					must have access to a registry in which you can publish your resources and a registry from
					which your CEC can search for resources at run-time. </p>
				<p> The publishing registry and the searchable registry may be the same service. In this
					case, you will typically use an external registry. As an alternative, you may choose to
					run a local publishing registry. This makes it easier to publish and maintain groups of
					services on your site and also helps you establish a "brand" for your services by
					associating them with your own publishing authority. If you want to run a publishing
					registry, then you should install and set up the AstroGrid registry component
					<em>before</em> setting up your CEC. </p>
			</subsection>
		<subsection name="Installation procedure">
				<ol>
				<li>Obtain a copy of the WAR file for the CEC from the AstroGrid software site. See the
					<a href="DOWNLOAD.html">guide to downloading</a> for details. </li>
				<li>Rename the WAR file to match the chosen name of the web-application context; e.g.
					CEC-1.war if the context is CEC-1 as in the example above. </li>
				<li>Copy your renamed WAR file into the <i>webapps</i> sub-directory of your Tomcat
					installation. Wait a few seconds. Tomcat notices the WAR file, unpacks the web-application
					into a sub-directory tree in the <i>webapps</i> directory and starts the
					web-application.</li>
				<li>
					Check that the web-application has started correctly by going, with a web-browser, to the
					root of the web application (http://your.server.address:8080/CEC-1/ in the example above).
					If no web-page is returned, then there is a problem with the WAR.
				</li>
				<li>Now set up your web-application by following the instructions in the configuration guide.</li>
				</ol>
		</subsection>
		</section>
	</body>
</document>
