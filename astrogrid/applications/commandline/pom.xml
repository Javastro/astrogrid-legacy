<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.astrogrid</groupId>
  <artifactId>astrogrid-cea-cec</artifactId>
  <packaging>war</packaging>
    <parent>
      <artifactId>astrogrid-cea-site</artifactId>
      <groupId>org.astrogrid</groupId>
      <version>2009.1-SNAPSHOT</version>
    </parent>
  <name>CEA CEC web server</name>
  <version>${astrogrid_cea_version}</version>
  <description>A CEA application-server for running applications. The service provides
    CEA's standard SOAP interface, "CommonExecutionController" and a UWS interface.</description>
  <properties>
   <astrogrid_name>cea/cec</astrogrid_name>
  </properties>
  
<!--  <url>http://software.astrogrid.org/doc/${astrogrid_release}/cea/commandline</url>  -->
  
  <scm>
      <connection>scm:cvs:pserver:anonymous:@cvs2.astrogrid.org:/astrogrid:devel/astrogrid/applications/commandline/</connection>
      <developerConnection>scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:astrogrid/applications/commandline/</developerConnection>
      <url>http://www.astrogrid.org/viewcvs/astrogrid/applications/commandline/</url>
      <tag>cea_2008_2</tag>
  </scm>
    
  <build>
    <sourceDirectory>src/java</sourceDirectory>
    <testSourceDirectory>test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>${basedir}/src/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
          <include>**/*.xsl</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${basedir}/test/java</directory>
        <includes>
          <include>app/**</include>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
          <include>**/*.sql</include>
          <include>**/*.txt</include>
          <include>**/*.csv</include>
        </includes>
        
      </testResource>
      <testResource>
        <directory>${basedir}/config</directory>
        <includes>
          <include>CeaApplicationConfig.xml</include>
        </includes>
      </testResource>
    </testResources>
          <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
               <warSourceDirectory>${basedir}/src/webapp</warSourceDirectory> <!-- consistent with current 1.0 practice -->
              <webResources>
              
                <resource>  <!-- put a copy of the raw xdocs into the webapp - these are translated on the fly by the webapp -->         
                  <directory>src/site/xdoc</directory> 
                  <targetPath>doc/xdoc</targetPath>
                  <filtering>true</filtering>
                 </resource>
                 <resource> <!-- put the example configuration in the webapp -->
                    <directory>src/site/resources/config</directory>
                    <targetPath>config</targetPath>
                    <filtering>true</filtering>
                 </resource>
               </webResources>
               
            </configuration>
         </plugin>
          
         <!-- eclipse project generation for web projects - assumes that you have wtp 1.5 installed and there is a runtime-->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-eclipse-plugin</artifactId>
            <configuration>
               <wtpversion>1.5</wtpversion>
               <classpathContainers>
                  <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                  <classpathContainer>org.eclipse.jst.server.core.container/org.eclipse.jst.server.tomcat.runtimeTarget/Apache Tomcat v5.5</classpathContainer>
                  <classpathContainer>org.eclipse.jst.j2ee.internal.web.container</classpathContainer>
               </classpathContainers>
               <downloadSources>true</downloadSources>
               <downloadJavadocs>false</downloadJavadocs>
               
            </configuration>
         </plugin>
         <plugin><!-- would be nice to have this factored higer to top level - cold be don wth ant if contrib task...-->
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase><!-- in maven 2.1 there will be a prepare-package phase , which would make this simpler - could just echo the file to ${project.build.directory}/${project.build.finalName}/ -->
            <configuration>
              <tasks> <!-- want this only to happen if there is -->
                    <tstamp>
    <format property="TODAY_UK" pattern="d-MMMM-yyyy" locale="en,UK"/>
  </tstamp>
                  <echo message="${pom.name} version:${project.version} built:${TODAY_UK}" file="${project.build.directory}/about.txt" level="error" />
                  <available 
                    file="${project.build.directory}/${project.build.finalName}.war" 
                    property="file.exists" value="true" /> 
                   <jar destfile="${project.build.directory}/${project.build.finalName}.war" basedir="${project.build.directory}" includes="about.txt" update="true"  />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      </plugins>
    
  </build>
  <dependencies>
     <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>1.1.2</version>
        
     </dependency>
     <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.1.2</version>
     </dependency>
     <dependency>
        <groupId>org.astrogrid</groupId>
        <artifactId>astrogrid-cea-server</artifactId>
        <version>${project.version}</version>
     </dependency>
 
     <dependency><!-- these are the test classes - needed for the self tests -->
        <groupId>org.astrogrid</groupId>
        <artifactId>astrogrid-cea-server</artifactId>
        <version>${project.version}</version>
        <classifier>tests</classifier>
     </dependency>
     
     <dependency>
        <groupId>uk.ac.starlink</groupId>
        <artifactId>stil</artifactId>
        <version>2.0-1</version>
     </dependency>
     <dependency>
        <groupId>voi</groupId>
        <artifactId>voi-vowrite</artifactId>
        <version>UNKNOWN</version>
     </dependency>
     <dependency>
        <groupId>net.sf.kxml</groupId>
        <artifactId>kxml2</artifactId>
        <version>2.1.7</version>
     </dependency>
     <dependency>
        <groupId>cds.u-strasbg.fr</groupId>
        <artifactId>cds.savot.model</artifactId>
        <version>2.6</version>
     </dependency>
     <dependency>
        <groupId>cds.u-strasbg.fr</groupId>
        <artifactId>cds.savot.pull</artifactId>
        <version>2.6</version>
     </dependency>
     <dependency>
        <groupId>cds.u-strasbg.fr</groupId>
        <artifactId>cds.savot.pull</artifactId>
        <version>2.6</version>
     </dependency>
     <dependency>
        <groupId>cds.u-strasbg.fr</groupId>
        <artifactId>cds.savot.writer</artifactId>
        <version>2.6</version>
     </dependency>
     <!--    <dependency>
        <groupId>cds.u-strasbg.fr</groupId>
        <artifactId>cds.savot.samples</artifactId>
        <version>2.6</version>
        </dependency>  -->
     <dependency><!-- chiba for xforms - really want to upgrade to the next version whn release as it will be using saxon for xpath - much better -->
        <groupId>org.chiba</groupId>
        <artifactId>chiba-core</artifactId>
        <version>1.5.2</version>
        <type>jar</type>
     </dependency>
     <dependency>
        <groupId>org.chiba</groupId>
        <artifactId>chiba-web-jar</artifactId>
        <version>2.3.0</version>
        <type>jar</type>
     </dependency>
     <dependency>
        <!-- need to declare locally to get the special version -->
        <artifactId>commons-jxpath</artifactId>
        <groupId>commons-jxpath</groupId>
        <version>1.2-chiba-patched</version>
        <exclusions>
           <!-- this includes a really old version of xerces...before the split into the xercesImpl jar -v.bad... -->
           <exclusion>
              <artifactId>xerces</artifactId>
              <groupId>xerces</groupId>
           </exclusion>
           <exclusion>
              <artifactId>xml-apis</artifactId>
              <groupId>xml-apis</groupId>
           </exclusion>
        </exclusions>
     </dependency>
     
            <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon</artifactId>
            <version>9.0</version>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>saxon-dom</artifactId>
            <version>9.0</version>
        </dependency>
        <dependency>
            <groupId>uk.ltd.getahead</groupId>
            <artifactId>dwr</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>1.5.2</version>
        </dependency>
     <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <version>4.4</version>
    </dependency>
     
     
     <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>2.5.2</version>
        <!-- <scope>test</scope> seem to need in the javadoc -->
     </dependency>
  </dependencies>
  <profiles><profile><id>chibaprof</id> <!-- need to switch this profile on to activate the repositories for initial download -->
      <repositories>
        <repository>
            <!-- repository to receive needed Chiba files -->
            <id>chiba</id>
            <name>Archiva Managed Internal Repository</name>
            <url>http://chibaxforms.org:8181/archiva/repository/chiba/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>
  </profile>
  </profiles>
    <url>${astrogrid_doc_URL_root}/p/cea/${project.version}/cec</url> 
   <distributionManagement>
    <site>
      <id>agsite</id>   <!-- this is the desired layout of the site and - will have to be repeated in the  projects unfortunately until fixes to http://jira.codehaus.org/browse/MNG-2915 are available  -->
      <name>Default Site</name>
      <url>${astrogrid_doc_server_root}/p/cea/${project.version}/cec</url>
      <!-- terror.star.le.ac.uk/ -->
    </site>
 </distributionManagement>

</project>