<?xml version="1.0" ?>
<document>
<properties>
	<author email="pah@jb.man.ac.uk">Paul Harrison</author>
	<title>Application Controller Installation Information</title>
</properties>

<body>
<section name="Common Execution Architecture Design">
    <subsection name="Introduction">
        <p>The Common Execution Architecture (CEA) is an attempt to create a reasonably small set of interfaces and schema
           to model how to execute a typical Astronomical application within the Virtual Observatory (VO). 
           In this context an application can be any process that consumes or produces data. </p>
           <p>The CEA has been primarily designed to work within a web services calling mechanism, although it is possible to have specific language bindings using the same interfaces. 
               For example Astrogrid has a java implementation of the interfaces that can be called directly from a java executable. </p>
        
    </subsection>
    <subsection name="Motivation">
        <p>The primary motivating factors behind creating this architecture are;</p>
        <ul>
            <li>To create a uniform interface and model for an application and its parameters. This has twin benefits;
                <ol><li>It allows VO infrastructure writers a single model of an application that that have to code for.</li>
                    <li>Application writers know what they have to implement to be compatible with a VO Infrastructure.</li></ol>
                </li>
                <li>To provide a higher level description than WSDL can offer.
                    <ul>
                        <li>Restrict the almost limitless possibilities into a managable subset</li>
                        <li>Provide specific semantics for some astronomical quantities</li>
                        <li>Provide extra information not allowed in WSDL - e.g. default values, descriptions for use in a GUI etc. </li>
                    </ul>
                    
                    </li>
                    <li>To provide links with the VO Resource schema <a href="http://www.ivoa.net/twiki/bin/view/IVOA/IVOARegWp03#VOResource_a_Resource_Metadata_S">(See the IVOA WG)</a></li>
        </ul>
        
        
    </subsection>
    <subsection name="History">
        <p>The design for this architecture was started as part of the Workflow/Job Execution System within astogrid</p>
        
        <p>The astrogrid implementation is <a href="CEAImplementation.html">discussed here</a></p>
        
    </subsection>
    <subsection name="Actors">
        <ul>
            <li>Application - This is the process that is to be executed. It is defined as a process that can consume or create data. So this can include unix command line tools, database queries, web services etc.</li>
            <li>Common Execution Controller - this is the component that implements the CommonExecutionConnector interface, and actually controls the execution of the application. There can be various specialisms of this service, such as the CommandLineApplicationContoller, which can be configured to invoke a general unix command line tool, a WebServiceApplicationContoller, which can be configured to act as a proxy to call a general web service in a uniform manner</li>
            <li>Invoking process</li>
            <li>Monitoring Service - This is a service that the Common Execution Controller can report status to - it can of course be </li>
            <li>Storage Service - this is the mechanism by which the application can return its results. It can encompass a wide variety of mechansims e.g.
                <ul>
                    <li>SOAP messages</li>
                    <li>http get/put</li>
                    <li>SOAP attachments</li>
                    <li>ftp/gridftp</li>
                    <li>MySpace</li>
                    <li>local filestore</li>
                    <li>etc.</li>
                </ul></li>
        </ul>
    </subsection>
    
</section>
<section name="Formal Definition">
    <subsection name="Interactions">
        
        <img width="900" height="720"  src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/applications/design/CEACallSequence.gif?rev=HEAD&amp;content-type=image/gif"></img>
        <p>The above sequence diagram illustrates how the various components of the CEA system interact when an application is executed. This is initiated by the </p>
        <p>Some point of note;</p>
        <ul>
            <li>The monitoring service could equally be the same as the invoking service - they are shown as conceptually separate, as the endpoint of this service is passed in as an argument to the call</li>
            <li>The only guaranteed status message that the monitoring service will receive is the one informing it that the application has finished (or failed). The application might be capable of sending intermediate messages whilst it is sill executing, but this is not required. </li>
            <li>The results of the application running are not returned directly to the invoking process. The final destination for the results is implicit in the specification of the output parameters, and it is the responsibility of the CommonExecutionController to ensure that they get there.</li>
        	
        </ul>
    </subsection>
    <subsection name="Interfaces">
         <h5>CommonExecutionConnector</h5>
             <p>This is the main interface that is used to communicate with the application. The main methods of are (please note that there are some extra methods defined in the WSDL that are defined for experimental purposes)</p>
             
             <p>The WSDL definition of this interface is stored in cvs at <a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/CommonExecutionConnnector.wsdl?rev=HEAD">http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/CommonExecutionConnnector.wsdl?rev=HEAD</a></p>
             <iframe src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/CommonExecutionConnnector.wsdl?rev=HEAD&amp;content-type=text/plain" width="100%" height="400">
this should display http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/CommonExecutionConnnector.wsdl?rev=HEAD&amp;content-type=text/plain
</iframe>
             
        <h5>JobMonitorService</h5>
             <p>The WSDL definition of this interface is stored in cvs at <a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/JobMonitor.wsdl?rev=HEAD">http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/JobMonitor.wsdl?rev=HEAD</a></p>
             <iframe src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/JobMonitor.wsdl?rev=HEAD&amp;content-type=text/plain" width="100%" height="400">
this should display http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/wsdl/JobMonitor.wsdl?rev=HEAD&amp;content-type=text/plain
</iframe>
    </subsection>      
    <subsection name="Objects">
        <h5>Application</h5>
        <p>uml model</p>
                <img src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/applications/design/ceaApplication.gif?rev=HEAD&amp;content-type=image/gif"/>
                <p>As this model depicts an application in CEA is really quite a simple entity consisting of 1 or more interfaces that consist of 0 or more input parameters and 0 or more output parameters.</p>
        <p>The schema representation is shown below, and is essentially a representation of the UML model that has been coded to recognise that the same parameter can occur in several interfaces.</p>
             <img src="ApplicationBase.png"></img>
       <h5>Parameter</h5>
        <p>The description of the parameters and the parameter values are probably the heart of the CEA. It is the model for the parameters that allow us to add semantic meaning, and to give the flexibility in how the parameters are transported. The implementation is still in its infancy, but it is hoped that the parameter definition will be extented to encompass any data models that the VO produces.</p>
        <p>The basic parameter definition from the schema is shown below</p>
        <img src="BaseParameterDefintion.png" />
        <p>The <a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/AGParameterDefinition.html#type_parameterValue">parameterValue</a> model is simple but powerful the parameterValue element has 3 attributes</p>
        <ul>
            <li><b>Name</b></li>
            <li><b>Type</b> this describes the data type of the parameter. It can range from simple atomic types such and integer and string to specific astronomical types such as right ascension and declination all the way to complex structures such as VOTables and FITS files.</li>
            <li><b>Transport</b> this describes the transport method to obtain or return a parameter. For an input parameter the default is for the parameter value to be contained within the calling SOAP message, however for an output parameter there is no such default and this attribute must be given a value. The different sorts of transport include
                <ul>
                  <li>SOAP messages</li>
                    <li>http get/put</li>
                    <li>SOAP attachments</li>
                    <li>ftp/gridftp</li>
                    <li>MySpace</li>
                    <li>local filestore</li>
                 </ul> </li>
        </ul>
        <p>Note that the current implementation has the type and transport attributes combined as one - so that there can be a type of MySpace_VOTableReference for instance - the full implemnentation will have them separated as described above for more flexibility.</p>
       
    </subsection>
    <subsection name="Schema">
        <p>The schema associated with the CEA fall into two categories</p>
        <ol>
            <li>The schema used to define the messages within the CommonExecutionConnector interface.</li>
            <li>The schema that is used to define the VOResource extension for CEA.</li>
        </ol>
        <p>These schema are strongly interelated, which aids programming with automated object generation tools. The schema associated with CEA are described below with links to their documentation</p>
    	<table>
    	    <tr><th>Filename (with cvs link)</th><th>Description</th><th>Documentation</th></tr>
    	    <tr>
    	        <td><a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/schema/AGApplicationBase.xsd?rev=HEAD&amp;content-type=text/plain">AGApplicationBase.xsd</a></td><td>This schema defines most of the basic CEA objects that are imported into both the WSDL and the Registry Schema</td><td><a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/AGApplicationBase.html">Documentation</a></td>
    	      </tr>
    	      <tr>
    	         <td><a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/schema/VOCEA.xsd?rev=HEAD&amp;content-type=text/plain">VOCEA.xsd</a></td><td>This defines the VOResource extensions of CeaApplication and CeaService that are used in the registry</td><td><a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/VOCEA.html">Documentation</a></td>
    	      </tr>
    	      <tr>
    	        <td><a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/schema/AGParameterDefinition.xsd?rev=HEAD&amp;content-type=text/plain">AGParameterDefinition.xsd</a></td><td>Contains the basic parameter definition and parameter value elements used in the other schema</td><td><a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/AGParameterDefinition.html">Documentation</a></td>
    	      </tr>
    	      <tr>
    	        <td><a href="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/workflow-objects/schema/Workflow.xsd?rev=HEAD&amp;content-type=text/plain">Workflow.xsd</a></td><td>This schema actually describes an astrogrid workflow document in full, but as part of this is the <a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/Workflow.html#element_tool">tool</a> element that is passed in as a parameter to the execute method in the CommonExecutionConnector method. This tool element will be factored out into its own CEA specific schema in future</td><td><a href="http://www.astrogrid.org/maven/docs/snapshot/astrogrid-workflow-objects/schema/Workflow.html">Documentation</a></td>
              </tr>    	   
    	</table>
    </subsection>
    
</section>
<section name="Deployment">
    <subsection name="Typical Scenario">
        <img width="834" height="459" src="http://www.astrogrid.org/viewcvs/*checkout*/astrogrid/applications/design/CEADeployment.gif?rev=HEAD&amp;content-type=image/gif"/>
        <p>This deployment shows some of the features of using the CEA</p>
        <ul>
            <li>On the right hand side of the diagram there are command line applications that are wrapped by specialized CommonExecutionControllers that allow the workflow engine to use the CommonExecutionConnector interface to communicate</li>
            <li>There is a webservices proxy component that can act as an adapter between a generic web service and the CommonExecutionConnector interface</li>
        	<li>On the left of the diagram the webservices proxy is localised with a web service so that the results returned by the webservice can be stored locally thus minimising network traffic</li>
        </ul>
    </subsection>
    
</section>
<section name="Future Directions">
    
</section>
</body>
</document>