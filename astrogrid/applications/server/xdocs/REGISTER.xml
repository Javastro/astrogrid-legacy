<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
<properties>
        <author email="gtr@ast.cam.ac.uk">Guy Rixon</author>
        <title>Registration</title>
</properties>

<body>

<section name="Required registrations"><p>
	To make your CEC useful in the IVO, you must register, in an
	IVOA-compliant resource registry:
</p>
	<ol>
		<li>each application that the CEC can run (but see the notes on mirrors, below);</li>
		<li>the CEC as a service.</li>
	</ol>
	<p>
		The application registrations state the interfaces of the applications.
		The service registration states the service endpoint (the URL for access)
		and lists the applications that the CEC can run. For each registration,
		you submit a resource document (an XML file) stating the necessary metadata
		in a machine-readable format.
	</p>
	<p>
		You have a choice: either prepare and submit your resource documents manually,
		or let the CEC register itself automatically on your behalf. AstroGrid
		recommends automatic registration <em>except</em> in the case where you
		are mirroring applications previously registered; in that case you
		<em>must</em> use manual registration as the automatic registration
		can't cope. This flaw should be fixed in a later version of the CEC software.
 	</p>
</section>

	<section name="Mirroring applications">	
		<p>
			If you are setting up your CEC to run applications already defined and published
			in the IVO, then you do not need to register these. You must still register the
			CEC itself.
		</p>
		<p>
			If you do this, you are declaring your service as a mirror of the existing services
			running the applications in question; you are promising that your service will
			produce the same results as those services for given inputs. The AstroGrid UIs and 
			workflow agents will then distribute jobs indiscriminately between
			the services mirroring the application. Mirroring is very valuable to the IVO for
			load balancing and high availablity, but please don't publish your service as a mirror of
			an application unless you are sure that you have installed the right version of
			the application!
		</p>
		<p>
			One way to check that your mirroring is exactly correct is to generate the 
			registration document for your configuration using the "show registration document"
			link in the sidebar. Compare the application descriptions in your document
			with those in the IVO registry: they should be the same.
		</p>
	</section>
	
  <section name="Automatic registration">
  	<p>
  		First, check the content of the registration using the "show registration document"
  		link in the side-bar. If the content isn't right, go back to the configuration
  		stage and fix it.
  	</p>
  	<p>
  		Second, make sure that your CEC is working properly, using the self-test
  		features. If it isn't working, go back to configuration and find out why.
  	</p>
  	<p>
  		Remember: registration <em>publishes</em> your resources into the IVO and
  		invites science users to depend on them. It is best not to register until
  		everything is right.
  	</p>
	  <p>
		  Use "register" link from the sidebar. This generates the 
		  resource documents and submits them to the configured publishing-registry. 
	  </p>
  </section>
	
  <section name="Manual registration">
  	<p>
  		Most registries have a web-browser interface whereby you can submit 
  		resource documents manually. Typically, and especially in the AstroGrid
  		implementation of the registry, you upload the registration documents
  		from files on disc.
  	</p>
  	<p>
  		You can get a registration document using the "show registration document"
  		link in the sidebar. Save this to disc and edit it as necessary. You need
  		to be very careful not to "break" the structure of the document. Refer to
  		the registration template in your configuration directory for advice on
  		what to write.
  	</p>
  	<p>
  		In the special case of a CEC that mirrors applications, you should edit
  		the registration document produced by the CEC to remove the application
  		description, leaving only the service description.
  	</p>
	</section>

<section name="Deregistering obsolete resources">
	
	<subsection name="Ceasing service of an application">
	  <p>
		  If you want to cease service of an application, then you should update the list 
		  of managed applications in the service registration of your CL-CEC. Do this by
		  changing the configuration - see the <a href="CONFIGURE.html">configuration guide</a>
		  - and repeating the registration of the CEC as described above. This states to the IVO
		  that your own CEC no longer provides the application. It doesn't eliminate the
		  registered description of the application; thus you can do this whether or not
	  	you originally registered the application and whether or not other services are
	  	offerring the same application.
	  </p>
	</subsection>
	
	<subsection name="Unregistering an application">
		<p>
			Unregistering an application removes it from the IVO resource-register causing 
			the IVO to forget its details. You should do this only if you were the party
			who originally registered the application and if no CECs anywhere in the IVO
			are offering the application. Therefore, cease service, as described above,
			in your own CEC before deregistering.
		</p>
		<p>
			For Java-class applications, you will have to make a registry
			to make sure that no other CECs are offering the application. 
		</p>
		<p>
			To deregister an application, use the controls for the register; you can't do this
			from the CEC's local controls. The exact technique varies between registry 
			implementations, but typically you set the <i>status</i> attribute of the
			registration to "deleted".
		</p>
	</subsection>
	
	<subsection name="Deregistering the CEC service">
 	  <p>
		  If you want to withdraw your CEC from service permanently or for a lengthy period 
 	  	(but not just for short down-time), then you should deregister it. You do this by 
 	  	editing the service resource-document, changing the value of the <i>status</i> 
 	  	attribute on the <i>Resource</i> element to "deleted" and re-registering it, 
 	  	as described above, under the same identifier.
 	  </p>
	</subsection>
	
</section>

</body>
</document>
