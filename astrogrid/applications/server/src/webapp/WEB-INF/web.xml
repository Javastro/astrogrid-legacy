<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app>
  <display-name>Astrogrid CEA Server</display-name>
  <servlet>
    <servlet-name>AxisServlet</servlet-name>
    <display-name>Apache-Axis Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AxisServlet
    </servlet-class>
  </servlet>
<!-- Don't want this
  <servlet>
    <servlet-name>AdminServlet</servlet-name>
    <display-name>Axis Admin Servlet</display-name>
    <servlet-class>
        org.apache.axis.transport.http.AdminServlet
    </servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>
  -->
 <servlet>
    <servlet-name>JUnitEETestServlet</servlet-name>
    <description>JUnitEE test runner</description>
    <servlet-class>org.junitee.servlet.JUnitEEServlet</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>SOAPMonitorService</servlet-name>
    <display-name>SOAPMonitorService</display-name>
    <servlet-class>
        org.apache.axis.monitor.SOAPMonitorService
    </servlet-class>
    <init-param>
      <param-name>SOAPMonitorPort</param-name>
      <param-value>5001</param-value>
    </init-param>
    <load-on-startup>100</load-on-startup>
  </servlet>

  <servlet>
      <servlet-name>cec-http</servlet-name>
      <description>
        a small servlet that helps cea by
    * querying servlet context - find out where it is, set keys in config from this
    (keys used to generate VODescription for this CEA service)
    * if 'boot.cea' set to 'true' will invoke .startup() on the pico container on context deploy
        - sometimes good - e.g. when services want to auto-register on startup.
        - however, was causing problems with auto-integration (race conditions between webapps), so disabled by default
    * provides http-get access to some of the cec methods (call by HTTP-GET with no params for usage info)
      </description>
      <servlet-class>org.astrogrid.applications.component.InitServlet</servlet-class>
      <init-param>
        <param-name>boot.cea</param-name>
        <param-value>false</param-value>
      </init-param>
      <load-on-startup>200</load-on-startup>
  </servlet>

 <servlet-mapping>
    <servlet-name>JUnitEETestServlet</servlet-name>
    <url-pattern>/TestServlet/*</url-pattern>
 </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/servlet/AxisServlet</url-pattern>
  </servlet-mapping>

  <!-- shouldn't enable this - we don't need it
  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>*.jws</url-pattern>
  </servlet-mapping>
-->
  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
        <servlet-name>cec-http</servlet-name>
        <url-pattern>/cec-http</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SOAPMonitorService</servlet-name>
    <url-pattern>/SOAPMonitor</url-pattern>
  </servlet-mapping>

    <!-- currently the W3C havent settled on a media type for WSDL;
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response -->
  <mime-mapping>
    <extension>wsdl</extension>
     <mime-type>text/xml</mime-type>
  </mime-mapping>


  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <welcome-file-list id="WelcomeFileList">
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <!--
    <welcome-file>index.jws</welcome-file>
    -->
  </welcome-file-list>

  <!-- edit this env entry to use a custom component manager - e.g. for a different cea implementation -->
  <env-entry>
        <description>Class name of the component manager implementation to use</description>
        <env-entry-name>cea.component.manager.class</env-entry-name>
<!--        <env-entry-value>org.astrogrid.applications.component.JavaClassCEAComponentManager</env-entry-value>-->
		<env-entry-value>org.astrogrid.applications.apps.AppsCEAComponentManager</env-entry-value>
        <env-entry-type>java.lang.String</env-entry-type>
  </env-entry>

</web-app>
