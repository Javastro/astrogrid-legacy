//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.3-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.06.10 at 03:44:35 PM BST 
//


package org.astrogrid.applications.description.base;

import javax.xml.bind.annotation.XmlRegistry;



/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.astrogrid.applications.description.base package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.astrogrid.applications.description.base
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link OutputParameterReferenceSpecification }
     * 
     */
    public OutputParameterReferenceSpecification createOutputParameterReferenceSpecification() {
        return new OutputParameterReferenceSpecification();
    }

    /**
     * Create an instance of {@link InputParameterReferenceSpecification }
     * 
     */
    public InputParameterReferenceSpecification createInputParameterReferenceSpecification() {
        return new InputParameterReferenceSpecification();
    }

    /**
     * Create an instance of {@link ConditionalPgroupOption }
     * 
     */
    public ConditionalPgroupOption createConditionalPgroupOption() {
        return new ConditionalPgroupOption();
    }

    /**
     * Create an instance of {@link Range }
     * 
     */
    public Range createRange() {
        return new Range();
    }

    /**
     * Create an instance of {@link ParameterDefinitionList }
     * 
     */
    public ParameterDefinitionList createParameterDefinitionList() {
        return new ParameterDefinitionList();
    }

    /**
     * Create an instance of {@link InterfaceConstants.Pval }
     * 
     */
    public InterfaceConstants.Pval createInterfaceConstantsPval() {
        return new InterfaceConstants.Pval();
    }

    /**
     * Create an instance of {@link PGroup }
     * 
     */
    public PGroup createPGroup() {
        return new PGroup();
    }

    /**
     * Create an instance of {@link BaseParameterDefinition }
     * 
     */
    public BaseParameterDefinition createBaseParameterDefinition() {
        return new BaseParameterDefinition();
    }

    /**
     * Create an instance of {@link RangeBound }
     * 
     */
    public RangeBound createRangeBound() {
        return new RangeBound();
    }

    /**
     * Create an instance of {@link ConditionalPgroup }
     * 
     */
    public ConditionalPgroup createConditionalPgroup() {
        return new ConditionalPgroup();
    }

    /**
     * Create an instance of {@link RadioPGroup }
     * 
     */
    public RadioPGroup createRadioPGroup() {
        return new RadioPGroup();
    }

    /**
     * Create an instance of {@link InterfaceConstants }
     * 
     */
    public InterfaceConstants createInterfaceConstants() {
        return new InterfaceConstants();
    }

    /**
     * Create an instance of {@link ParameterRef }
     * 
     */
    public ParameterRef createParameterRef() {
        return new ParameterRef();
    }

    /**
     * Create an instance of {@link OptionList }
     * 
     */
    public OptionList createOptionList() {
        return new OptionList();
    }

    /**
     * Create an instance of {@link InterfaceDefinitionList }
     * 
     */
    public InterfaceDefinitionList createInterfaceDefinitionList() {
        return new InterfaceDefinitionList();
    }

    /**
     * Create an instance of {@link TDocumentation }
     * 
     */
    public TDocumentation createTDocumentation() {
        return new TDocumentation();
    }

    /**
     * Create an instance of {@link InterfaceDefinition }
     * 
     */
    public InterfaceDefinition createInterfaceDefinition() {
        return new InterfaceDefinition();
    }

    /**
     * Create an instance of {@link OptionVal }
     * 
     */
    public OptionVal createOptionVal() {
        return new OptionVal();
    }

    /**
     * Create an instance of {@link ApplicationBase }
     * 
     */
    public ApplicationBase createApplicationBase() {
        return new ApplicationBase();
    }

}
