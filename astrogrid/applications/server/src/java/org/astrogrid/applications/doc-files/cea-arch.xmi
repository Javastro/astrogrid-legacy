<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="org.omg/standards/UML" verified="false" timestamp="" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.2.0</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.model xmi.name="cea-arch" href="/home/noel/eclipse/applications-HEAD/server/src/java/org/astrogrid/applications/doc-files/cea-arch.xmi" />
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <docsettings viewid="265" documentation="" uniqueid="278" />
  <UML:Model>
   <UML:Class stereotype="class" visibility="public" xmi.id="13" name="Tool" />
   <UML:Class stereotype="class" visibility="public" xmi.id="21" name="CEAComponentManager" />
   <UML:Class stereotype="class" visibility="public" xmi.id="22" name="CEAComponentManagerFactory" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="64" isAbstract="true" name="ProvidesVODescription" />
   <UML:Class stereotype="class" visibility="public" xmi.id="65" name="RegistryEntryBuilder" />
   <UML:Class stereotype="class" visibility="public" xmi.id="67" name="RegistryUploader" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="68" isAbstract="true" name="ExecutionController" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="69" isAbstract="true" name="MetadataService" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="70" isAbstract="true" name="QueryService" />
   <UML:Class stereotype="class" visibility="public" xmi.id="71" name="DefaultExecutionController" />
   <UML:Class stereotype="class" visibility="public" xmi.id="72" name="DefaultMetadataService" />
   <UML:Class stereotype="class" visibility="public" xmi.id="73" name="DefaultQueryService" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="77" isAbstract="true" name="ExecutionHistory" />
   <UML:Class stereotype="class" visibility="public" xmi.id="78" name="Observer" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="80" isAbstract="true" name="ApplicationDescriptionLibrary" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="82" isAbstract="true" name="ApplicationDescription" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="83" isAbstract="true" name="Application" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="84" isAbstract="true" name="ApplicationInterface" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="85" isAbstract="true" name="ParameterDescription" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="86" isAbstract="true" name="ParameterAdapter" />
   <UML:Class stereotype="class" visibility="public" xmi.id="88" name="BaseApplicationDescriptionLibrary" />
   <UML:Class stereotype="class" visibility="public" xmi.id="89" name="CompositeApplicationLibrary" />
   <UML:Class stereotype="class" visibility="public" xmi.id="90" name="BaseAppplicationInterface" />
   <UML:Class stereotype="class" visibility="public" xmi.id="91" name="BaseParameterDescription" />
   <UML:Class stereotype="class" visibility="public" xmi.id="92" isAbstract="true" name="AbstractApplication" />
   <UML:Class stereotype="class" visibility="public" xmi.id="93" isAbstract="true" name="AbstractApplicationDescription" />
   <UML:Class stereotype="class" visibility="public" xmi.id="100" name="FileStoreExecutionHistory" />
   <UML:Class stereotype="class" visibility="public" xmi.id="101" name="InMemoryExecutionHistory" />
   <UML:Class stereotype="class" visibility="public" xmi.id="104" name="DefaultParameterAdapter" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="106" isAbstract="true" name="IndirectionProtocolLibrary" />
   <UML:Interface stereotype="interface" visibility="public" xmi.id="107" isAbstract="true" name="Protocol" />
   <UML:Class stereotype="class" visibility="public" xmi.id="111" name="JavaClassApplication" />
   <UML:Class stereotype="class" visibility="public" xmi.id="112" name="JavaClassApplicationDescription" />
   <UML:Class stereotype="class" visibility="public" xmi.id="113" name="JavaClassApplicationDescriptionLibrary" />
   <UML:Class stereotype="class" visibility="public" xmi.id="117" name="JavaClassCEAComponentManager" />
   <UML:Class stereotype="class" visibility="public" xmi.id="118" name="JavaClassParameterDescription" />
   <UML:Class stereotype="class" visibility="public" xmi.id="119" name="JavaClassParameterAdapter" />
   <UML:Association visibility="public" xmi.id="24" name="creates>" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="composite" type="22" />
     <UML:AssociationEndRole visibility="public" type="21" multiplicity="1" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="65" visibility="public" xmi.id="66" parent="64" />
   <UML:Generalization child="71" visibility="public" xmi.id="74" parent="68" />
   <UML:Generalization child="73" visibility="public" xmi.id="75" parent="70" />
   <UML:Generalization child="72" visibility="public" xmi.id="76" parent="69" />
   <UML:Association visibility="public" xmi.id="87" name="gets-parameters-from>" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="83" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="13" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="90" visibility="public" xmi.id="94" parent="84" />
   <UML:Generalization child="91" visibility="public" xmi.id="95" parent="85" />
   <UML:Generalization child="93" visibility="public" xmi.id="96" parent="82" />
   <UML:Generalization child="88" visibility="public" xmi.id="97" parent="80" />
   <UML:Generalization child="89" visibility="public" xmi.id="98" parent="80" />
   <UML:Generalization child="92" visibility="public" xmi.id="99" parent="83" />
   <UML:Generalization child="100" visibility="public" xmi.id="102" parent="77" />
   <UML:Generalization child="101" visibility="public" xmi.id="103" parent="77" />
   <UML:Generalization child="104" visibility="public" xmi.id="105" parent="86" />
   <UML:Association visibility="public" xmi.id="108" name="dereferences-parameter-values>" >
    <UML:Association.connection>
     <UML:AssociationEndRole visibility="public" aggregation="none" type="83" />
     <UML:AssociationEndRole visibility="public" isNavigable="true" type="106" />
    </UML:Association.connection>
   </UML:Association>
   <UML:Generalization child="111" visibility="public" xmi.id="114" parent="92" />
   <UML:Generalization child="112" visibility="public" xmi.id="115" parent="93" />
   <UML:Generalization child="113" visibility="public" xmi.id="116" parent="88" />
   <UML:Generalization child="117" visibility="public" xmi.id="121" parent="21" />
   <UML:Generalization child="119" visibility="public" xmi.id="123" parent="104" />
  </UML:Model>
  <diagrams>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="990" snapy="10" showatts="0" xmi.id="1" documentation="" type="406" showops="0" showpackage="0" name="CEA Server" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Arial,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="929" >
    <widgets/>
    <messages/>
    <associations/>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="990" snapy="10" showatts="0" xmi.id="6" documentation="" type="402" showops="0" showpackage="0" name="CEA Classes" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Arial,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="929" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="61" showattsigs="601" usesdiagramusefillcolour="1" x="676" linecolour="none" y="605" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="36" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="13" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="FreeSans,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="190" showattsigs="601" usesdiagramusefillcolour="1" x="69" linecolour="none" y="150" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="21" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="246" showattsigs="601" usesdiagramusefillcolour="1" x="9" linecolour="none" y="37" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="22" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="155" usesdiagramusefillcolour="1" x="698" linecolour="none" y="24" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="64" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="161" showattsigs="601" usesdiagramusefillcolour="1" x="744" linecolour="none" y="111" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="65" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="138" showattsigs="601" usesdiagramusefillcolour="1" x="490" linecolour="none" y="102" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="67" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="129" usesdiagramusefillcolour="1" x="295" linecolour="none" y="235" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="68" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="114" usesdiagramusefillcolour="1" x="302" linecolour="none" y="27" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="69" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="317" linecolour="none" y="154" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="70" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="206" showattsigs="601" usesdiagramusefillcolour="1" x="462" linecolour="none" y="245" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="71" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="180" showattsigs="601" usesdiagramusefillcolour="1" x="470" linecolour="none" y="39" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="72" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="156" showattsigs="601" usesdiagramusefillcolour="1" x="481" linecolour="none" y="163" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="73" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="111" usesdiagramusefillcolour="1" x="724" linecolour="none" y="168" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="77" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="77" showattsigs="601" usesdiagramusefillcolour="1" x="335" linecolour="none" y="593" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="78" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="191" usesdiagramusefillcolour="1" x="470" linecolour="none" y="385" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="80" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="146" usesdiagramusefillcolour="1" x="493" linecolour="none" y="515" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="82" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="72" usesdiagramusefillcolour="1" x="532" linecolour="none" y="639" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="83" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="130" usesdiagramusefillcolour="1" x="839" linecolour="none" y="450" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="84" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="144" usesdiagramusefillcolour="1" x="833" linecolour="none" y="562" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="85" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="123" usesdiagramusefillcolour="1" x="507" linecolour="none" y="739" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="86" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="199" showattsigs="601" usesdiagramusefillcolour="1" x="243" linecolour="none" y="457" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="88" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="167" showattsigs="601" usesdiagramusefillcolour="1" x="253" linecolour="none" y="361" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="89" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="151" showattsigs="601" usesdiagramusefillcolour="1" x="829" linecolour="none" y="378" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="90" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="154" showattsigs="601" usesdiagramusefillcolour="1" x="829" linecolour="none" y="652" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="91" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="128" showattsigs="601" usesdiagramusefillcolour="0" x="280" linecolour="#ff0000" y="708" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="92" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,1,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="195" showattsigs="601" usesdiagramusefillcolour="0" x="251" linecolour="#ff0000" y="536" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="93" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,1,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="199" showattsigs="601" usesdiagramusefillcolour="1" x="762" linecolour="none" y="259" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="100" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="205" showattsigs="601" usesdiagramusefillcolour="1" x="655" linecolour="none" y="293" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="101" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="148" showattsigs="601" usesdiagramusefillcolour="1" x="494" linecolour="none" y="835" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="104" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="167" usesdiagramusefillcolour="1" x="717" linecolour="none" y="755" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="106" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="53" usesdiagramusefillcolour="1" x="773" linecolour="none" y="853" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="107" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <boxwidget usesdiagramfillcolour="1" width="232" usesdiagramusefillcolour="1" x="1" linecolour="none" y="443" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="477" usefillcolor="1" isinstance="0" xmi.id="109" font="Arial,11,-1,5,50,0,0,0,0,0" />
     <UML:NoteWidget usesdiagramfillcolour="0" width="100" usesdiagramusefillcolour="1" x="125" linecolour="none" y="835" instancename="" usesdiagramlinecolour="1" fillcolour="#ffff00" height="80" usefillcolor="1" isinstance="0" xmi.id="110" text="Extensions for JavaClass Provider" font="Arial,9,-1,5,50,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="127" showattsigs="601" usesdiagramusefillcolour="1" x="84" linecolour="none" y="708" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="111" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="189" showattsigs="601" usesdiagramusefillcolour="1" x="21" linecolour="none" y="537" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="112" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="229" showattsigs="601" usesdiagramusefillcolour="1" x="1" linecolour="none" y="486" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="113" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="201" showattsigs="601" usesdiagramusefillcolour="1" x="14" linecolour="none" y="448" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="117" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="184" showattsigs="601" usesdiagramusefillcolour="1" x="37" linecolour="none" y="805" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="118" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="166" showattsigs="601" usesdiagramusefillcolour="1" x="55" linecolour="none" y="768" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="#dcdcdc" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="119" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="21" widgetaid="22" xmi.id="24" >
      <linepath>
       <startpoint startx="132" starty="66" />
       <endpoint endx="132" endy="150" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="132" linecolour="none" y="108" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="creates>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="134" linecolour="none" y="68" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="152" linecolour="none" y="127" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="1" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="113" linecolour="none" y="68" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="113" linecolour="none" y="125" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="64" widgetaid="65" xmi.id="66" >
      <linepath>
       <startpoint startx="824" starty="111" />
       <endpoint endx="775" endy="73" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="64" widgetaid="67" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="559" starty="102" />
       <endpoint endx="698" endy="56" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="68" widgetaid="71" xmi.id="74" >
      <linepath>
       <startpoint startx="462" starty="259" />
       <endpoint endx="424" endy="259" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="70" widgetaid="73" xmi.id="75" >
      <linepath>
       <startpoint startx="481" starty="177" />
       <endpoint endx="406" endy="178" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="69" widgetaid="72" xmi.id="76" >
      <linepath>
       <startpoint startx="470" starty="53" />
       <endpoint endx="416" endy="51" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="69" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="195" starty="150" />
       <endpoint endx="302" endy="51" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="233" linecolour="none" y="100" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="129" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="296" linecolour="none" y="26" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="130" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="70" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="259" starty="164" />
       <endpoint endx="317" endy="178" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="288" linecolour="none" y="171" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="131" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="311" linecolour="none" y="176" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="132" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="68" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="195" starty="179" />
       <endpoint endx="295" endy="259" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="293" linecolour="none" y="219" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="133" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="289" linecolour="none" y="257" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="134" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="77" widgetaid="71" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="565" starty="245" />
       <endpoint endx="724" endy="200" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="64" widgetaid="72" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="560" starty="39" />
       <endpoint endx="698" endy="40" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="77" widgetaid="73" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="637" starty="177" />
       <endpoint endx="724" endy="184" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="80" widgetaid="71" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="565" starty="274" />
       <endpoint endx="565" endy="385" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="565" linecolour="none" y="329" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="135" text="finds description" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="567" linecolour="none" y="360" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="136" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="83" widgetaid="82" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="566" starty="564" />
       <endpoint endx="568" endy="639" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="567" linecolour="none" y="601" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="137" text="creates>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="556" linecolour="none" y="566" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="140" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="570" linecolour="none" y="614" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="141" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="568" linecolour="none" y="566" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="138" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="549" linecolour="none" y="614" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="139" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="82" widgetaid="80" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="565" starty="434" />
       <endpoint endx="566" endy="515" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="565" linecolour="none" y="474" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="142" text="contains" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="555" linecolour="none" y="436" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="145" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="568" linecolour="none" y="490" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="146" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="567" linecolour="none" y="436" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="143" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="547" linecolour="none" y="490" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="144" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="84" widgetaid="82" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="639" starty="531" />
       <endpoint endx="839" endy="474" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="739" linecolour="none" y="506" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="147" text="contains>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="668" linecolour="none" y="541" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="150" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="833" linecolour="none" y="449" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="151" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="668" linecolour="none" y="514" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="148" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="820" linecolour="none" y="476" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="149" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="85" widgetaid="84" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="904" starty="499" />
       <endpoint endx="905" endy="562" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="904" linecolour="none" y="530" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="152" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="894" linecolour="none" y="501" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="155" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="907" linecolour="none" y="537" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="156" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="906" linecolour="none" y="501" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="153" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="886" linecolour="none" y="537" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="154" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="82" widgetaid="85" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="833" starty="586" />
       <endpoint endx="639" endy="547" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="736" linecolour="none" y="566" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="157" text="contains>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="801" linecolour="none" y="588" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="160" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="641" linecolour="none" y="522" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="161" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="814" linecolour="none" y="561" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="158" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="641" linecolour="none" y="549" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="159" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="13" widgetaid="83" xmi.id="87" >
      <linepath>
       <startpoint startx="604" starty="655" />
       <endpoint endx="676" endy="623" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="163" usesdiagramusefillcolour="1" x="640" linecolour="none" y="643" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="gets-parameters-from>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="606" linecolour="none" y="665" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="670" linecolour="none" y="598" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="606" linecolour="none" y="638" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="657" linecolour="none" y="625" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="86" widgetaid="83" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="568" starty="688" />
       <endpoint endx="568" endy="739" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="568" linecolour="none" y="713" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="167" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="570" linecolour="none" y="690" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="170" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="570" linecolour="none" y="714" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="171" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="549" linecolour="none" y="690" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="168" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="549" linecolour="none" y="714" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="169" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="83" widgetaid="78" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="412" starty="607" />
       <endpoint endx="532" endy="655" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="65" usesdiagramusefillcolour="1" x="472" linecolour="none" y="635" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="172" text="&lt;notifies" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="414" linecolour="none" y="582" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="175" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="526" linecolour="none" y="661" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="176" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="414" linecolour="none" y="609" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="173" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="513" linecolour="none" y="638" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="174" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="84" widgetaid="90" xmi.id="94" >
      <linepath>
       <startpoint startx="904" starty="403" />
       <endpoint endx="904" endy="450" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="85" widgetaid="91" xmi.id="95" >
      <linepath>
       <startpoint startx="906" starty="652" />
       <endpoint endx="905" endy="611" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="82" widgetaid="93" xmi.id="96" >
      <linepath>
       <startpoint startx="348" starty="536" />
       <endpoint endx="493" endy="539" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="80" widgetaid="88" xmi.id="97" >
      <linepath>
       <startpoint startx="342" starty="457" />
       <endpoint endx="470" endy="417" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="80" widgetaid="89" xmi.id="98" >
      <linepath>
       <startpoint startx="420" starty="373" />
       <endpoint endx="470" endy="401" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="83" widgetaid="92" xmi.id="99" >
      <linepath>
       <startpoint startx="344" starty="708" />
       <endpoint endx="532" endy="671" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="77" widgetaid="100" xmi.id="102" >
      <linepath>
       <startpoint startx="861" starty="259" />
       <endpoint endx="798" endy="217" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="77" widgetaid="101" xmi.id="103" >
      <linepath>
       <startpoint startx="757" starty="293" />
       <endpoint endx="761" endy="217" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="86" widgetaid="104" xmi.id="105" >
      <linepath>
       <startpoint startx="568" starty="835" />
       <endpoint endx="568" endy="788" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="106" widgetaid="83" xmi.id="108" >
      <linepath>
       <startpoint startx="604" starty="671" />
       <endpoint endx="800" endy="755" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="230" usesdiagramusefillcolour="1" x="702" linecolour="none" y="711" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="108" text="dereferences-parameter-values>" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="107" widgetaid="106" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="800" starty="804" />
       <endpoint endx="799" endy="853" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="799" linecolour="none" y="828" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="178" text="contains" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="802" linecolour="none" y="806" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="181" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="771" linecolour="none" y="828" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="182" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="781" linecolour="none" y="806" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="179" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="801" linecolour="none" y="828" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="180" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="92" widgetaid="111" xmi.id="114" >
      <linepath>
       <startpoint startx="211" starty="720" />
       <endpoint endx="280" endy="720" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="93" widgetaid="112" xmi.id="115" >
      <linepath>
       <startpoint startx="210" starty="549" />
       <endpoint endx="251" endy="548" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="88" widgetaid="113" xmi.id="116" >
      <linepath>
       <startpoint startx="115" starty="486" />
       <endpoint endx="243" endy="469" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="21" widgetaid="117" xmi.id="121" >
      <linepath>
       <startpoint startx="114" starty="448" />
       <endpoint endx="132" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="104" widgetaid="119" xmi.id="123" >
      <linepath>
       <startpoint startx="138" starty="793" />
       <endpoint endx="494" endy="847" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="990" snapy="10" showatts="0" xmi.id="184" documentation="" type="402" showops="0" showpackage="0" name="Descriptions" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Arial,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="929" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="1" width="199" showattsigs="601" usesdiagramusefillcolour="1" x="7" linecolour="none" y="109" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="88" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="167" showattsigs="601" usesdiagramusefillcolour="1" x="17" linecolour="none" y="13" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="89" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="151" showattsigs="601" usesdiagramusefillcolour="1" x="593" linecolour="none" y="30" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="90" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="154" showattsigs="601" usesdiagramusefillcolour="1" x="593" linecolour="none" y="304" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="91" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="0" width="195" showattsigs="601" usesdiagramusefillcolour="0" x="15" linecolour="#ff0000" y="188" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="93" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,1,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="191" usesdiagramusefillcolour="1" x="234" linecolour="none" y="37" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="80" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="130" usesdiagramusefillcolour="1" x="603" linecolour="none" y="102" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="84" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="144" usesdiagramusefillcolour="1" x="597" linecolour="none" y="214" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="85" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="146" usesdiagramusefillcolour="1" x="257" linecolour="none" y="167" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="82" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="72" usesdiagramusefillcolour="1" x="296" linecolour="none" y="291" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="83" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="83" widgetaid="82" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="330" starty="216" />
       <endpoint endx="332" endy="291" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="331" linecolour="none" y="253" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="187" text="creates>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="320" linecolour="none" y="218" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="190" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="334" linecolour="none" y="266" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="191" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="332" linecolour="none" y="218" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="188" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="313" linecolour="none" y="266" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="189" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="82" widgetaid="80" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="329" starty="86" />
       <endpoint endx="330" endy="167" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="329" linecolour="none" y="126" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="192" text="contains" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="319" linecolour="none" y="88" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="195" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="332" linecolour="none" y="142" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="196" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="331" linecolour="none" y="88" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="193" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="311" linecolour="none" y="142" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="194" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="84" widgetaid="82" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="403" starty="183" />
       <endpoint endx="603" endy="126" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="503" linecolour="none" y="155" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="197" text="contains>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="405" linecolour="none" y="186" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="200" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="575" linecolour="none" y="101" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="201" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="405" linecolour="none" y="159" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="198" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="584" linecolour="none" y="128" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="199" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="85" widgetaid="84" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="668" starty="151" />
       <endpoint endx="669" endy="214" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="668" linecolour="none" y="182" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="202" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="658" linecolour="none" y="153" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="205" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="671" linecolour="none" y="189" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="206" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="670" linecolour="none" y="153" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="203" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="650" linecolour="none" y="189" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="204" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="82" widgetaid="85" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="597" starty="238" />
       <endpoint endx="403" endy="199" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="73" usesdiagramusefillcolour="1" x="500" linecolour="none" y="218" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="207" text="contains>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="565" linecolour="none" y="240" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="210" text="1..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="405" linecolour="none" y="174" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="211" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="578" linecolour="none" y="213" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="208" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="405" linecolour="none" y="201" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="209" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="84" widgetaid="90" xmi.id="94" >
      <linepath>
       <startpoint startx="668" starty="55" />
       <endpoint endx="668" endy="102" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="85" widgetaid="91" xmi.id="95" >
      <linepath>
       <startpoint startx="670" starty="304" />
       <endpoint endx="669" endy="263" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="82" widgetaid="93" xmi.id="96" >
      <linepath>
       <startpoint startx="112" starty="188" />
       <endpoint endx="257" endy="191" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="80" widgetaid="88" xmi.id="97" >
      <linepath>
       <startpoint startx="106" starty="109" />
       <endpoint endx="234" endy="69" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="80" widgetaid="89" xmi.id="98" >
      <linepath>
       <startpoint startx="184" starty="25" />
       <endpoint endx="234" endy="53" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="990" snapy="10" showatts="0" xmi.id="233" documentation="" type="402" showops="0" showpackage="0" name="Applications" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Arial,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="929" >
    <widgets>
     <UML:ClassWidget usesdiagramfillcolour="0" width="128" showattsigs="601" usesdiagramusefillcolour="0" x="3" linecolour="#ff0000" y="189" showopsigs="601" instancename="" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="92" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,1,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="148" showattsigs="601" usesdiagramusefillcolour="1" x="180" linecolour="none" y="316" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="25" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="104" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,9,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="146" usesdiagramusefillcolour="1" x="179" linecolour="none" y="5" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="82" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="61" showattsigs="601" usesdiagramusefillcolour="1" x="362" linecolour="none" y="86" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="36" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="13" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="FreeSans,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="123" usesdiagramusefillcolour="1" x="193" linecolour="none" y="220" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="86" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="77" showattsigs="601" usesdiagramusefillcolour="1" x="21" linecolour="none" y="74" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="78" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="72" usesdiagramusefillcolour="1" x="218" linecolour="none" y="120" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="83" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="167" usesdiagramusefillcolour="1" x="403" linecolour="none" y="236" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="106" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="53" usesdiagramusefillcolour="1" x="459" linecolour="none" y="334" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="107" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="83" widgetaid="82" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="252" starty="54" />
       <endpoint endx="254" endy="120" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="253" linecolour="none" y="87" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="234" text="creates>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="242" linecolour="none" y="56" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="237" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="256" linecolour="none" y="95" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="238" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="254" linecolour="none" y="56" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="235" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="235" linecolour="none" y="95" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="236" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="1" totalcountb="2" indexb="1" widgetbid="13" widgetaid="83" xmi.id="87" >
      <linepath>
       <startpoint startx="290" starty="136" />
       <endpoint endx="362" endy="104" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="163" usesdiagramusefillcolour="1" x="326" linecolour="none" y="120" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="gets-parameters-from>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="292" linecolour="none" y="138" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="356" linecolour="none" y="79" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="292" linecolour="none" y="111" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="343" linecolour="none" y="106" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="87" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="86" widgetaid="83" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="254" starty="169" />
       <endpoint endx="254" endy="221" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="254" linecolour="none" y="195" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="249" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="256" linecolour="none" y="171" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="252" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="256" linecolour="none" y="196" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="253" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="235" linecolour="none" y="171" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="250" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="235" linecolour="none" y="196" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="251" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="83" widgetaid="78" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="98" starty="88" />
       <endpoint endx="218" endy="136" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="65" usesdiagramusefillcolour="1" x="158" linecolour="none" y="112" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="254" text="&lt;notifies" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="100" linecolour="none" y="63" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="257" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="212" linecolour="none" y="134" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="258" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="100" linecolour="none" y="90" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="255" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="199" linecolour="none" y="111" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="256" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="83" widgetaid="92" xmi.id="99" >
      <linepath>
       <startpoint startx="67" starty="189" />
       <endpoint endx="218" endy="152" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="86" widgetaid="104" xmi.id="105" >
      <linepath>
       <startpoint startx="254" starty="316" />
       <endpoint endx="254" endy="270" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="106" widgetaid="83" xmi.id="108" >
      <linepath>
       <startpoint startx="290" starty="152" />
       <endpoint endx="486" endy="236" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="230" usesdiagramusefillcolour="1" x="388" linecolour="none" y="194" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="108" text="dereferences-parameter-values>" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="107" widgetaid="106" roleBdoc="" roleAdoc="" type="503" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="486" starty="285" />
       <endpoint endx="485" endy="334" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="64" usesdiagramusefillcolour="1" x="485" linecolour="none" y="309" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="260" text="contains" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="488" linecolour="none" y="287" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="263" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="30" usesdiagramusefillcolour="1" x="457" linecolour="none" y="309" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="264" text="0..*" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="467" linecolour="none" y="287" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="261" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="487" linecolour="none" y="309" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="262" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="990" snapy="10" showatts="0" xmi.id="265" documentation="" type="402" showops="0" showpackage="0" name="Manager" localid="30000" showstereotype="0" showscope="1" snapcsgrid="0" font="Arial,11,-1,5,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="929" >
    <widgets>
     <interfacewidget usesdiagramfillcolour="1" width="155" usesdiagramusefillcolour="1" x="689" linecolour="none" y="3" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="64" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="161" showattsigs="601" usesdiagramusefillcolour="1" x="735" linecolour="none" y="90" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="65" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="138" showattsigs="601" usesdiagramusefillcolour="1" x="481" linecolour="none" y="81" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="67" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="180" showattsigs="601" usesdiagramusefillcolour="1" x="461" linecolour="none" y="18" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="72" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="156" showattsigs="601" usesdiagramusefillcolour="1" x="472" linecolour="none" y="142" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="73" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="111" usesdiagramusefillcolour="1" x="715" linecolour="none" y="147" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="77" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="199" showattsigs="601" usesdiagramusefillcolour="1" x="753" linecolour="none" y="238" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="100" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="205" showattsigs="601" usesdiagramusefillcolour="1" x="646" linecolour="none" y="272" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="101" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="246" showattsigs="601" usesdiagramusefillcolour="1" x="0" linecolour="none" y="16" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="22" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="114" usesdiagramusefillcolour="1" x="293" linecolour="none" y="6" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="69" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="89" usesdiagramusefillcolour="1" x="308" linecolour="none" y="133" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="70" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="190" showattsigs="601" usesdiagramusefillcolour="1" x="60" linecolour="none" y="129" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="21" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="129" usesdiagramusefillcolour="1" x="286" linecolour="none" y="214" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="68" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
     <UML:ClassWidget usesdiagramfillcolour="1" width="206" showattsigs="601" usesdiagramusefillcolour="1" x="453" linecolour="none" y="224" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="29" usefillcolor="1" showattributes="0" isinstance="0" xmi.id="71" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Arial,11,-1,5,75,0,0,0,0,0" />
     <interfacewidget usesdiagramfillcolour="1" width="191" usesdiagramusefillcolour="1" x="461" linecolour="none" y="364" drawascircle="1" showopsigs="601" instancename="" usesdiagramlinecolour="1" fillcolour="none" height="49" usefillcolor="1" isinstance="0" xmi.id="80" showoperations="0" showpackage="0" showscope="1" font="Arial,11,-1,5,50,1,1,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="21" widgetaid="22" xmi.id="24" >
      <linepath>
       <startpoint startx="123" starty="45" />
       <endpoint endx="123" endy="129" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="68" usesdiagramusefillcolour="1" x="114" linecolour="none" y="66" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="creates>" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="116" linecolour="none" y="26" instancename="" posttext="" usesdiagramlinecolour="1" role="701" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="134" linecolour="none" y="85" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="24" text="1" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="95" linecolour="none" y="26" instancename="" posttext="" usesdiagramlinecolour="1" role="709" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="17" usesdiagramusefillcolour="1" x="95" linecolour="none" y="83" instancename="" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="23" usefillcolor="1" pretext="+" isinstance="0" xmi.id="24" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="64" widgetaid="65" xmi.id="66" >
      <linepath>
       <startpoint startx="815" starty="90" />
       <endpoint endx="766" endy="52" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="64" widgetaid="67" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="550" starty="81" />
       <endpoint endx="689" endy="35" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="68" widgetaid="71" xmi.id="74" >
      <linepath>
       <startpoint startx="453" starty="238" />
       <endpoint endx="415" endy="238" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="70" widgetaid="73" xmi.id="75" >
      <linepath>
       <startpoint startx="472" starty="156" />
       <endpoint endx="397" endy="157" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="69" widgetaid="72" xmi.id="76" >
      <linepath>
       <startpoint startx="461" starty="32" />
       <endpoint endx="407" endy="30" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="2" indexb="1" widgetbid="69" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="186" starty="129" />
       <endpoint endx="293" endy="30" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="196" linecolour="none" y="48" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="271" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="277" linecolour="none" y="0" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="272" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="70" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="250" starty="143" />
       <endpoint endx="308" endy="157" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="241" linecolour="none" y="111" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="273" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="284" linecolour="none" y="113" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="274" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="68" widgetaid="21" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="155" starty="158" />
       <endpoint endx="286" endy="238" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="66" usesdiagramusefillcolour="1" x="218" linecolour="none" y="156" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="275" text="provides" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="262" linecolour="none" y="194" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="276" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="77" widgetaid="71" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="556" starty="224" />
       <endpoint endx="715" endy="179" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="64" widgetaid="72" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="551" starty="18" />
       <endpoint endx="689" endy="19" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="77" widgetaid="73" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="628" starty="156" />
       <endpoint endx="715" endy="163" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="80" widgetaid="71" roleBdoc="" roleAdoc="" type="502" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="556" starty="253" />
       <endpoint endx="556" endy="364" />
      </linepath>
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="116" usesdiagramusefillcolour="1" x="538" linecolour="none" y="266" instancename="" posttext="" usesdiagramlinecolour="1" role="703" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="277" text="finds description" font="Arial,11,-1,5,50,0,0,0,0,0" />
      <UML:FloatingTextWidget usesdiagramfillcolour="1" width="8" usesdiagramusefillcolour="1" x="540" linecolour="none" y="297" instancename="" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="23" usefillcolor="1" pretext="" isinstance="0" xmi.id="278" text="" font="Arial,11,-1,5,50,0,0,0,0,0" />
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="77" widgetaid="100" xmi.id="102" >
      <linepath>
       <startpoint startx="852" starty="238" />
       <endpoint endx="789" endy="196" />
      </linepath>
     </UML:AssocWidget>
     <UML:AssocWidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="77" widgetaid="101" xmi.id="103" >
      <linepath>
       <startpoint startx="748" starty="272" />
       <endpoint endx="752" endy="196" />
      </linepath>
     </UML:AssocWidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" id="-1" label="Views" >
    <listitem open="1" type="801" id="-1" label="Logical View" >
     <listitem open="0" type="807" id="233" label="Applications" />
     <listitem open="0" type="807" id="6" label="CEA Classes" />
     <listitem open="0" type="807" id="184" label="Descriptions" />
     <listitem open="0" type="807" id="265" label="Manager" />
     <listitem open="1" type="813" id="92" label="AbstractApplication" />
     <listitem open="1" type="813" id="93" label="AbstractApplicationDescription" />
     <listitem open="1" type="813" id="88" label="BaseApplicationDescriptionLibrary" />
     <listitem open="1" type="813" id="90" label="BaseAppplicationInterface" />
     <listitem open="1" type="813" id="91" label="BaseParameterDescription" />
     <listitem open="1" type="813" id="21" label="CEAComponentManager" />
     <listitem open="1" type="813" id="22" label="CEAComponentManagerFactory" />
     <listitem open="1" type="813" id="89" label="CompositeApplicationLibrary" />
     <listitem open="1" type="813" id="71" label="DefaultExecutionController" />
     <listitem open="1" type="813" id="72" label="DefaultMetadataService" />
     <listitem open="1" type="813" id="104" label="DefaultParameterAdapter" />
     <listitem open="1" type="813" id="73" label="DefaultQueryService" />
     <listitem open="1" type="813" id="100" label="FileStoreExecutionHistory" />
     <listitem open="1" type="813" id="101" label="InMemoryExecutionHistory" />
     <listitem open="1" type="813" id="111" label="JavaClassApplication" />
     <listitem open="1" type="813" id="112" label="JavaClassApplicationDescription" />
     <listitem open="1" type="813" id="113" label="JavaClassApplicationDescriptionLibrary" />
     <listitem open="1" type="813" id="117" label="JavaClassCEAComponentManager" />
     <listitem open="1" type="813" id="119" label="JavaClassParameterAdapter" />
     <listitem open="1" type="813" id="118" label="JavaClassParameterDescription" />
     <listitem open="1" type="813" id="78" label="Observer" />
     <listitem open="1" type="813" id="65" label="RegistryEntryBuilder" />
     <listitem open="1" type="813" id="67" label="RegistryUploader" />
     <listitem open="1" type="813" id="13" label="Tool" />
     <listitem open="1" type="817" id="83" label="Application" />
     <listitem open="1" type="817" id="82" label="ApplicationDescription" />
     <listitem open="1" type="817" id="80" label="ApplicationDescriptionLibrary" />
     <listitem open="1" type="817" id="84" label="ApplicationInterface" />
     <listitem open="1" type="817" id="68" label="ExecutionController" />
     <listitem open="1" type="817" id="77" label="ExecutionHistory" />
     <listitem open="1" type="817" id="106" label="IndirectionProtocolLibrary" />
     <listitem open="1" type="817" id="69" label="MetadataService" />
     <listitem open="1" type="817" id="86" label="ParameterAdapter" />
     <listitem open="1" type="817" id="85" label="ParameterDescription" />
     <listitem open="1" type="817" id="107" label="Protocol" />
     <listitem open="1" type="817" id="64" label="ProvidesVODescription" />
     <listitem open="1" type="817" id="70" label="QueryService" />
     <listitem open="0" type="830" id="-1" label="Datatypes" />
    </listitem>
    <listitem open="1" type="802" id="-1" label="Use Case View" />
    <listitem open="1" type="821" id="-1" label="Component View" >
     <listitem open="0" type="819" id="1" label="CEA Server" />
    </listitem>
    <listitem open="1" type="827" id="-1" label="Deployment View" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Java" >
    <classifiercodedocument writeOutCode="true" package="" id="13" parent_class="13" fileExt=".java" fileName="Tool" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="13" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Tool&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Tool ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Tool.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="21" parent_class="21" fileExt=".java" fileName="CEAComponentManager" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="21" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class CEAComponentManager&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="24" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public CEAComponentManagerFactory  = new CEAComponentManagerFactory ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public CEAComponentManager ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type CEAComponentManagerFactory to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=".remove(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type CEAComponentManagerFactory from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			CEAComponentManager.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="1" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="1" text="public CEAComponentManagerFactory  = new CEAComponentManagerFactory ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type CEAComponentManagerFactory to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text=".remove(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type CEAComponentManagerFactory from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="1" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="22" parent_class="22" fileExt=".java" fileName="CEAComponentManagerFactory" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="22" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class CEAComponentManagerFactory&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks>
          <ccfdeclarationcodeblock parent_id="24" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public CEAComponentManager  = new CEAComponentManager ( );" >
           <header>
            <codecomment tag="" writeOutText="false" indentLevel="1" />
           </header>
          </ccfdeclarationcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public CEAComponentManagerFactory ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks>
              <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="return ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text=" = value;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text=".add(value);" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Add an object of type CEAComponentManager to the List &amp;#010;&amp;#010;@return void" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeCEAComponentManager from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type CEAComponentManager from the List &amp;#010;" />
               </header>
              </codeaccessormethod>
              <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="return (List) ;" >
               <header>
                <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
               </header>
              </codeaccessormethod>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			CEAComponentManagerFactory.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="24" field_type="4" initialValue="" role_id="0" writeOutMethods="true" listClassName="" >
       <header>
        <codecomment tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="24" tag="tblock_0" canDelete="false" writeOutText="false" indentLevel="1" role_id="0" text="public CEAComponentManager  = new CEAComponentManager ( );" >
        <header>
         <codecomment tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="24" tag="hblock_tag_0" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="return ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the value of &amp;#010;&amp;#010;@return the value of " />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="24" tag="hblock_tag_1" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text=" = value;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Set the value of &amp;#010;&amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="2" parent_id="24" tag="hblock_tag_2" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text=".add(value);" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Add an object of type CEAComponentManager to the List &amp;#010;&amp;#010;@return void" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="3" parent_id="24" tag="hblock_tag_3" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="if (.size() >= 1) {&amp;#010;  .remove(value);&amp;#010;} else {&amp;#010;  System.err.println(&quot;ERROR: Cant removeCEAComponentManager from , minimum number of items reached.&quot;);&amp;#010;}&amp;#010;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Remove an object of type CEAComponentManager from the List &amp;#010;" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="4" parent_id="24" tag="hblock_tag_4" canDelete="false" writeOutText="false" indentLevel="1" classfield_id="24" role_id="0" text="return (List) ;" >
        <header>
         <javacodedocumentation tag="" indentLevel="1" text="Get the list of &amp;#010;&amp;#010;@return List of " />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="64" parent_class="64" fileExt=".java" fileName="ProvidesVODescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="64" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ProvidesVODescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ProvidesVODescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ProvidesVODescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="65" parent_class="65" fileExt=".java" fileName="RegistryEntryBuilder" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="65" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class RegistryEntryBuilder&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public RegistryEntryBuilder ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			RegistryEntryBuilder.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="67" parent_class="67" fileExt=".java" fileName="RegistryUploader" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="67" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class RegistryUploader&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public RegistryUploader ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			RegistryUploader.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="68" parent_class="68" fileExt=".java" fileName="ExecutionController" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="68" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ExecutionController&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ExecutionController ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ExecutionController.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="69" parent_class="69" fileExt=".java" fileName="MetadataService" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="69" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface MetadataService&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public MetadataService ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			MetadataService.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="70" parent_class="70" fileExt=".java" fileName="QueryService" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="70" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface QueryService&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public QueryService ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			QueryService.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="71" parent_class="71" fileExt=".java" fileName="DefaultExecutionController" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="71" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class DefaultExecutionController&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DefaultExecutionController ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DefaultExecutionController.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="72" parent_class="72" fileExt=".java" fileName="DefaultMetadataService" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="72" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class DefaultMetadataService&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DefaultMetadataService ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DefaultMetadataService.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="73" parent_class="73" fileExt=".java" fileName="DefaultQueryService" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="73" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class DefaultQueryService&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DefaultQueryService ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DefaultQueryService.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="77" parent_class="77" fileExt=".java" fileName="ExecutionHistory" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="77" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ExecutionHistory&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ExecutionHistory ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ExecutionHistory.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="78" parent_class="78" fileExt=".java" fileName="Observer" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="78" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class Observer&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Observer ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Observer.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="80" parent_class="80" fileExt=".java" fileName="ApplicationDescriptionLibrary" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="80" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ApplicationDescriptionLibrary&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ApplicationDescriptionLibrary ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ApplicationDescriptionLibrary.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="82" parent_class="82" fileExt=".java" fileName="ApplicationDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="82" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ApplicationDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ApplicationDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ApplicationDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="83" parent_class="83" fileExt=".java" fileName="Application" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="83" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface Application&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Application ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Application.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="84" parent_class="84" fileExt=".java" fileName="ApplicationInterface" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="84" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ApplicationInterface&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ApplicationInterface ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ApplicationInterface.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:06:11&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="85" parent_class="85" fileExt=".java" fileName="ParameterDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="85" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ParameterDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ParameterDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ParameterDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:22&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="86" parent_class="86" fileExt=".java" fileName="ParameterAdapter" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="86" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface ParameterAdapter&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public ParameterAdapter ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ParameterAdapter.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="88" parent_class="88" fileExt=".java" fileName="BaseApplicationDescriptionLibrary" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ApplicationDescriptionLibrary;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="88" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class BaseApplicationDescriptionLibrary&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public BaseApplicationDescriptionLibrary ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			BaseApplicationDescriptionLibrary.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:07:24&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="89" parent_class="89" fileExt=".java" fileName="CompositeApplicationLibrary" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import ApplicationDescriptionLibrary;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="89" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class CompositeApplicationLibrary&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public CompositeApplicationLibrary ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			CompositeApplicationLibrary.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:07:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="90" parent_class="90" fileExt=".java" fileName="BaseAppplicationInterface" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="90" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class BaseAppplicationInterface&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public BaseAppplicationInterface ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			BaseAppplicationInterface.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:06:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="91" parent_class="91" fileExt=".java" fileName="BaseParameterDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="91" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class BaseParameterDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public BaseParameterDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			BaseParameterDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:25&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="92" parent_class="92" fileExt=".java" fileName="AbstractApplication" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import Application;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="92" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class AbstractApplication&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractApplication ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractApplication.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:39&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="93" parent_class="93" fileExt=".java" fileName="AbstractApplicationDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="93" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class AbstractApplicationDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public AbstractApplicationDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			AbstractApplicationDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:06:10&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="100" parent_class="100" fileExt=".java" fileName="FileStoreExecutionHistory" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="100" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class FileStoreExecutionHistory&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public FileStoreExecutionHistory ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			FileStoreExecutionHistory.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="101" parent_class="101" fileExt=".java" fileName="InMemoryExecutionHistory" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="101" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class InMemoryExecutionHistory&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public InMemoryExecutionHistory ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			InMemoryExecutionHistory.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:12:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="104" parent_class="104" fileExt=".java" fileName="DefaultParameterAdapter" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="104" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class DefaultParameterAdapter&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public DefaultParameterAdapter ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			DefaultParameterAdapter.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="106" parent_class="106" fileExt=".java" fileName="IndirectionProtocolLibrary" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="106" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface IndirectionProtocolLibrary&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public IndirectionProtocolLibrary ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			IndirectionProtocolLibrary.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="107" parent_class="107" fileExt=".java" fileName="Protocol" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="107" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Interface Protocol&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" writeOutText="false" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public Protocol ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			Protocol.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:09:14&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="111" parent_class="111" fileExt=".java" fileName="JavaClassApplication" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import AbstractApplication;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="111" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassApplication&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassApplication ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassApplication.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="112" parent_class="112" fileExt=".java" fileName="JavaClassApplicationDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import AbstractApplicationDescription;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="112" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassApplicationDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassApplicationDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassApplicationDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="113" parent_class="113" fileExt=".java" fileName="JavaClassApplicationDescriptionLibrary" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import BaseApplicationDescriptionLibrary;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="113" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassApplicationDescriptionLibrary&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassApplicationDescriptionLibrary ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassApplicationDescriptionLibrary.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="117" parent_class="117" fileExt=".java" fileName="JavaClassCEAComponentManager" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import CEAComponentManager;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="117" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassCEAComponentManager&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassCEAComponentManager ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassCEAComponentManager.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="118" parent_class="118" fileExt=".java" fileName="JavaClassParameterDescription" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="118" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassParameterDescription&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassParameterDescription ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassParameterDescription.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:09&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="119" parent_class="119" fileExt=".java" fileName="JavaClassParameterAdapter" >
     <textblocks>
      <codeblockwithcomments tag="packages" writeOutText="false" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="imports" text="&amp;#010;import DefaultParameterAdapter;" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <javaclassdeclarationblock parent_id="119" tag="ClassDeclBlock" canDelete="false" role_id="-1" >
       <header>
        <codecomment tag="" text="Class JavaClassParameterAdapter&amp;#010;" />
       </header>
       <textblocks>
        <hierarchicalcodeblock tag="fieldsDecl" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Fields" />
         </header>
         <textblocks/>
        </hierarchicalcodeblock>
        <hierarchicalcodeblock tag="methodsBlock" canDelete="false" indentLevel="1" >
         <header>
          <codecomment tag="" indentLevel="1" text="Methods" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="constructorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Constructors" />
           </header>
           <textblocks>
            <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="public JavaClassParameterAdapter ( ) { }" >
             <header>
              <codecomment tag="" indentLevel="1" text="Empty Constructor" />
             </header>
            </codeblockwithcomments>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Accessor Methods" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="staticAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="regularAccessorMethods" canDelete="false" indentLevel="1" >
             <header>
              <codecomment tag="" writeOutText="false" indentLevel="1" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
           <header>
            <codecomment tag="" indentLevel="1" text="Operations" />
           </header>
           <textblocks/>
          </hierarchicalcodeblock>
         </textblocks>
        </hierarchicalcodeblock>
       </textblocks>
      </javaclassdeclarationblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			JavaClassParameterAdapter.java - Copyright noel&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.java&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Jul 26 2004 at 12:05:20&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="ANTDOC" fileExt=".xml" fileName="build" >
     <textblocks>
      <codeblockwithcomments tag="xmlDecl" text="&lt;?xml version=&quot;1.0&quot;?>" >
       <header>
        <codecomment tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <xmlelementblock nodeName="project" tag="projectDecl" canDelete="false" >
       <header>
        <codecomment tag="" text="Java ANT build document" />
       </header>
       <textblocks/>
      </xmlelementblock>
     </textblocks>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
   </codegenerator>
  </codegeneration>
 </XMI.content>
</XMI>
