<?xml version="1.0" encoding="ISO-8859-1"?>
<document>
	<properties>
		<author email="pah@jb.man.ac.uk">Paul Harrison</author>
		<title>CEA Library: overview</title>
	</properties>
	<body>
		<section name="Overview">
			<p> This component provides the common library for the Astrogrid Common Execution Architecture (CEA). This library contains the
         bulk of the CEA code, but does not supply an environment in which the code runs. Other components bundle this
         library to create a working service - for instance the Common Execution Controller (CEC) component</p>
         
			<p> You can use this library as the basis for creating your own form of IVOA compliant web service.</p>
			
			<subsection name="Internals">
				<p>
					The library is designed as a collection of pluggable software modules that can be constructed into a working
               system. One of the main design aims of the modules is that the so called "inversion of control" paradigm is used, which
               means that all of a particular classes dependencies are "injected" into the class at construction time. These sorts of collections of 
               classes typically are then instantiated by a "container", that offers services such as dynamic configuration.
				</p>
				<p>The container that has been chosen for this implementation is the <a href="http://www.springframework.org/">Spring Framework</a>. The
                master Spring configuration file is located at <tt>/org/astrogrid/applications/component/ceaspring.xml</tt>, and this file constructs a "working" CEC, but without any particular
                external transport configured - (c.f. the standard CEC (in another project) has a SOAP and REST webservice interface to the CEC configured also)
                Such an interfaceless CEC could be used in a specialized Java application to run CEAApplication locally for instance.
                
				</p>
                <p>
                It should be relatively easy to use a different container technology to create a working CEC as the only class that is directly aware of the interaction with Spring is
                the org.astrogrid.applications.component.CEAComponentContainer class. However, there are numerous unit tests that do depend directly on Spring.
                </p>
			</subsection>
		</section>
	</body>
</document>
