<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
<cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/old-portal/src/site/xsp/myspace/Attic/lookup.xsp,v $</cvs:source>
<cvs:date>$Author: dave $</cvs:date>
<cvs:author>$Date: 2003/06/03 13:16:47 $</cvs:author>
<cvs:version>$Revision: 1.1 $</cvs:version>
<cvs:log>
	$Log: lookup.xsp,v $
	Revision 1.1  2003/06/03 13:16:47  dave
	Added initial iter 02 code

	Revision 1.1  2003/06/01 19:22:09  Dumbledore
	Added test SOAP service and dummy myspace service.
	
</cvs:log>
 -->
<xsp:page language="java"
		xmlns:xsp="http://apache.org/xsp"
		xmlns:xsp-request="http://apache.org/xsp/request/2.0"
		>

	<!-- Import the required java classes -->
	<xsp:structure>
		<xsp:include>org.apache.cocoon.xml.EmbeddedXMLPipe</xsp:include>

		<xsp:include>org.apache.excalibur.source.Source</xsp:include>
		<xsp:include>org.apache.excalibur.xml.sax.SAXParser</xsp:include>

		<xsp:include>org.xml.sax.InputSource</xsp:include>
		<xsp:include>org.xml.sax.SAXException</xsp:include>
		<xsp:include>org.xml.sax.SAXParseException</xsp:include>

		<xsp:include>java.io.BufferedReader</xsp:include>

	</xsp:structure>

	<!--+
	    | Generate XML from our HTTP request content.
	    | This just grabs the text from the HTTP request content and converts it into XML.
	    | If the request was a SOAP call, then this will contain the SOAP message.
	    | Later we can add additional details from the SOAP headers.
	    +-->
	<request>
		<headers>
			<!-- Include a list of the request headers -->
		</headers>
		<content>
			<!-- Include the request content -->
			<xsp:logic>
				<![CDATA[
				//
				// Local SAX parser to process our request content.
				SAXParser parser = null ;
				//
				// Convert our HTTP request to SAX events. 
				try {
					//
					// Get our HTTP request as an input stream.
					BufferedReader reader = ((org.apache.cocoon.environment.http.HttpRequest) request).getReader() ;
					//
					// Create an XML source from our reader
					InputSource source = new InputSource(reader) ;
					//
					// Create an embedded handler.
					EmbeddedXMLPipe handler = new EmbeddedXMLPipe(this.contentHandler);
					//
					// Parse our source into SAX events.
					parser = (SAXParser) this.manager.lookup(SAXParser.ROLE) ;
					parser.parse(source, handler) ;
					}
				//
				// If we couldn`t load a SAX parser.
				catch(ComponentException ouch)
					{
					throw new ProcessingException("Exception loading SAXParser", ouch) ;
					}
				//
				// If we got a parsing exception.
				catch(SAXParseException ouch)
					{
					]]>
					<error>SAXParseException while processing content</error>
					<![CDATA[
					}
				//
				// Tidy up our resources.
				finally
					{
					if (parser != null)
						{
						this.manager.release((Component)parser) ;
						}
					}
				]]>
			</xsp:logic>
		</content>
	</request>
</xsp:page>
