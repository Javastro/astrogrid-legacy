<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
<cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/old-portal/src/site/xsp/query/Attic/view-details.xsp,v $</cvs:source>
<cvs:date>$Author: dave $</cvs:date>
<cvs:author>$Date: 2003/06/03 13:16:47 $</cvs:author>
<cvs:version>$Revision: 1.1 $</cvs:version>
<cvs:log>
	$Log: view-details.xsp,v $
	Revision 1.1  2003/06/03 13:16:47  dave
	Added initial iter 02 code

	Revision 1.9  2003/05/30 15:28:28  Dumbledore
	Added SOAP request generator.
	
	Revision 1.8  2003/05/29 15:59:28  Dumbledore
	Fixed CVS conflict with xsp directories.
	
	Revision 1.7  2003/05/29 15:05:16  Dumbledore
	Added dummy SOAP call to Axis service.
	
	Revision 1.6  2003/05/28 19:46:36  Dumbledore
	Added initial outline of SOAP messages ....
	
	Revision 1.5  2003/05/28 15:29:20  Dumbledore
	Moved actions back into the page.
	
	Revision 1.4  2003/05/28 14:04:33  Dumbledore
	Added actions to the view.
	
	Revision 1.3  2003/05/27 21:55:29  Dumbledore
	Updated the action display xml.
	
	Revision 1.2  2003/05/27 20:43:30  Dumbledore
	Added actions to create and delete views.
	
	Revision 1.1  2003/05/27 14:25:38  Dumbledore
	Added initial code for explorer views.
	
</cvs:log>
 -->
<xsp:page language="java"
		create-session="true"
		xmlns:xsp="http://apache.org/xsp"
		xmlns:xsp-session="http://apache.org/xsp/session/2.0"
		xmlns:xsp-request="http://apache.org/xsp/request/2.0"
		xmlns:xscript="http://apache.org/xsp/xscript/1.0"
		xmlns:soap="http://apache.org/xsp/soap/3.0">
		>

	<!-- Initialisation code here -->
	<xsp:structure>
		<xsp:include>java.util.Map</xsp:include>
		<xsp:include>java.util.Hashtable</xsp:include>
		<xsp:include>java.util.Iterator</xsp:include>
		<xsp:include>org.astrogrid.portal.session.AstPortalSession</xsp:include>
		<xsp:include>org.astrogrid.portal.explorer.AstPortalView</xsp:include>
	</xsp:structure>
	<!-- Class level code here -->
	<xsp:logic>
		<![CDATA[
		//
		// Our current AstSession.
		protected AstPortalSession root = null ;
		//
		// Our current AstView.
		protected AstPortalView view = null ;
		//
		// Local class for action handlers.
		protected abstract class ActionHandler
			{
			//
			// Public constructor.
			public ActionHandler(String name)
				{
				this.name  = name  ;
				}
			//
			// Our action name.
			protected String name ;
			//
			// Display our action.
			public abstract void display()
				throws SAXException, IOException, ProcessingException ;
			//
			// Handle our action.
			public abstract void perform()
				throws SAXException, IOException, ProcessingException ;
			}
		//
		// Our list of action handlers.
		protected Map handlers = new Hashtable() ;
		//
		// Add a new action handler.
		protected void addHandler(ActionHandler handler)
			{
			handlers.put(handler.name, handler) ;
			}
		//
		// Get a handler for an action.
		ActionHandler getHandler(String name)
			{
			return (ActionHandler) handlers.get(name) ;
			}
		//
		// Initialise our handlers.
		{
		addHandler(
			new ActionHandler("set-path")
				{
				public void display()
					throws SAXException, IOException, ProcessingException
					{
					setPathDisplay(this) ;
					}
				public void perform()
					throws SAXException, IOException, ProcessingException
					{
					setPathAction(this) ;
					}
				}
			) ;
		addHandler(
			new ActionHandler("del-view")
				{
				public void display()
					throws SAXException, IOException, ProcessingException
					{
					delViewDisplay(this) ;
					}
				public void perform()
					throws SAXException, IOException, ProcessingException
					{
					delViewAction(this) ;
					}
				}
			) ;
		}


		//
		// Display our set-path action.
		public void setPathDisplay(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
				<xsp:element name="params">
					<param type="text" name="path" value="*"/>
				</xsp:element>
			</xsp:element>
			<![CDATA[
			}

		//
		// Perform our set-path action.
		public void setPathAction(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			//
			// If we have a view.
			if (null != view)
				{
				AttributesImpl xspAttr = new AttributesImpl();
				//
				// Get the path from the request params.
				String path = request.getParameter("path") ;
				//
				// If we got a path.
				if ((null != path) && (path.length() > 0))
					{
					view.setPath(path) ;
					]]>
					<xsp:element name="action">
						<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
						<params>
							<param name="path">
								<xsp:attribute name="value"><xsp:expr>path</xsp:expr></xsp:attribute>
							</param>
						</params>
						<result>
							<xsp:element name="view">
								<xsp:attribute name="ident"><xsp:expr>view.getIdent()</xsp:expr></xsp:attribute>
								<xsp:attribute name="path"><xsp:expr>view.getPath()</xsp:expr></xsp:attribute>
							</xsp:element>
						</result>
					</xsp:element>
					<![CDATA[
					}
				}
			}

		//
		// Display our del-view action.
		public void delViewDisplay(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
			</xsp:element>
			<![CDATA[
			}

		//
		// Perform our del-view action.
		public void delViewAction(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			//
			// If we have a view.
			if (null != view)
				{
				root.deleteView(view.getIdent()) ;
				]]>
				<xsp:element name="action">
					<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
					<result/>
				</xsp:element>
				<![CDATA[
				//
				// Set our view to null.
				view = null ;
				}
			}
		]]>
	</xsp:logic>
	<page>
		<!-- Request level code here -->
		<xsp:logic>
			<![CDATA[
				//
				// Load our AstSession from our HttpSession.
				root = (AstPortalSession) session.getAttribute(AstPortalSession.HTTP_SESSION_TAG) ;
				//
				// If we havn't got one yet.
				if (null == root)
					{
					//
					// Create a new AstSession.
					root = new AstPortalSession() ;
					//
					// Add it to our HttpSession.
					session.setAttribute(AstPortalSession.HTTP_SESSION_TAG, root) ;
					}
				//
				// If we have a valid session.
				if (null != root)
					{
					//
					// Get our query ident.
					String ident = parameters.getParameter("ident", null) ;
					//
					// Fetch our view from our session. 
					view = root.getView(ident) ;
					}
			]]>
		</xsp:logic>

		<!-- List of the available page actions -->
		<actions>
			<xsp:logic>
				<![CDATA[
				Iterator actions = handlers.values().iterator() ;
				while (actions.hasNext())
					{
					ActionHandler handler = (ActionHandler) actions.next() ;
					handler.display() ;
					}
				]]>
			</xsp:logic>
		</actions>

		<!-- Process the current request action -->
		<request>
			<xsp:logic>
				<![CDATA[
					//
					// Get our request action.
					String action = parameters.getParameter("action", null) ;
					//
					// If we have a request action.
					if (null != action)
						{
						//
						// Find a handler for our action.
						ActionHandler handler = getHandler(action) ;
						//
						// If we found a handler.
						if (null != handler)
							{
							//
							// Perform our action.
							handler.perform() ;
							}
						}
				]]>
			</xsp:logic>
		</request>

		<!-- Details of the current session -->
		<xsp:element name="session">
			<xsp:attribute name="ident"><xsp:expr>(null != root) ? root.getIdent() : null</xsp:expr></xsp:attribute>
			<!-- Details of the current view -->
			<xsp:logic>
				<![CDATA[
				if (null != view)
					{
					]]>
					<xsp:element name="view">
						<xsp:attribute name="ident"><xsp:expr>view.getIdent()</xsp:expr></xsp:attribute>
						<xsp:attribute name="path"><xsp:expr>view.getPath()</xsp:expr></xsp:attribute>
						<!-- A list of the view elements -->
						<elements>

<xsp:comment>Test SOAP call to calculator service</xsp:comment>
<soap:call url="http://localhost:8080/axis/Calculator.jws">
	<calc:add xmlns:calc="http://localhost:8080/axis/Calculator.jws">
		<i1 type="xsd:int">5</i1>
		<i2 type="xsd:int">20</i2>
	</calc:add>
</soap:call>

							<xsp:comment>SOAP call to list the elements for this path</xsp:comment>
							<xsp:element name="lookup">
								<xsp:attribute name="details">false</xsp:attribute>
								<xsp:attribute name="path"><xsp:expr>view.getPath()</xsp:expr></xsp:attribute>
								<xsp:element name="user">
									<xsp:attribute name="ident">user-ident</xsp:attribute>
									<xsp:attribute name="community">community-ident</xsp:attribute>
								</xsp:element>
							</xsp:element>
							<xsp:comment>SOAP return listing the elements for this path</xsp:comment>
							<xsp:element name="results">
								<xsp:element name="lookup">
									<xsp:attribute name="details">true</xsp:attribute>
									<xsp:attribute name="path">path</xsp:attribute>
									<container ident="" path="">
										<container ident="" path="">
											<container ident="" path="">
												<holder ident="" path=""/>
											</container>
											<container ident="" path="">
												<holder ident="" path=""/>
												<holder ident="" path=""/>
												<holder ident="" path=""/>
											</container>
										</container>
									</container>
								</xsp:element>
							</xsp:element>
						</elements>

						<!-- A list of the view details -->
						<details>
							<xsp:comment>SOAP call to list the details for the current element</xsp:comment>
							<xsp:comment>If no element selected, then this needs to default to the first element in the list</xsp:comment>
							<xsp:element name="lookup">
								<xsp:attribute name="details">true</xsp:attribute>
								<xsp:attribute name="ident">####</xsp:attribute>
								<xsp:element name="user">
									<xsp:attribute name="ident">user-ident</xsp:attribute>
									<xsp:attribute name="community">community-ident</xsp:attribute>
								</xsp:element>
							</xsp:element>
							<xsp:comment>SOAP return listing the details for the current element</xsp:comment>
							<xsp:element name="results">
								<xsp:element name="lookup">
									<xsp:attribute name="details">true</xsp:attribute>
									<xsp:attribute name="ident">####</xsp:attribute>
									<xsp:element name="holder">
									</xsp:element>
								</xsp:element>
							</xsp:element>
						</details>

					</xsp:element>
					<![CDATA[
					}
				]]>
			</xsp:logic>
		</xsp:element>
	</page>
</xsp:page>
