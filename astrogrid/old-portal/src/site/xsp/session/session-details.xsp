<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
<cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/old-portal/src/site/xsp/session/Attic/session-details.xsp,v $</cvs:source>
<cvs:date>$Author: dave $</cvs:date>
<cvs:author>$Date: 2003/06/03 13:16:47 $</cvs:author>
<cvs:version>$Revision: 1.1 $</cvs:version>
<cvs:log>
	$Log: session-details.xsp,v $
	Revision 1.1  2003/06/03 13:16:47  dave
	Added initial iter 02 code

	Revision 1.9  2003/05/28 15:29:20  Dumbledore
	Moved actions back into the page.
	
	Revision 1.6  2003/05/27 21:54:47  Dumbledore
	Updated the action display xml.
	
	Revision 1.5  2003/05/27 20:42:39  Dumbledore
	Added actions to create and delete views.
	
	Revision 1.4  2003/05/27 14:25:06  Dumbledore
	Added initial code for explorer views.
	
	Revision 1.3  2003/05/25 22:24:23  Dumbledore
	Initial attempt at an XSP action - hand written Java code to start with.
	
	Revision 1.2  2003/05/25 11:29:04  Dumbledore
	Fixed bug in the cvs log header.
	
</cvs:log>
 -->
<xsp:page language="java"
		create-session="true"
		xmlns:xsp="http://apache.org/xsp"
		xmlns:xsp-session="http://apache.org/xsp/session/2.0"
		xmlns:xsp-request="http://apache.org/xsp/request/2.0">

	<!-- Initialisation code here -->
	<xsp:structure>
		<xsp:include>java.util.Map</xsp:include>
		<xsp:include>java.util.Hashtable</xsp:include>
		<xsp:include>java.util.Iterator</xsp:include>
		<xsp:include>org.astrogrid.portal.query.AstPortalQuery</xsp:include>
		<xsp:include>org.astrogrid.portal.session.AstPortalSession</xsp:include>
		<xsp:include>org.astrogrid.portal.explorer.AstPortalView</xsp:include>
	</xsp:structure>
	<!-- Class level code here -->
	<xsp:logic>
		<![CDATA[
		//
		// Our current AstSession.
		protected AstPortalSession root = null ;
		//
		// Local class for action handlers.
		protected abstract class ActionHandler
			{
			//
			// Public constructor.
			public ActionHandler(String name)
				{
				this.name  = name  ;
				}
			//
			// Our action name.
			protected String name ;
			//
			// Display our action.
			public abstract void display()
				throws SAXException, IOException, ProcessingException ;
			//
			// Handle our action.
			public abstract void perform()
				throws SAXException, IOException, ProcessingException ;
			}
		//
		// Our list of action handlers.
		protected Map handlers = new Hashtable() ;
		//
		// Add a new action handler.
		protected void addHandler(ActionHandler handler)
			{
			handlers.put(handler.name, handler) ;
			}
		//
		// Get a handler for an action.
		ActionHandler getHandler(String name)
			{
			return (ActionHandler) handlers.get(name) ;
			}
		//
		// Initialise our handlers.
		{
		addHandler(
			new ActionHandler("new-query")
				{
				public void display()
					throws SAXException, IOException, ProcessingException
					{
					newQueryDisplay(this) ;
					}
				public void perform()
					throws SAXException, IOException, ProcessingException
					{
					newQueryAction(this) ;
					}
				}
			) ;
		addHandler(
			new ActionHandler("new-view")
				{
				public void display()
					throws SAXException, IOException, ProcessingException
					{
					newViewDisplay(this) ;
					}
				public void perform()
					throws SAXException, IOException, ProcessingException
					{
					newViewAction(this) ;
					}
				}
			) ;
		addHandler(
			new ActionHandler("del-view")
				{
				public void display()
					throws SAXException, IOException, ProcessingException
					{
					delViewDisplay(this) ;
					}
				public void perform()
					throws SAXException, IOException, ProcessingException
					{
					delViewAction(this) ;
					}
				}
			) ;
		}

		//
		// Display our new-query action.
		public void newQueryDisplay(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
			</xsp:element>
			<![CDATA[
			}

		//
		// Perform our new-query action.
		public void newQueryAction(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			AstPortalQuery query = root.createQuery() ;
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
				<params/>
				<result>
					<xsp:logic>
						<![CDATA[
						if (null != query)
							{
							]]>
							<xsp:element name="query">
								<xsp:attribute name="ident"><xsp:expr>query.getIdent()</xsp:expr></xsp:attribute>
							</xsp:element>
							<![CDATA[
							}
						]]>
					</xsp:logic>
				</result>
			</xsp:element>
			<![CDATA[
			}

		//
		// Display our new-view action.
		public void newViewDisplay(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
				<xsp:element name="params">
					<param type="text" name="path" value="*"/>
				</xsp:element>
			</xsp:element>
			<![CDATA[
			}

		//
		// Perform our new-view action.
		public void newViewAction(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			//
			// Get the path from the request params.
			String path = request.getParameter("path") ;
			//
			// If we got a path.
			if ((null != path) && (path.length() > 0))
				{
				AstPortalView view = root.createView(path) ;
				]]>
				<xsp:element name="action">
					<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
					<params>
						<param name="path">
							<xsp:attribute name="value"><xsp:expr>path</xsp:expr></xsp:attribute>
						</param>
					</params>
					<result>
						<xsp:logic>
							<![CDATA[
							if (null != view)
								{
								]]>
								<xsp:element name="view">
									<xsp:attribute name="ident"><xsp:expr>view.getIdent()</xsp:expr></xsp:attribute>
									<xsp:attribute name="path"><xsp:expr>view.getPath()</xsp:expr></xsp:attribute>
								</xsp:element>
								<![CDATA[
								}
							]]>
						</xsp:logic>
					</result>
				</xsp:element>
				<![CDATA[
				}
			}

		//
		// Display our del-view action.
		public void delViewDisplay(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			]]>
			<xsp:element name="action">
				<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
				<xsp:element name="params">
					<param name="ident" type="ident"/>
				</xsp:element>
			</xsp:element>
			<![CDATA[
			}

		//
		// Perform our del-view action.
		public void delViewAction(ActionHandler handler)
			throws SAXException, IOException, ProcessingException
			{
			AttributesImpl xspAttr = new AttributesImpl();
			//
			// Get the ident from the request params.
			String ident = request.getParameter("ident") ;
			//
			// If we got an ident.
			if ((null != ident) && (ident.length() > 0))
				{
				root.deleteView(ident) ;
				]]>
				<xsp:element name="action">
					<xsp:attribute name="name"><xsp:expr>handler.name</xsp:expr></xsp:attribute>
					<xsp:element name="params">
						<param name="ident">
							<xsp:attribute name="value"><xsp:expr>ident</xsp:expr></xsp:attribute>
						</param>
					</xsp:element>
					<result/>
				</xsp:element>
				<![CDATA[
				}
			}

		]]>
	</xsp:logic>
	<page>
		<!-- Request level code here -->
		<xsp:logic>
			<![CDATA[
				//
				// Load our AstSession from our HttpSession.
				root = (AstPortalSession) session.getAttribute(AstPortalSession.HTTP_SESSION_TAG) ;
				//
				// If we havn't got one yet.
				if (null == root)
					{
					//
					// Create a new AstSession.
					root = new AstPortalSession() ;
					//
					// Add it to our HttpSession.
					session.setAttribute(AstPortalSession.HTTP_SESSION_TAG, root) ;
					}
			]]>
		</xsp:logic>

		<!-- List of the available page actions -->
		<actions>
			<xsp:logic>
				<![CDATA[
				Iterator actions = handlers.values().iterator() ;
				while (actions.hasNext())
					{
					ActionHandler handler = (ActionHandler) actions.next() ;
					handler.display() ;
					}
				]]>
			</xsp:logic>
		</actions>

		<!-- Process the current request action -->
		<request>
			<xsp:logic>
				<![CDATA[
					//
					// Get our request action.
					String action = parameters.getParameter("action", null) ;
					//
					// If we have a request action.
					if (null != action)
						{
						//
						// Find a handler for our action.
						ActionHandler handler = getHandler(action) ;
						//
						// If we found a handler.
						if (null != handler)
							{
							//
							// Perform our action.
							handler.perform() ;
							}
						}
				]]>
			</xsp:logic>
		</request>

		<!-- Details of the current session -->
		<xsp:element name="session">
			<xsp:attribute name="ident"><xsp:expr>root.getIdent()</xsp:expr></xsp:attribute>
			<!-- A list of the session queries -->
			<queries>
				<xsp:logic>
					<![CDATA[
					Iterator queries = root.getCurrentQueries() ;
					while (queries.hasNext())
						{
						AstPortalQuery query = (AstPortalQuery) queries.next() ;
						]]>
						<xsp:element name="query">
							<xsp:attribute name="ident"><xsp:expr>query.getIdent()</xsp:expr></xsp:attribute>
						</xsp:element>
						<![CDATA[
						}
					]]>
				</xsp:logic>
			</queries>
			<!-- A list of the current explorer views -->
			<views>
				<xsp:logic>
					<![CDATA[
					Iterator views = root.getCurrentViews() ;
					while (views.hasNext())
						{
						AstPortalView view = (AstPortalView) views.next() ;
						]]>
						<xsp:element name="view">
							<xsp:attribute name="ident"><xsp:expr>view.getIdent()</xsp:expr></xsp:attribute>
							<xsp:attribute name="path"><xsp:expr>view.getPath()</xsp:expr></xsp:attribute>
						</xsp:element>
						<![CDATA[
						}
					]]>
				</xsp:logic>
			</views>
		</xsp:element>
	</page>
</xsp:page>
