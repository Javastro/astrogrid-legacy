<?xml version="1.0" encoding="UTF-8"?>
<!--+
    | This is the 'heart' of Cocoon. The sitemap maps URI space to 
    | resources. It consists basicaly of two parts: components and
    | pipelines. Pipelines are made out of components. There is such a
    | vast number of components available that it would be impossible to
    | describe them here, please refer to the accompanying
    | documentation. For specific components, have a look also at the
    | javadocs for them. Most pipelines are present to demonstrate some
    | feature or technique, often they are explained in more detail in 
    | the accompanying documentation. The sitemaps which come with each
    | sample and each block will help to explain.
    |
    | CVS $Id: sitemap.xmap,v 1.5 2005/07/08 11:30:58 clq2 Exp $
    +-->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

<!-- =========================== Components ================================ -->

  <map:components>

    <map:generators default="file"/>

    <map:transformers default="xslt"/>

    <map:serializers default="html"/>

    <map:readers default="resource"/>

    <map:matchers default="wildcard"/>

    <map:selectors default="browser"/>

    <map:actions>
      <!--+
          | AstroGrid Actions.
          +-->
      <!--
        Change a user's password.
        -->
      <map:action
          name="change-password"
          logger="sitemap.action.change-password"
          src="org.astrogrid.portal.home.acting.ChangePasswordAction"/>
          
    </map:actions>

    <map:pipes></map:pipes>

  </map:components>

<!-- =========================== Views =================================== -->

  <map:views></map:views>

<!-- =========================== Resources ================================= -->

  <map:resources>
  </map:resources>

<!-- ========================== Action sets ================================ -->

  <map:action-sets></map:action-sets>

<!-- =========================== Pipelines ================================= -->

	<map:pipelines>
		<map:component-configurations>
			<global-variables>
				<!--+
           | Define global parameters here:
           |   <skin>my_skin</skin>
           |   ...
           | You can access them by {global:*name*}, e.g. {global:skin}.
           | These values are inherited into sub-sitemaps and can
           | be extended there.
           +-->
			</global-variables>
		</map:component-configurations>

  <!-- main pipeline -->
    <map:pipeline>
    
      <!-- map:match type="sessionstate" pattern="*">
        <map:parameter name="attribute-name" value="user" / -->     
        <map:match pattern="*/df75hs3-8s7d5a">
          <map:act type="change-password">
            <map:generate src="web/dynamic/userData.xsp" type="serverpages" label="000" />
            <map:transform type="xslt" src="web/style/xsl/userData.xsl">
              <map:parameter name="password-change" value="{password-change}" />
            </map:transform>   
            <map:transform src="cocoon://xml2html.xsl"/>    
            <map:serialize type="xml" />
          </map:act>
        </map:match>
      <!-- /map:match -->

      <!-- Webstart Apps match added here rather than creating a whole branch for 1 page -->
      <map:match pattern="webstartApps">
          <map:generate type="serverpages" src="web/dynamic/webstartApps.xsp" />
          <map:transform type="xslt" src="web/style/xsl/webstartApps.xsl" />
          <map:serialize type="xml" />
      </map:match>

      <!-- Webstart Apps match added here rather than creating a whole branch for 1 page -->
      <map:match pattern="webstartApps">
          <map:generate type="serverpages" src="web/dynamic/webstartApps.xsp" />
          <map:transform type="xslt" src="web/style/xsl/webstartApps.xsl" />
          <map:serialize type="xml" />
      </map:match>
      
      <!-- xml -->
      <map:match pattern="**.xml">
        <map:generate type="file" src="web/static/{1}.xml"/>
        <map:transform src="web/style/xsl/basicScenario.xsl"/>
        <map:transform src="cocoon://xml2html.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

      <!-- xsp -->
      <map:match pattern="**.xsp">
	<!--
        <map:generate type="serverpages" src="{1}/script.xsp"/>
	-->
        <map:generate type="serverpages" src="{1}/script.xsp"/>
        <map:transform src="{1}/stylesheet.xsl"/>
        <map:transform src="cocoon://xml2html.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

      <!-- vanilla scenary -->
      <map:match pattern="**.scn">
        <map:generate type="serverpages" src="web/dynamic/{1}.xsp"/>
        <map:transform src="web/style/xsl/{1}.xsl"/>
        <map:transform src="cocoon://xml2html.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

      <map:match pattern="*/**.SCN">
        <map:generate type="serverpages" src="{1}/{2}.xsp"/>
        <map:transform src="{1}/{2}.xsl"/>
        <map:transform src="cocoon://xml2html.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

    <!-- images -->
      <map:match pattern="*.gif">
        <map:read mime-type="images/gif" src="web/images/{1}.gif"/>
      </map:match>
      <map:match pattern="*.jpg">
        <map:read mime-type="images/jpeg" src="web/images/{1}.jpg"/>
      </map:match>
      <map:match pattern="*.png">
        <map:read mime-type="images/png" src="web/images/{1}.png"/>
      </map:match>

    <!-- CSS stylesheets -->
      <map:match pattern="*.css">
        <map:read mime-type="text/css" src="web/style/css/{1}.css"/>
      </map:match>

    <!-- XSLT stylesheets -->
      <map:match pattern="*.xsl">
        <map:generate type="file" src="web/style/xsl/{1}.xsl"/>
        <map:serialize type="xml"/>
      </map:match>

    <!-- JavaScript scripts -->
      <map:match pattern="*.js">
        <map:read mime-type="text/javascript" src="web/scripts/{1}.js"/>
      </map:match>
    </map:pipeline>
  </map:pipelines>

</map:sitemap>
