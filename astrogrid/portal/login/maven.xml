<?xml version="1.0" ?>
<!--+
    | <cvs:source>$Source: /Users/pharriso/Work/ag/repo/git/astrogrid-mirror/astrogrid/portal/login/maven.xml,v $</cvs:source>
    | <cvs:author>$Author: jdt $</cvs:author>
    | <cvs:date>$Date: 2004/03/26 15:12:42 $</cvs:date>
    | <cvs:version>$Revision: 1.9 $</cvs:version>
    | <cvs:log>
    |   $Log: maven.xml,v $
    |   Revision 1.9  2004/03/26 15:12:42  jdt
    |   Mods to create an "uberwar" for ease of deployment.
    |
    |   Revision 1.8  2004/03/25 15:13:31  jdt
    |   Added a new depdendency and fixed the annoying JDepend bug.
    |
    |   Revision 1.7  2004/03/24 18:31:33  jdt
    |   Merge from PLGN_JDT_bz#201
    |
    |   Revision 1.6.16.1  2004/03/24 18:17:16  jdt
    |   Copies itsself to the parent project to allow the building of an uberwar.
    |
    |   Revision 1.6  2004/01/09 16:05:42  dave
    |   Tried adding menu items
    |
    |   Revision 1.5  2004/01/09 13:18:08  dave
    |   Shuffled things round for Maven build
    |
    | </cvs:log>
    |
    +-->
<project
    xmlns:jelly="jelly:core"
    xmlns:maven="jelly:maven"
    xmlns:ant="jelly:ant"
    xmlns:deploy="deploy"
    xmlns:util="jelly:util"
    xmlns:doc="doc"
    default="jar:jar">

	<!--+
		| Out Tomcat installation.
	<ant:property name="tomcat.home"    value="${env.CATALINA_HOME}"/>
		+-->
	<ant:property name="tomcat.home"    value="/usr/java/servers/tomcat/jakarta-tomcat-4.1.24-LE-jdk14"/>

    <!--+
        | Portal properties.
        +-->
    <property name="portal.name" value="astrogrid-portal"/>
    <property name="portal.home" value="${tomcat.home}/webapps/${portal.name}"/>

	<!--+
		| Deploy our 3rd party jars.
		+-->
	<goal name="deploy.depends">
		<ant:copy verbose="true" todir="${portal.home}/WEB-INF/lib" file="${pom.getDependencyPath('jconfig:jconfig')}"/>
		<ant:copy verbose="true" todir="${portal.home}/WEB-INF/lib" file="${pom.getDependencyPath('astrogrid-community:astrogrid-community-auth-client')}"/>
		<ant:copy verbose="true" todir="${portal.home}/WEB-INF/lib" file="${pom.getDependencyPath('astrogrid-community:astrogrid-community-policy-client')}"/>
	</goal>

	<!--+
		| Deploy our class files.
		+-->
	<goal name="deploy.classes">
		<ant:copy verbose="true" todir="${portal.home}/WEB-INF/classes">
			<ant:fileset dir="${maven.build.dir}/classes"/>
		</ant:copy>
	</goal>

	<!--+
		| Deploy our site files.
		+-->
	<goal name="deploy.site">
		<ant:mkdir dir="${portal.home}/mount/login"/>
		<ant:copy verbose="true" todir="${portal.home}/mount/login">
			<ant:fileset dir="site">
				<ant:exclude name="//CVS//"/>
			</ant:fileset>
		</ant:copy>
	</goal>

	<!--+
		| Deploy our war file.
		+-->
	<goal name="deploy.war">
		<ant:unzip overwrite="true" src="${maven.build.dir}/${pom.artifactId}.war" dest="${portal.home}"/>
	</goal>


    <!--+
        | Config files location.
        | The default is to put the config files in '/etc/astrogrid'.
        | However, most systems require root permissions to create the directories in '/etc'.
        | Change this property if you want to relocate the config files.
        +-->
    <property name="config.home" value="/etc/astrogrid/community"/>

    <!--+
        | Configure our webapp JNDI property.
        | This needs to be run after Tomcat has unpacked the webapp war file.
        | It would be nice to use a 'global' JNDI property for all the webapps,
        | but it looks like this does not work in Tomcat 4.1.24.
        +-->
    <goal name="config.jndi">
        <!-- Fix the Maven jaxp properties -->
        <jelly:expr value="${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}"/>
        <!-- Copy the existing web.xml to a backup file -->
        <ant:copy file="${portal.home}/WEB-INF/web.xml" tofile="${portal.home}/WEB-INF/web.xml.old" overwrite="true" failonerror="false"/>
        <!-- Patch the web.xml to fix the DTD -->
        <ant:replace file="${portal.home}/WEB-INF/web.xml" token="web-app_2.2.dtd" value="web-app_2_2.dtd"/>
        <!-- Transform the target web.xml, adding our JNDI property -->
        <ant:xslt style="src/ant/xsl/webapp.xsl"
              in="${portal.home}/WEB-INF/web.xml"
              out="${portal.home}/WEB-INF/web.xml.new">
            <outputproperty name="method" value="xml"/>
            <outputproperty name="indent" value="yes"/>
            <!-- Set the XSL params -->
            <param name="property.name"  expression="org.astrogrid.community.config"/>
            <param name="property.value" expression="${config.home}/astrogrid-community-config.xml"/>
        </ant:xslt>
        <!-- Replace the existing web.xml with the new one -->
        <ant:move file="${portal.home}/WEB-INF/web.xml.new" tofile="${portal.home}/WEB-INF/web.xml" overwrite="true" failonerror="false"/>
    </goal>


	<!--+
		| Move the web source into the subcomponent directory.
		+-->
	<postGoal name="war:webapp">
		<jelly:set var="webapp.dir" value="${pom.getPluginContext('maven-war-plugin').getVariable('maven.war.webapp.dir')}"/>

		<jelly:set var="webapp.dir.mount" value="${webapp.dir}/mount"/>
		<jelly:set var="webapp.dir.mount.component" value="${webapp.dir.mount}/login"/>

		<ant:mkdir dir="${webapp.dir.mount}"/>
		<ant:mkdir dir="${webapp.dir.mount.component}"/>

		<ant:move todir="${webapp.dir.mount.component}">
			<ant:fileset dir="${webapp.dir}/web"/>
		</ant:move>

		<ant:move todir="${webapp.dir.mount.component}">
			<ant:fileset dir="${webapp.dir}">
				<ant:filename name="sitemap.xconf"/>
			</ant:fileset>
		</ant:move>

		<ant:move todir="${webapp.dir.mount.component}">
			<ant:fileset dir="${webapp.dir}">
				<ant:include name="sitemap.xmap"/>
				<ant:include name="maven.log"/>
			</ant:fileset>
		</ant:move>
		
	    <echo message="${webapp.dir}"/>
        <copy todir="../target/astrogrid-portal" overwrite="yes">
            <fileset dir="${webapp.dir}" />
        </copy> 
    </postGoal>

	<preGoal name="site">
		<mkdir dir="target/classes"/>
		<!--fix annoying jdepend bug-->
	</preGoal>
	
	<!--Copy myself into parent project to create uberjar-->
	<postGoal name="war:war">
        <jelly:set var="webapp.dir" value="${pom.getPluginContext('maven-war-plugin').getVariable('maven.war.webapp.dir')}"/>
        <echo message="${webapp.dir}"/>
        <copy todir="../target/astrogrid-portal" overwrite="yes">
            <fileset dir="${webapp.dir}" />
        </copy> 
    </postGoal>

</project>
