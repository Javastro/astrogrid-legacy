<project name="install" default="install-portal" basedir=".">
 
    
    <property file="default.properties"/>
    <property name="portal.temporary.dir" value="portal-tmp"/>
    <property name="portal.war" value="${maven.local.repo}/${astrogrid.groupId}/wars/${portal.war.name}"/>
    <property name="local.portal.war" value="${basedir}/portal.war"/>
    <property name="portal.contextpath" value="/astrogrid-portal"/> <!--This cannot be changed at the moment-->
    
    <target name="checkTomcat">
        <input addProperty="input.tomcat.present" validargs="yes,no"> Is Tomcat running on your system with the Manager app enabled? </input>
        <condition property="tomcat.present.true">
            <equals arg1="${input.tomcat.present}" arg2="yes"/>
        </condition>
        <fail message="Please start Tomcat and retry the installation" unless="tomcat.present.true"/>
        <input addProperty="input.tomcat.url" defaultvalue="http://127.0.0.1:8080"> Please enter the URL of Tomcat on your system </input>
        <input addProperty="input.tomcat.manager.user" defaultvalue="tomcat"> Please enter the Tomcat manager username </input>
        <input addProperty="input.tomcat.manager.pass" defaultvalue="tomcat"> Please enter the Tomcat manager password </input>
        <echo>Attempting to contact Tomcat Manager...</echo>
        <tempfile property="page.check"/>
        <property name="tomcat.manager.url" value="${input.tomcat.url}/manager"/>
        <get src="${tomcat.manager.url}" dest="${page.check}" username="${input.tomcat.manager.user}" password="${input.tomcat.manager.pass}"/>
        <echo>...OK</echo>
    </target>
    
    <target name="checkRegistry">
        <input addProperty="input.astrogrid.registry.endpoint" defaultvalue="http://galahad.star.le.ac.uk:8080/galahad-registry/"> Please enter the URL of your registry end-point </input>
    	<property name="astrogrid.registry.endpoint" value="${input.astrogrid.registry.endpoint}"/>
        <echo>Attempting to contact the registry query endpoint...</echo>
        <tempfile property="page.check"/>
        <get src="${astrogrid.registry.endpoint}${astrogrid.registry.query.offset}" dest="${page.check}"/>
        <echo>...OK</echo>
    </target>
    
    <!--consider downloading this to the maven repository, rather than a temp folder-->
    <target name="downloadPortal" unless="offline">
    	<mkdir dir="${maven.local.repo}/${astrogrid.groupId}/wars/"/>
    	<property name="continueifnodownload" value="false"/> <!--normlly stop here, if we can't download..can be overridden in AGINAB to allow use of local files-->
        <get src="${astrogrid.repo}/${astrogrid.groupId}/wars/${portal.war.name}" dest="${portal.war}" verbose="true" usetimestamp="true" ignoreerrors="${continueifnodownload}"/> 
    </target>
    <target name="install-portal" description="Install the AstroGrid Portal" depends="checkTomcat, checkRegistry, downloadPortal, portal-deploy">
        <echo>***The Portal has been successfully installed***</echo>
        <echo>Click Done to exit</echo>
    	<property name="portal.installed" value="true"/>
    </target>
	

	
    <target name="uninstall-portal" description="Uninstall the AstroGrid Portal" depends="checkTomcat,  portal-undeploy">
    	<sleep seconds="10" description="Allow Tomcat to catch up"/>
        <echo>***The Portal has been successfully removed***</echo>
        <echo>Click Done to exit</echo>
    	<property name="portal.uninstalled" value="true"/>
    </target>    
    
    <target name="save-settings" description="Save your settings for next time">
        <input addProperty="input.saveProperties.file" defaultvalue="${user.home}/.portal-installer.properties">
            Enter a file name for saving your current settings
        </input>
        <echoproperties destfile="${input.saveProperties.file}" prefix="input." description="This file can then be reused for hands-free operation"/>
    	<property name="properties.saved" value="true"/>
    </target>
    <target name="load-settings" description="Load previously saved settings">
    	<input addProperty="input.loadProperties.file" defaultvalue="${user.home}/.portal-installer.properties">
            Enter the filename of your previously saved settings
        </input>
    	<property file="${input.loadProperties.file}"/>
    </target>
    
    <target name="createTmpDir">
        <mkdir dir="${portal.temporary.dir}"/>
    </target>
	
    <!-- Configure the custom Ant tasks for the Manager application -->
	<!-- The reason for making these optional is that they might be already
	     set by an enclosing Maven? script-->
	<target name="define-custom-tasks" unless="tasks.already.set">
    	<taskdef name="tomcat-deploy" classname="org.apache.catalina.ant.DeployTask" />	
	    <taskdef name="tomcat-remove" classname="org.apache.catalina.ant.RemoveTask" />
	</target>
	
	
    <target name="portal-deploy" depends="define-custom-tasks,createTmpDir,checkTomcat,checkRegistry,downloadPortal,updatePortalWar">
        <tomcat-deploy update="true" url="${tomcat.manager.url}" username="${input.tomcat.manager.user}" password="${input.tomcat.manager.pass}" 
            path="${portal.contextpath}" war="${local.portal.war}" />
    </target>
    <target name="portal-undeploy" depends="define-custom-tasks,checkTomcat">
        <tomcat-remove url="${tomcat.manager.url}" username="${input.tomcat.manager.user}" password="${input.tomcat.manager.pass}" 
            path="${portal.contextpath}"  />
    </target>    
	
	<target name="input-email-settings">
		<echo>To enable emails to be sent to users requesting accounts, you need to configure the portal to use an SMTP email server</echo>
		<input addproperty="input.mail.server" defaultvalue="127.0.0.1">Enter the address of your SMTP server</input>
		<input addproperty="input.mail.user" defaultvalue="astrogrid">Enter a username for your SMTP server</input>
		<input addproperty="input.mail.pass" defaultvalue="">Enter a password for your SMTP server</input>
		<input addproperty="input.mail.from" defaultvalue="no-reply@${input.mail.server}">Enter the replyto: address</input>
		<input addproperty="input.mail.admin" defaultvalue="${user.name}@${input.mail.server}">Enter the Administrator email address</input>
	</target>
	
	<target name="input-jes-settings">
		<echo>In order to run workflows from the portal, you need to enter the location of your Job Entry System</echo>
		<input addproperty="input.astrogrid.jes.endpoint" defaultvalue="http://galahad.star.le.ac.uk:8080/astrogrid-jes">
        	Enter the location of your JES
		</input>
	</target>
	
    <target name="updatePortalWar" depends="downloadPortal, input-jes-settings, input-email-settings" description="This task extracts the web.xml from the war, runs an xslt on it, and puts it back in the war">
    	<!--extract existing web.xml-->
    	<unwar src="${portal.war}"
    	       dest="portal">
    	    <patternset>
    	        <include name="**/web.xml"/>
    	    </patternset>
    	</unwar>
    	
    	
        <filterset id="myfilter">
            <filter token="CENTRALREGISTRYQUERY" value="${astrogrid.registry.endpoint}${astrogrid.registry.query.offset}"/>
        	<filter token="CENTRALREGISTRYUPDATE" value="${astrogrid.registry.endpoint}${astrogrid.registry.update.offset}"/>
            <filter token="JOBENTRYSYSTEM" value="${input.astrogrid.jes.endpoint}" /> 
        	<filter token="SMTPSERVER" value="${input.mail.server}"/>
       		<filter token="SMTPUSER" value="${input.mail.user}"/>
       		<filter token="SMTPPASS" value="${input.mail.pass}"/>
        	<filter token="MAILFROM" value="${input.mail.from}"/>
        	<filter token="ADMINEMAIL" value="${input.mail.admin}"/>
        </filterset>
        <echo>Registry endpoint is ${astrogrid.registry.endpoint}</echo>
    	<!--Copy the web.xsl file, and hope that the Ant Tokens get filled in-->
        <copy todir="${portal.temporary.dir}/portal">
            <filterset refid="myfilter"/>
            <fileset dir="portal" />
        </copy>
    	<echo>Tranforming web.xml</echo>
    	<!--Transform the web.xml using the copied xslt-->
    	<xslt style="${portal.temporary.dir}/portal/web.xsl" in="${portal.temporary.dir}/portal/WEB-INF/web.xml" out="${portal.temporary.dir}/portal/WEB-INF/web2.xml"/>
    	<echo>Updating war with user supplied settings</echo>
        <copy file="${portal.war}" tofile="${local.portal.war}"/>
    	<!--update the web.xml, and login image file, if set-->
        <war update="yes" destfile="${local.portal.war}" webxml="${portal.temporary.dir}/portal/WEB-INF/web2.xml">
            <metainf dir="${portal.temporary.dir}/portal" />
        	<!--hardwire this in for now, though a bit fragile-->
        	<zipfileset fullpath="web/images/loginBackground.jpg" file="backGroundImg.jpg"/>
        </war>
    </target>
	<target name="customize-login-page" description="Customize the login page background">
		<input addproperty="input.login.image.file">
			Please enter the location of a jpeg for the login page background
		</input>
    	<copy file="${input.login.image.file}" tofile="backGroundImg.jpg"/>
    	<touch file="backGroundImg.jpg"/> <!--got to makesure it's newer than the one in the war file-->
	</target>
</project>
