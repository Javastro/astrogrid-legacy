/* Generated By: AdqlStoX.jjt,v 1.10 2007/07/13 15&JJTree: Do not edit this line. AST_RegionPredicate.java */

package org.astrogrid.adql;

import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.SchemaParticle; 
import org.apache.xmlbeans.QNameSet; 
import javax.xml.namespace.QName;
import org.astrogrid.adql.beans.RegionSearchType;
import org.astrogrid.adql.beans.NotInRegionSearchType;
import org.astrogrid.adql.beans.LinkedListType;
import org.astrogrid.stc.beans.*;
import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;

public class AST_RegionPredicate extends SimpleNode {

    private static Log log = LogFactory.getLog( AST_RegionPredicate.class ) ;
    
    private boolean in = true ;
    
  public AST_RegionPredicate(AdqlStoX p, int id) {
    super(p, id);
  }
  
  public void setIn( boolean in ) {
      this.in = in ;
  }
  
  public void buildXmlTree( XmlObject xo ) {
      if( log.isTraceEnabled() ) enterTrace( log, "AST_RegionPredicate.buildXmlTree()" ) ; 
      RegionSearchType rst ;
     
      if( in ) {
          rst = (RegionSearchType)xo.changeType( RegionSearchType.type ) ;
      }
      else {
          rst = (NotInRegionSearchType)xo.changeType( NotInRegionSearchType.type ) ;
      }
 
      
      LinkedListType llt = rst.addNewLinkedElements() ;
      this.setCurrentLinkedElementList( llt ) ; 
      children[0].buildXmlTree( rst.addNewPoint() ) ;
      children[1].buildXmlTree( rst.addNewRegion() ) ; 
      
      Node regionNode = children[1] ;
      RegionType rt = (RegionType)children[1].getGeneratedObject() ;
      
      AstroCoordSystemType acst = rst.addNewAstroCoordSystem() ;
      SpaceFrameType sft = acst.addNewSpaceFrame() ;    
      CoordRefFrameType crf = sft.addNewSpaceRefFrame() ;
      
      if( regionNode instanceof AST_CircleLatLon ) {
          
      }
      else if( regionNode instanceof AST_CircleJ2000 ) {
          QName qName = new QName( CoordRefFrameType.type.getName().getNamespaceURI(), "FK5") ;
          FkType srf = (FkType)crf.substitute( qName , FkType.type ) ;
          srf.setEquinox( "J2000" ) ;     
          sft.setSpaceRefFrame( srf ) ;
      }
      else if( regionNode instanceof AST_CircleCartesian ) {
          
      }
        
      String uid = this.formUniqueID( "AstroCoordSystem" ) ;
      rt.setCoordSystemId( uid) ;
      acst.setId( uid ) ;
      
      if( llt.getLinkedElementArray().length == 0 ) {
          rst.unsetLinkedElements() ;
      }
      this.generatedObject = rst ;
      super.buildXmlTree(rst) ;
      if( log.isTraceEnabled() ) exitTrace( log, "AST_RegionPredicate.buildXmlTree()" ) ; 
  }

}
