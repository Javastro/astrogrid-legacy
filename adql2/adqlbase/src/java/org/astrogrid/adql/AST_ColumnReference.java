/* Generated By: AdqlStoX.jjt,v 1.33.2.4 2006-12-19 14&JJTree: Do not edit this line. AST_ColumnReference.java */

package org.astrogrid.adql;

import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;
import org.astrogrid.adql.beans.*;
import org.apache.xmlbeans.XmlObject ;
import java.util.ArrayList;

public class AST_ColumnReference extends SimpleNode {
    
    private static Log log = LogFactory.getLog( AST_ColumnReference.class ) ;
    
    public AST_ColumnReference(AdqlStoX p, int id) {
        super(p, id);
    }

    public void buildXmlTree( XmlObject xo ) {   
      if( log.isTraceEnabled() ) enterTrace( log, "AST_ColumnReference.buildXmlTree()" ) ; 
      
      getTracker().setType( ColumnReferenceType.type ) ;     
      ColumnReferenceType crt = (ColumnReferenceType)xo.changeType( ColumnReferenceType.type ) ;
      
//      ArrayList dotQualifications ;
//      if( jjtGetNumChildren() > 1 ) {
//          dotQualifications = (ArrayList) children[0].getGeneratedObject() ;
//          dotQualifications.add( children[1].getGeneratedObject() ) ;  
//      }
//      else {
//          dotQualifications = new ArrayList() ;
//          dotQualifications.add( children[0].getGeneratedObject() ) ;  
//      }   
      
      int childCount = jjtGetNumChildren() ;
      if( childCount > 4 ) {
          this.getTracker().setError( "Invalid column reference: too many qualifiers." ) ;
      }
      else {
//          String[] names = new String[ dotQualifications.size() ] ;
//          names = (String[])dotQualifications.toArray( names ) ;
          
          for( int i=0; i<childCount; i++ ) {
              if( i==0 ) {
                  crt.setName( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
              }
              else if( i==1 ) {
                  crt.setTable( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
              }
              else if( i==2 ) {
                  crt.setSchema( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
              }
              else if( i==3 ) {
                  crt.setCatalog( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
              }
          }
      }                         
      setGeneratedObject( crt ) ;
      super.buildXmlTree (crt ) ;
      if( log.isTraceEnabled() ) exitTrace( log, "AST_ColumnReference.buildXmlTree()" ) ; 
  }

}
