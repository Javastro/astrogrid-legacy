/* Generated By: AdqlStoX.jjt,v 1.34.2.17 2007/04/24 14&JJTree: Do not edit this line. AST_TableName.java */

package org.astrogrid.adql;

import java.util.ArrayList;

import org.apache.commons.logging.Log ;
import org.apache.commons.logging.LogFactory ;
import org.apache.xmlbeans.XmlObject;
import org.astrogrid.adql.beans.TableType;


public class AST_TableName extends SimpleNode {

    private static Log log = LogFactory.getLog( AST_TableName.class ) ;

    public AST_TableName(AdqlStoX p, int id) {
        super(p, id);
    }
    

    /* (non-Javadoc)
     * @see org.astrogrid.adql.SimpleNode#buildXmlTree(org.apache.xmlbeans.XmlObject)
     */
    public void buildXmlTree(XmlObject xo) {
        if( log.isTraceEnabled() ) enterTrace( log, "AST_TableName.buildXmlTree()" ) ;
        TableType tt = (TableType)xo.changeType( TableType.type ) ;
        
        int childCount = jjtGetNumChildren() ;
        if( childCount > 3 ) {
            this.getTracker().setError( "Invalid table reference: too many qualifiers." ) ;
        }
        else {
            for( int i=0; i<childCount; i++ ) {
                if( i==0 ) {
                    tt.setName( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
                }
                else if( i==1 ) {
                    tt.setSchema( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
                }
                else if( i==2 ) {
                    tt.setCatalog( (String)children[childCount - (i+1) ].getGeneratedObject() ) ;
                }
            }
        }  
        
        this.generatedObject = tt ;
        super.buildXmlTree( tt );
        if( log.isTraceEnabled() ) exitTrace( log, "AST_TableName.buildXmlTree()" ) ; 
        
    }
    
    

}
