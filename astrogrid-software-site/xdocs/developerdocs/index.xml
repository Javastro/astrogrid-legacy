<?xml version="1.0"?>
<document>
    <properties>
        <title>Information for Developers</title>
        <author email="nw@jb.man.ac.uk">nw@jb.man.ac.uk</author>
    </properties>
    <body>
                <section name="Calling AstroGrid Services">
                        This section describes how to write programs that use AstroGrid services.
						<subsection name="Astronomy Client Runtime (ACR)"><p>
							The <b>ACR</b> is a programming interface provided by 
							the <a href="../userdocs/workbench.html">Astrogrid Workbench</a>. It presents a simple facade from which to call VO services, and hides the complexity of the system
							(e.g. the configuration, authentication, service resolution, etc).
							</p>
							<p>
							The ACR can be accessed via JavaRMI, XMLRPC or HTTP. To date the interface has been called from Python, Perl, Java, C++ and C#.
							The interface is suitable both for light scripting work (for example automating execution of a series of astronomical data queries and processing stems); and for
							accessing VO services from other UI applications (e.g. Aladin).							
						</p>
						<p>
							The functions of the ACR and the various ways to connect to the runtime are documented here:<br />
							<a href="http://www.astrogrid.org/maven/docs/HEAD/desktop/multiproject/acr-interface/apidocs/index.html">http://www.astrogrid.org/maven/docs/HEAD/desktop/multiproject/acr-interface/apidocs/index.html</a>
							</p>
						</subsection>
						
						<subsection name="Client Development Kits"><p>
							An alternative lower level method to connect to AstroGrid services is to use the Java client-side libraries and web-service stubs used internally in the system.
							The libraries, and their dependencies, are distributed as <a href="cdk.html">Client Development Kits</a>. However, the libraries are only usable from Java programs, and expose 
							developers to the internals of the AstroGrid system.
						</p></subsection>	
	
						<subsection name="Web Service Interfaces"><p>
							It's also possible to call the SOAP web services directly. This is the most basic access method,
							and requires extensive understanding of the VO system - authentication, service location and other low-level
							concerns all have to be handled by the client programmer.
							</p>
							<p>
								The set of WSDL and XML Schema that define the AstroGrid web services are available <a href="../schemata/index.html">here</a>
						</p></subsection>
                </section>
    	
    	<section name="Architecture">
    		<p>
    		An introduction to the 
    		<a href="astrogrid-v1.1-architecture.htm">software architecture of the Astrogrid v1.1 system</a> 
    	  was prepared for the AstroGrid Oversight Committee of September 2005. A
    	  <a href="astrogrid-v1.1-architecture.doc">MS-Word version of the architecture document</a> 
    	  is also available.
    	  Please note that this architecture document is introductory rather than complete. Some aspects 
    	  of the system are omitted or simplified.
    	  </p>
			<p>
				Note that AG v1.1 and AG 2007.1 share the same Architecture documentation.
			</p>
    	</section>
		
		<section name="Using or Contributing to AstroGrid Source Code"><p>	
			See <a href="source.html">Working with AstroGrid Source</a> For AG2007.1 source code quick download, download from  <a href="http://www.astrogrid.org/maven/org.astrogrid/source/astrogrid.source.2007.1.tar.gz"> here </a>
                        </p></section>
    </body>
</document>
