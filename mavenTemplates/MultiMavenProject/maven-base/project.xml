<project>
    <extend>${basedir}/../../maven-base/project.xml</extend>
    <name>Multiproject Example Base</name>
    <description>This POM is purely to provide a base for common settings between the MultiMavenProject subprojects.  It is
not used to build a subproject of its own.  This base POM in turn extends a global maven-base POM used to defined settings
across all Astrogrid components.</description>
    <shortDescription>An example base POM</shortDescription>
    <!--
        This is set in astrogrid/maven-base, but is incorrect for this project since
        it is not a "standard" astrogrid project
    -->
    <repository>
        <connection>scm:cvs:pserver:anoncvs@cvs.astrogrid.org:/devel:mavenTemplates/MultiMavenProject</connection>
        <developerConnection>scm:cvs:ext:${maven.username}@cvs.astrogrid.org:/devel:mavenTemplates/MultiMavenProject</developerConnection>
        <url>http://www.astrogrid.org/viewcvs/mavenTemplates/MultiMavenProject/</url>
    </repository>
    <!--we have this common structure for all subprojects-->
    <build>
        <sourceDirectory>src/java</sourceDirectory>
        <unitTestSourceDirectory>test/java</unitTestSourceDirectory>
        <unitTest>
            <includes>
                <include>**/*Test.java</include>
            </includes>
        </unitTest>
    </build>
    <!--
        Dependencies common to *all* subcomponents
        When a subproject extends this POM, normally its tags override any
        settings defined here.  However, in the case of dependencies the
        dependencies are added to the ones defined here
     -->
    <dependencies>
    	<dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.3</version>
            <properties>
    			<war.bundle>${war.bundle}</war.bundle>
    		</properties>
        </dependency>
    </dependencies>
</project>